{"version":3,"sources":["n1-main/m1-ui/u2-components/Header/Header.module.css","n1-main/m1-ui/u3-common/Super-Components/c3-SuperCheckbox/SuperCheckbox.module.css","n2-features/f3-error/Error404.module.css","n1-main/m1-ui/u3-common/Super-Components/c1-SuperInputText/SuperInputText.module.css","n1-main/m1-ui/u3-common/Super-Components/c2-SuperButton/SuperButton.module.css","n1-main/m1-ui/u2-components/Main/Main.module.css","n1-main/m1-ui/u3-common/Super-Components/c7-Preloader/Preloader.module.css","n1-main/m1-ui/u3-common/Super-Components/c4-SuperEditableSpan/SuperSpan.module.css","n1-main/m1-ui/u3-common/Super-Components/c5-SuperSelect/SuperSelect.module.css","n1-main/m1-ui/u1-app/App.module.css","n3-dall/api/api_cards.ts","n1-main/m1-ui/u1-app/app-reducer.ts","n2-features/f1-auth/a1-login/login-reducer.ts","n2-features/f1-auth/a2-register/register-reducer.ts","n2-features/f1-auth/a4-new-password/newPassword-reducer.ts","n1-main/m2-bll/store/redux-store.ts","n2-features/f1-auth/a3-recoveryPassword/recoveryPassword-reducer.ts","n2-features/f1-auth/a5-profile/profile-reducer.ts","n1-main/m1-ui/u3-common/Super-Components/c1-SuperInputText/SuperInputText.tsx","n1-main/m1-ui/u3-common/Super-Components/c2-SuperButton/SuperButton.tsx","n1-main/m1-ui/u3-common/Super-Components/c7-Preloader/Preloader.tsx","n1-main/m1-ui/u3-common/CommonForm/CommonForm.tsx","n2-features/f1-auth/a1-login/Login.tsx","n2-features/f1-auth/a3-recoveryPassword/RecoveryPassword.tsx","n2-features/f1-auth/a4-new-password/NewPassword.tsx","n1-main/m1-ui/u3-common/Super-Components/c3-SuperCheckbox/SuperCheckbox.tsx","n1-main/m1-ui/u3-common/Super-Components/c4-SuperEditableSpan/SuperEditableSpan.tsx","n1-main/m1-ui/u3-common/Super-Components/c5-SuperSelect/SuperSelect.tsx","n1-main/m1-ui/u3-common/Super-Components/c6-SuperRadio/SuperRadio.tsx","n2-features/f0-test/Test.tsx","n2-features/f3-error/Error404.tsx","n1-main/m1-ui/u2-components/Profile/Profile.tsx","n2-features/f1-auth/a2-register/Register.tsx","n1-main/m1-ui/u4-routes/Routes.tsx","n1-main/m1-ui/u2-components/Header/Header.tsx","n1-main/m1-ui/u2-components/Main/Main.tsx","n1-main/m1-ui/u1-app/App.tsx","reportWebVitals.ts","index.tsx","n1-main/m1-ui/u3-common/CommonForm/CommonForm.module.css"],"names":["module","exports","instance","axios","create","baseURL","withCredentials","recoveryPasswordApi","email","from","message","post","password","resetPasswordToken","loginApi","user","rememberMe","delete","registerApi","SET_ERROR","CHANGE_STATUS","initialState","error","status","changeStatusAC","type","SET_IS_LOGGED_IN","SET_IS_LOGGED_OUT","SET_IS_AM_AUTH","profile","isLoggedIn","isAmAuth","loginTC","dispatch","then","logInAC","alert","catch","err","console","log","logOutTC","SET_REGISTER_DATA","isRegister","registerUser","res","data","addedUser","_id","length","e","response","isPasswordChanged","rootReducer","combineReducers","app","state","action","login","register","recoveryPassword","newPassword","value","store","createStore","applyMiddleware","thunk","window","SuperInputText","onChange","className","onKeyPress","onChangeText","onEnter","spanClassName","restProps","finalSpanClassName","s","finalInputClassName","input","errorInput","currentTarget","key","SuperButton","red","finalClassName","button","Preloader","ldsRoller","CommonForm","props","useSelector","useState","setType","showHide","initialValues","confirmPassword","formik","useFormik","validate","values","errors","test","onSubmit","callBack","resetForm","emailField","inputFormRegister","htmlFor","id","getFieldProps","touched","errorMessage","passwordField","showHideMenu","onClick","confirmPasswordField","submitButton","title","buttonFormRegister","disabled","authRegister","wrapper","incubator","signUp","handleSubmit","formGenerator","Login","useDispatch","to","loginProfile","RecoveryPassword","passwordRecovery","NewPassword","token","useParams","SuperCheckbox","onChangeChecked","children","checkbox","label","checked","SuperEditableSpan","autoFocus","onBlur","spanProps","editMode","setEditMode","onDoubleClick","restSpanProps","superSpan","SuperSelect","options","onChangeOption","mappedOptions","map","el","i","select","SuperRadio","name","onChangeCallback","arr","Test","setValue","selections","undefined","Error404","c","_404","_1","_2","btn","Profile","logOutHandler","useCallback","Register","PATH","Routes","style","marginTop","exact","path","render","color","Header","h","header","navMenu","link","activeClassName","activeLink","Main","m","main","container","App","a","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.db3d79ad.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1Z0mx\",\"wrapper\":\"Header_wrapper__304qh\",\"navMenu\":\"Header_navMenu__1iJg5\",\"link\":\"Header_link__1nRIe\",\"activeLink\":\"Header_activeLink__1O_o4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__vsNfW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"c\":\"Error404_c__29qMy\",\"_404\":\"Error404__404__276o5\",\"_1\":\"Error404__1__2vTjh\",\"_2\":\"Error404__2__1dkY2\",\"text\":\"Error404_text__312p9\",\"btn\":\"Error404_btn__2349u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"SuperInputText_input__2Ri_z\",\"errorInput\":\"SuperInputText_errorInput__3By_1\",\"error\":\"SuperInputText_error__3MskL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"SuperButton_button__3JMxg\",\"glowing\":\"SuperButton_glowing__DUsdW\",\"red\":\"SuperButton_red__28cmk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Main_main__1z_2_\",\"container\":\"Main_container__2I624\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ldsRoller\":\"Preloader_ldsRoller__2W6c2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superSpan\":\"SuperSpan_superSpan__VBb2o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"SuperSelect_select__2u_EY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__2Nttw\"};","import axios from \"axios\";\r\nimport {ProfileType} from \"../../n2-features/f1-auth/a1-login/login-reducer\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0/',\r\n    withCredentials: true,\r\n})\r\n\r\n// Api\r\nexport const recoveryPasswordApi = {\r\n    passwordRecovery(email: string, from: string, message: {}) {\r\n        return instance.post(`auth/forgot`, {\r\n            email, from, message\r\n        })\r\n    },\r\n    newPassword(password: string, resetPasswordToken: {}) {\r\n        return instance.post(`auth/set-new-password`, {\r\n            password, resetPasswordToken\r\n        })\r\n    }\r\n}\r\n\r\nexport const loginApi = {\r\n    login(user: ProfileType) {\r\n        return instance.post(`auth/login`, {\r\n            email: user.email,\r\n            password: user.password,\r\n            rememberMe: user.rememberMe\r\n        })\r\n    },\r\n    logOut() {\r\n        return instance.delete('auth/me')\r\n    },\r\n    // authMe() {\r\n    //     return instance.post('auth/login')\r\n    // }\r\n}\r\n\r\nexport const registerApi = {\r\n    registerUser(email: string, password: string) {\r\n        return instance.post('auth/register', {\r\n            email, password\r\n        })\r\n    },\r\n}\r\n\r\n","// Actions\r\nconst SET_ERROR = 'friday_teamwork_project/app-reducer/SET_ERROR';\r\nconst CHANGE_STATUS = 'friday_teamwork_project/app-reducer/CHANGE_STATUS';\r\n\r\n// Types\r\nexport type ErrorType = null | string;\r\nexport type SetAppErrorAT = ReturnType<typeof setAppError>;\r\nexport type ChangeStatusAT = ReturnType<typeof changeStatusAC>;\r\nexport type AppActionsType = SetAppErrorAT | ChangeStatusAT;\r\nexport type InitialStateType = typeof initialState;\r\nexport type StatusType = 'idle' | 'loading' | 'succeeded' | 'failed'\r\n\r\n//Initial State\r\nconst initialState = {\r\n    error: null as ErrorType,\r\n    status: 'idle' as StatusType\r\n}\r\n\r\n// Reducer\r\nexport const appReducer = (state: InitialStateType = initialState, action: AppActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case SET_ERROR:\r\n            return {...state, error: action.error}\r\n        case CHANGE_STATUS:\r\n            return {...state, status: action.status}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// Action Creators\r\nexport const setAppError = (error: ErrorType) => ({type: SET_ERROR, error}) as const;\r\nexport const changeStatusAC = (status: StatusType) =>\r\n    ({type: CHANGE_STATUS, status} as const)","import {loginApi} from \"../../../n3-dall/api/api_cards\";\r\nimport {AppThunkType} from \"../../../n1-main/m2-bll/store/redux-store\";\r\nimport {changeStatusAC} from \"../../../n1-main/m1-ui/u1-app/app-reducer\";\r\n\r\n// Actions\r\nconst SET_IS_LOGGED_IN = 'friday_teamwork_project/login-reducer/SET_IS_LOGGED_IN';\r\nconst SET_IS_LOGGED_OUT = 'friday_teamwork_project/login-reducer/SET_IS_LOGGED_OUT';\r\nconst SET_IS_AM_AUTH = 'friday_teamwork_project/login-reducer/SET_IS_AM_AUTH';\r\n\r\n// Types\r\nexport type LoginActionsType =\r\n    | ReturnType<typeof logInAC>\r\n    | ReturnType<typeof logOutAC>\r\n    | ReturnType<typeof authMeAC>;\r\nexport type ProfileType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n}\r\ntype InitialStateType = typeof initialState;\r\n\r\n// Initial State\r\nconst initialState = {\r\n    profile: {\r\n        email: '',\r\n        password: '',\r\n        rememberMe: false,\r\n    } || null,\r\n    isLoggedIn: false,\r\n    isAmAuth: false,\r\n}\r\n\r\n// Reducer\r\nexport const loginReducer = (state: InitialStateType = initialState, action: LoginActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case SET_IS_LOGGED_IN: {\r\n            return {\r\n                ...state,\r\n                profile: action.profile,\r\n                isLoggedIn: action.isLoggedIn\r\n            }\r\n        }\r\n        case SET_IS_LOGGED_OUT: {\r\n            return {\r\n                ...state,\r\n                isLoggedIn: action.isLoggedIn\r\n            }\r\n        }\r\n        case SET_IS_AM_AUTH: {\r\n            return {\r\n                ...state,\r\n                isAmAuth: action.isAmAuth\r\n            }\r\n        }\r\n        default:\r\n            return {...state}\r\n    }\r\n}\r\n\r\n// Actions Creators\r\nexport const logInAC = (profile: ProfileType, isLoggedIn: boolean) => ({\r\n    type: SET_IS_LOGGED_IN, profile, isLoggedIn\r\n} as const)\r\nexport const logOutAC = (isLoggedIn: boolean) => ({\r\n    type: SET_IS_LOGGED_OUT, isLoggedIn\r\n} as const)\r\nexport const authMeAC = (isAmAuth: boolean) => ({\r\n    type: SET_IS_AM_AUTH, isAmAuth\r\n} as const)\r\n\r\n// Thunk Creators\r\nexport const loginTC = (profile: ProfileType): AppThunkType => (dispatch) => {\r\n    dispatch(changeStatusAC(\"loading\"))\r\n    loginApi.login(profile)\r\n        .then(() => {\r\n            dispatch(changeStatusAC(\"succeeded\"))\r\n            dispatch(logInAC(profile, true))\r\n            alert('User: ' + profile.email + ' has been Successfully logged in!')\r\n        })\r\n        .catch((err) => {\r\n            console.log(err.message)\r\n            alert('Invalid email or password')\r\n        })\r\n}\r\n\r\nexport const logOutTC = (): AppThunkType => (dispatch) => {\r\n    dispatch(changeStatusAC(\"loading\"))\r\n    loginApi.logOut()\r\n        .then(() => {\r\n            dispatch(changeStatusAC(\"succeeded\"))\r\n            dispatch(logOutAC(false))\r\n            alert(\"logOut success —ฅᐠ.̫ .ᐟฅ—\")\r\n        })\r\n        .catch((err) => {\r\n            console.log(err.message)\r\n            alert(err.message)\r\n        })\r\n}\r\n\r\n// export const authMeTC = (): AppThunkType =>\r\n//     (dispatch) => {\r\n//     dispatch(changeStatusAC(\"loading\"))\r\n//     loginApi.authMe()\r\n//         .then((res) => {\r\n//             console.log(res)\r\n//             dispatch(changeStatusAC(\"succeeded\"))\r\n//             dispatch(authMeAC(true))\r\n//             alert(\"logOut success —ฅᐠ.̫ .ᐟฅ—\")\r\n//         })\r\n//         .catch((err) => {\r\n//             console.log(err.message)\r\n//             alert(err.message)\r\n//         })\r\n// }","import {registerApi} from \"../../../n3-dall/api/api_cards\";\r\nimport {AppThunkType} from \"../../../n1-main/m2-bll/store/redux-store\";\r\n\r\n// Actions\r\nconst SET_REGISTER_DATA = 'friday_teamwork_project/register-reducer/SET_REGISTER_DATA';\r\n\r\n// Types\r\ntype InitialStateType = typeof initialState;\r\nexport type RegisterActionsType = ReturnType<typeof setRegisterDataAC>\r\n\r\n// Initial State\r\nconst initialState = {\r\n    isRegister: false\r\n}\r\n\r\n// Reducer\r\nexport const registerReducer = (state = initialState, action: RegisterActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case SET_REGISTER_DATA:\r\n            return {\r\n                ...state,\r\n                isRegister: action.isRegister\r\n            }\r\n        default:\r\n            return {...state}\r\n    }\r\n}\r\n\r\n// Action Creators\r\nexport const setRegisterDataAC = (isRegister: boolean) => ({\r\n    type: SET_REGISTER_DATA, isRegister\r\n} as const)\r\n\r\n// Thunk Creators\r\nexport const registerUser = (email: string, password: string): AppThunkType => {\r\n    return (dispatch) => {\r\n        registerApi.registerUser(email, password)\r\n            .then((res) => {\r\n                if (res.data.addedUser._id.length > 0) {\r\n                    dispatch(setRegisterDataAC(true))\r\n                }\r\n            })\r\n            .catch((e) => {\r\n                const error = e.response\r\n                    ? e.response.data.error\r\n                    : (e.message + ', more details in the console');\r\n                console.log(error)\r\n                alert(error)\r\n            })\r\n    }\r\n}","import {Dispatch} from \"redux\";\r\nimport {recoveryPasswordApi} from \"../../../n3-dall/api/api_cards\";\r\nimport {changeStatusAC} from \"../../../n1-main/m1-ui/u1-app/app-reducer\";\r\n\r\nconst initialState: InitialStateType = {\r\n    isPasswordChanged: false\r\n}\r\n\r\nexport const newPasswordReducer = (state: InitialStateType = initialState, action: ActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"NEW-PASSWORD/PASSWORD-CHANGED\":\r\n            return {...state, isPasswordChanged: action.value}\r\n        default:\r\n            return {...state}\r\n    }\r\n}\r\n\r\nconst passwordChanged = (value: boolean) => ({type: \"NEW-PASSWORD/PASSWORD-CHANGED\", value})\r\n\r\nexport const newPassword = (password: string, resetPasswordToken: {}) => (dispatch: Dispatch) => {\r\n    dispatch(changeStatusAC(\"loading\"))\r\n    recoveryPasswordApi.newPassword(password, resetPasswordToken)\r\n        .then(response => {\r\n            dispatch(passwordChanged(true))\r\n            dispatch(changeStatusAC(\"succeeded\"))\r\n        })\r\n        .catch((e) => {\r\n            const error = e.response\r\n                ? e.response.data.error\r\n                : (e.message + ', more details in the console');\r\n            console.log(error)\r\n            alert(error)\r\n        })\r\n}\r\n\r\ntype InitialStateType = {\r\n    isPasswordChanged: boolean\r\n}\r\n\r\ntype ActionType = ReturnType<typeof passwordChanged>","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport thunk, {ThunkAction} from \"redux-thunk\";\r\nimport {LoginActionsType, loginReducer} from \"../../../n2-features/f1-auth/a1-login/login-reducer\";\r\nimport {RegisterActionsType, registerReducer} from \"../../../n2-features/f1-auth/a2-register/register-reducer\";\r\nimport {recoveryPasswordReducer} from \"../../../n2-features/f1-auth/a3-recoveryPassword/recoveryPassword-reducer\";\r\nimport {newPasswordReducer} from \"../../../n2-features/f1-auth/a4-new-password/newPassword-reducer\";\r\nimport {profileReducer} from \"../../../n2-features/f1-auth/a5-profile/profile-reducer\";\r\nimport {AppActionsType, appReducer} from \"../../m1-ui/u1-app/app-reducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    app: appReducer,\r\n    login: loginReducer,\r\n    register: registerReducer,\r\n    recoveryPassword: recoveryPasswordReducer,\r\n    newPassword: newPasswordReducer,\r\n    profile: profileReducer,\r\n})\r\n\r\nexport type AppActionType =\r\n    | RegisterActionsType\r\n    | LoginActionsType\r\n    | AppActionsType;\r\n\r\nexport type AppThunkType<ReturnType = void> = ThunkAction<ReturnType,\r\n    AppRootStateType,\r\n    unknown,\r\n    AppActionType>\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk))\r\n\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\n\r\n// @ts-ignore\r\nwindow.store = store // for dev","import {recoveryPasswordApi} from \"../../../n3-dall/api/api_cards\";\r\nimport {Dispatch} from \"redux\";\r\nimport {changeStatusAC} from \"../../../n1-main/m1-ui/u1-app/app-reducer\";\r\n\r\nexport const recoveryPasswordReducer = (state: any, action: any): any => {\r\n    switch (action.type) {\r\n        default:\r\n            return {...state}\r\n    }\r\n}\r\n\r\nexport const passwordRecovery = (email: string, from: string, message: {}) => (dispatch: Dispatch) => {\r\n    dispatch(changeStatusAC(\"loading\"))\r\n    recoveryPasswordApi.passwordRecovery(email, from, message)\r\n        .then(response => {\r\n            dispatch(changeStatusAC(\"succeeded\"))\r\n        })\r\n        .catch((e) => {\r\n            const error = e.response\r\n                ? e.response.data.error\r\n                : (e.message + ', more details in the console');\r\n            console.log(error)\r\n            alert(error)\r\n        })\r\n}","// Reducer\r\nexport const profileReducer = (state: any, action: any): any => {\r\n    switch (action.type) {\r\n        default:\r\n            return {...state}\r\n    }\r\n}\r\n\r\n// Actions\r\n// Types\r\n// Initial State\r\n// Action Creators\r\n// Thunk Creators","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        // type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange,\r\n        className,\r\n        onKeyPress,\r\n        onChangeText,\r\n        onEnter,\r\n        error,\r\n        spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value);\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter() // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\r\n    const finalInputClassName = `${s.input} ${error ? s.errorInput : ''} ${className}` // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                // type={'text'}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\nimport s from './SuperButton.module.css'\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red,\n        className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${s.button} ${red ? s.red : ''}`\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    )\n}\n\nexport default SuperButton\n","import React from 'react'\r\nimport s from './Preloader.module.css'\r\n\r\nexport const Preloader = () => {\r\n    return <div className={s.ldsRoller}>\r\n        <div/>\r\n        <div/>\r\n        <div/>\r\n        <div/>\r\n        <div/>\r\n        <div/>\r\n        <div/>\r\n        <div/>\r\n    </div>\r\n}","import {useFormik} from \"formik\";\r\nimport {useState} from \"react\";\r\nimport s from './CommonForm.module.css';\r\nimport SuperInputText from \"../Super-Components/c1-SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../Super-Components/c2-SuperButton/SuperButton\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../m2-bll/store/redux-store\";\r\nimport {StatusType} from \"../../u1-app/app-reducer\";\r\nimport {Preloader} from \"../Super-Components/c7-Preloader/Preloader\";\r\n\r\ntype FormikErrorType = {\r\n    email?: string\r\n    password?: string\r\n    confirmPassword?: string\r\n}\r\n\r\ntype FormPropsType = {\r\n    type: 'Login' | 'Register' | 'Recovery password' | 'New password'\r\n    callBack?: (values: any) => void\r\n}\r\n\r\nexport const CommonForm = (props: FormPropsType) => {\r\n\r\n    const status = useSelector<AppRootStateType, StatusType>(state => state.app.status)\r\n    const [type, setType] = useState<string>('password')\r\n\r\n    const showHide = () => {\r\n        setType(type === 'text' ? 'password' : 'text')\r\n    }\r\n\r\n    // SET initial values for Formik start\r\n    let initialValues: any = null\r\n\r\n    if (props.type === 'Login') {\r\n        initialValues = {\r\n            email: '',\r\n            password: '',\r\n        }\r\n    }\r\n\r\n    if (props.type === 'Register') {\r\n        initialValues = {\r\n            email: '',\r\n            password: '',\r\n            confirmPassword: '',\r\n        }\r\n    }\r\n\r\n    if (props.type === 'Recovery password') {\r\n        initialValues = {\r\n            email: '',\r\n        }\r\n    }\r\n\r\n    if (props.type === 'New password') {\r\n        initialValues = {\r\n            password: '',\r\n            confirmPassword: '',\r\n        }\r\n    }\r\n\r\n    // SET initial values for Formik end\r\n    const formik = useFormik({\r\n\r\n        initialValues,\r\n\r\n        validate: (values) => {\r\n            const errors: FormikErrorType = {};\r\n            if (!values.email) {\r\n                errors.email = 'Email is required';\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = 'Invalid email address';\r\n            }\r\n\r\n            if (props.type === 'Login' || props.type === 'Register') { // Check PASSWORD field only if form for Login or Register\r\n                if (!values.password) {\r\n                    errors.password = 'Password is required';\r\n                } else if (!/(?=.*[0-9])/gi.test(values.password)) {\r\n                    errors.password = 'The password must contain at least one number'\r\n                } else if (!/(?=.*[a-z])(?=.*[A-Z])/gi.test(values.password)) {\r\n                    errors.password = 'The password  must contain at least one lowercase or uppercase Latin letter'\r\n                } else if (!/[0-9a-zA-Z!@#$%^&*]{8,}/gi.test(values.password)) {\r\n                    errors.password = 'The password must have a minimum 8 characters'\r\n                }\r\n            }\r\n\r\n            if (props.type === 'Register' || props.type === 'New password') { // Check CONFIRM PASSWORD field only if form for Register\r\n                if (!values.confirmPassword) {\r\n                    errors.confirmPassword = 'Confirm password is required';\r\n                } else if (values.password !== values.confirmPassword) {\r\n                    errors.confirmPassword = 'The password and confirm password fields do not match.';\r\n                }\r\n            }\r\n\r\n            return errors;\r\n        },\r\n        onSubmit: values => {\r\n            props.callBack && props.callBack(values)\r\n            formik.resetForm();\r\n        },\r\n    });\r\n\r\n    // Reusable Email Field\r\n    const emailField = () => {\r\n        return <>\r\n            <div className={s.inputFormRegister}>\r\n                <label htmlFor=\"email\">Email</label>\r\n                <SuperInputText\r\n                    id=\"email\"\r\n                    type=\"email\"\r\n                    {...formik.getFieldProps('email')}\r\n                />\r\n                {formik.errors.email && formik.touched.email &&\r\n                <div className={s.errorMessage}>{formik.errors.email}</div>}\r\n            </div>\r\n        </>\r\n    }\r\n    // Reusable Password Field\r\n    const passwordField = () => {\r\n        return <>\r\n            <div className={s.inputFormRegister}>\r\n                <label htmlFor=\"password\">Password</label>\r\n                <SuperInputText\r\n                    id=\"password\"\r\n                    type={type}\r\n                    {...formik.getFieldProps('password')}\r\n                />\r\n                <span className={s.showHideMenu}\r\n                      onClick={showHide}>{type === 'text' ? '🔒' : '🔑'}</span>\r\n                {formik.errors.password && formik.touched.password &&\r\n                <div className={s.errorMessage}>{formik.errors.password}</div>}\r\n            </div>\r\n        </>\r\n    }\r\n    // Reusable Confirm Password Field\r\n    const confirmPasswordField = () => {\r\n        return <>\r\n            <div className={s.inputFormRegister}>\r\n                <label htmlFor=\"confirmPassword\">Confirm password</label>\r\n                <SuperInputText\r\n                    id=\"confirmPassword\"\r\n                    type=\"password\"\r\n                    {...formik.getFieldProps('confirmPassword')}\r\n                />\r\n                {formik.errors.confirmPassword && formik.touched.confirmPassword &&\r\n                <div className={s.errorMessage}>{formik.errors.confirmPassword}</div>}\r\n            </div>\r\n        </>\r\n    }\r\n    // Reusable Button\r\n    const submitButton = (title: string) => {\r\n        return <>\r\n            <div className={s.buttonFormRegister}>\r\n                <SuperButton\r\n                    disabled={status === \"loading\"}\r\n                    className={s.button}\r\n                    type=\"submit\">{title}\r\n                </SuperButton>\r\n            </div>\r\n        </>\r\n    }\r\n\r\n    // Form Generator \r\n    const formGenerator = () => {\r\n        switch (props.type) {\r\n            case 'Login' :\r\n                return <>\r\n                    {emailField()}\r\n                    {passwordField()}\r\n                    {submitButton('Login')}\r\n                </>\r\n            case 'Register' :\r\n                return <>\r\n                    {emailField()}\r\n                    {passwordField()}\r\n                    {confirmPasswordField()}\r\n                    {submitButton('Register')}\r\n                </>\r\n            case 'Recovery password' :\r\n                return <>\r\n                    {emailField()}\r\n                    {submitButton('Reset')}\r\n                </>\r\n            default :\r\n                return <>\r\n                    {emailField()}\r\n                    {passwordField()}\r\n                    {confirmPasswordField()}\r\n                    {submitButton('N/A')}\r\n                </>\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {status === \"loading\" && <Preloader/>}\r\n            <div className={s.authRegister}>\r\n                <div className={s.wrapper}>\r\n                    <span className={s.incubator}>It-incubator</span>\r\n                    {/* Form Title */}\r\n                    <span className={s.signUp}>{props.type}</span>\r\n                    <form onSubmit={formik.handleSubmit}>\r\n                        {/* Form generator function */}\r\n                        {formGenerator()}\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </>\r\n\r\n    )\r\n}","import {useDispatch, useSelector} from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {loginTC} from \"./login-reducer\";\r\nimport {AppRootStateType} from \"../../../n1-main/m2-bll/store/redux-store\";\r\nimport {CommonForm} from \"../../../n1-main/m1-ui/u3-common/CommonForm/CommonForm\";\r\n\r\nexport const Login = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.login.isLoggedIn)\r\n\r\n    const callBackHandler = (values: any) => {\r\n\r\n        const loginProfile = {\r\n            email: values.email,\r\n            password: values.password,\r\n            rememberMe: values.rememberMe\r\n        }\r\n\r\n        dispatch(loginTC(loginProfile))\r\n    }\r\n\r\n    if (isLoggedIn) {\r\n        return <Redirect to={'/profile'}/>\r\n    }\r\n\r\n    return <CommonForm type={'Login'} callBack={callBackHandler}/>\r\n}","import {useDispatch} from \"react-redux\";\r\nimport {passwordRecovery} from \"./recoveryPassword-reducer\";\r\nimport {CommonForm} from \"../../../n1-main/m1-ui/u3-common/CommonForm/CommonForm\";\r\n\r\nexport const RecoveryPassword = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const from = \"test-front-admin <ai73a@yandex.by>\"\r\n    const message =\r\n        `<div>\r\n            <a href='https://hrudkouski.github.io/friday_teamwork_project/#/new-password/$token$'>link</a> \r\n        </div>`\r\n\r\n    const recoveryCallBackHandler = (values: any) => {\r\n        dispatch(passwordRecovery(values.email, from, message))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <CommonForm type={'Recovery password'} callBack={recoveryCallBackHandler}/>\r\n        </>\r\n    )\r\n}","import {useDispatch, useSelector} from \"react-redux\";\r\nimport {newPassword} from \"./newPassword-reducer\";\r\nimport {Redirect, useParams } from \"react-router-dom\";\r\nimport {AppRootStateType} from \"../../../n1-main/m2-bll/store/redux-store\";\r\nimport {StatusType} from \"../../../n1-main/m1-ui/u1-app/app-reducer\";\r\nimport {Preloader} from \"../../../n1-main/m1-ui/u3-common/Super-Components/c7-Preloader/Preloader\";\r\nimport {CommonForm} from \"../../../n1-main/m1-ui/u3-common/CommonForm/CommonForm\";\r\n\r\nexport const NewPassword = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const {token} = useParams<{token: string}>()\r\n    const isPasswordChanged = useSelector<AppRootStateType, boolean>(state => state.newPassword.isPasswordChanged)\r\n    const status = useSelector<AppRootStateType, StatusType>(state => state.app.status)\r\n\r\n    const newPasswordCallBack = (values: any) => {\r\n        dispatch(newPassword(values.password, token))\r\n    }\r\n\r\n    if(isPasswordChanged) {\r\n        return <Redirect to={\"/login\"}/>\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {status === \"loading\" && <Preloader/>}\r\n            <CommonForm type={'New password'} callBack={newPasswordCallBack}/>\r\n        </>\r\n    )\r\n}\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\nimport s from './SuperCheckbox.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n}\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange,\n        onChangeChecked,\n        className,\n        spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange && onChange(e);\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)// сделайте так чтоб работал onChange и onChangeChecked\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\n\n    return (\n        <label className={s.label}>\n            <input\n                type={'checkbox'}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    )\n}\n\nexport default SuperCheckbox\n","import React, {DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState} from 'react'\nimport SuperInputText from '../c1-SuperInputText/SuperInputText'\nimport s from './SuperSpan.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n// тип пропсов обычного спана\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n\n    spanProps?: DefaultSpanPropsType // пропсы для спана\n}\n\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\n    {\n        autoFocus, // игнорировать изменение этого пропса\n        onBlur,\n        onEnter,\n        spanProps,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const [editMode, setEditMode] = useState<boolean>(false)\n    const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {}\n\n    const onEnterCallback = () => {\n        setEditMode(false)\n        // выключить editMode при нажатии Enter\n        onEnter && onEnter()\n    }\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\n        setEditMode(false) // выключить editMode при нажатии за пределами инпута\n        onBlur && onBlur(e)\n    }\n    const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\n        setEditMode(true) // включить editMode при двойном клике\n        onDoubleClick && onDoubleClick(e)\n    }\n\n    const spanClassName = `${s.superSpan} ${className}`\n\n    return (\n        <>\n            {editMode\n                ? (\n                    <SuperInputText\n                        autoFocus // пропсу с булевым значением не обязательно указывать true\n                        onBlur={onBlurCallback}\n                        onEnter={onEnterCallback}\n\n                        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n                    />\n                ) : (\n                    <span\n                        onDoubleClick={onDoubleClickCallBack}\n                        className={spanClassName}\n\n                        {...restSpanProps}\n                    >\n                        {/*если нет захардкодженного текста для спана, то значение инпута*/}\n                        {children || restProps.value}\n                    </span>\n                )\n            }\n        </>\n    )\n}\n\nexport default SuperEditableSpan\n","import React, {SelectHTMLAttributes, DetailedHTMLProps, ChangeEvent} from 'react'\nimport s from './SuperSelect.module.css'\n\ntype DefaultSelectPropsType = DetailedHTMLProps<SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>\n\ntype SuperSelectPropsType = DefaultSelectPropsType & {\n    options?: string[]\n    onChangeOption?: (option: string) => void\n}\n\nconst SuperSelect: React.FC<SuperSelectPropsType> = (\n    {\n        options,\n        onChange,\n        onChangeOption,\n        ...restProps\n    }\n) => {\n    const mappedOptions: JSX.Element[] = options // map options with key\n        ? options.map((el, i) => {\n            return <option key={`${el}-${i}`} value={el}>{el}</option>\n        })\n        : [];\n\n    const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\n        onChange && onChange(e);\n        onChangeOption && onChangeOption(e.currentTarget.value)\n    }\n\n    return (\n        <div className={s.select}>\n            <select onChange={onChangeCallback} {...restProps}>\n                {mappedOptions}\n            </select>\n        </div>\n    )\n}\n\nexport default SuperSelect\n","import React, {ChangeEvent, InputHTMLAttributes, DetailedHTMLProps} from 'react'\nimport s from './../c3-SuperCheckbox/SuperCheckbox.module.css'\n\ntype DefaultRadioPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperRadioPropsType = DefaultRadioPropsType & {\n    options?: string[]\n    onChangeOption?: (option: string) => void\n}\n\nconst SuperRadio: React.FC<SuperRadioPropsType> = (\n    {\n        type, name,\n        options, value,\n        onChange, onChangeOption,\n        ...restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange && onChange(e);\n        onChangeOption && onChangeOption(e.currentTarget.value)\n    }\n\n\n    const mappedOptions: JSX.Element[] = options ? options.map((el, i) => ( // map options with key\n        <label key={`${name}-${i}`}>\n            <input\n                type={'radio'}\n                name={name}\n                checked={el === value}\n                value={el}\n                onChange={onChangeCallback}\n                className={s.checkbox}\n                {...restProps}\n            />\n            {el}\n        </label>\n    )) : []\n\n    return (\n        <>\n            {mappedOptions}\n        </>\n    )\n}\n\nexport default SuperRadio\n","import {useState} from \"react\";\r\nimport SuperInputText from \"../../n1-main/m1-ui/u3-common/Super-Components/c1-SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../../n1-main/m1-ui/u3-common/Super-Components/c2-SuperButton/SuperButton\";\r\nimport SuperCheckbox from \"../../n1-main/m1-ui/u3-common/Super-Components/c3-SuperCheckbox/SuperCheckbox\";\r\nimport SuperEditableSpan from \"../../n1-main/m1-ui/u3-common/Super-Components/c4-SuperEditableSpan/SuperEditableSpan\";\r\nimport SuperSelect from \"../../n1-main/m1-ui/u3-common/Super-Components/c5-SuperSelect/SuperSelect\";\r\nimport SuperRadio from \"../../n1-main/m1-ui/u3-common/Super-Components/c6-SuperRadio/SuperRadio\";\r\n\r\nconst arr = ['Tim', 'Nikolay', 'Nikita']\r\n\r\n\r\nexport const Test = () => {\r\n    const [value, setValue] = useState<string>('')\r\n    const [selections, onChangeOption] = useState(arr[1])\r\n\r\n    return (\r\n        <>\r\n            <SuperInputText/>\r\n            <SuperCheckbox/>\r\n            <SuperButton>\r\n                Click here\r\n            </SuperButton>\r\n            <SuperEditableSpan\r\n                value={value}\r\n                onChangeText={setValue}\r\n                spanProps={{children: value ? undefined : 'enter text...'}}\r\n            />\r\n            <SuperSelect\r\n                options={arr}\r\n                value={selections}\r\n                onChangeOption={onChangeOption}\r\n            />\r\n            <SuperRadio\r\n                name={'radio'}\r\n                options={arr}\r\n                value={selections}\r\n                onChangeOption={onChangeOption}\r\n            />\r\n        </>\r\n    )\r\n}","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport s from './Error404.module.css'\r\n\r\nexport const Error404 = () => {\r\n    return <div>\r\n        <div className={s.c}>\r\n            <div className={s._404}>404</div>\r\n            <div className={s._1}>THE PAGE</div>\r\n            <div className={s._2}>WAS NOT FOUND</div>\r\n            <NavLink className={s.btn} to='/profile'>&#8592;BACK TO PROFILE</NavLink>\r\n        </div>\r\n    </div>\r\n}","import SuperButton from \"../../u3-common/Super-Components/c2-SuperButton/SuperButton\"\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../m2-bll/store/redux-store\";\r\nimport {logOutTC} from \"../../../../n2-features/f1-auth/a1-login/login-reducer\";\r\nimport {useCallback} from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {StatusType} from \"../../u1-app/app-reducer\";\r\n\r\nexport const Profile = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.login.isLoggedIn)\r\n    const status = useSelector<AppRootStateType, StatusType>(state => state.app.status)\r\n\r\n    const logOutHandler = useCallback(() => {\r\n        dispatch(logOutTC())\r\n    }, [dispatch])\r\n\r\n    if (!isLoggedIn) {\r\n        return <Redirect to={'/login'}/>\r\n    }\r\n\r\n    return (\r\n        <>\r\n            Profile Page\r\n            <SuperButton\r\n                disabled={status === \"loading\"}\r\n                onClick={logOutHandler}>LOG OUT\r\n            </SuperButton>\r\n        </>\r\n    )\r\n}","import {useDispatch, useSelector} from \"react-redux\";\r\nimport {registerUser} from \"./register-reducer\";\r\nimport {AppRootStateType} from \"../../../n1-main/m2-bll/store/redux-store\";\r\nimport {CommonForm} from \"../../../n1-main/m1-ui/u3-common/CommonForm/CommonForm\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nexport const Register = () => {\r\n\r\n    const isRegister = useSelector<AppRootStateType, boolean>(state => state.register.isRegister)\r\n    const dispatch = useDispatch();\r\n\r\n    const registerCallBackHandler = (values: any) => {\r\n        dispatch(registerUser(values.email, values.password))\r\n    }\r\n\r\n    if (isRegister) {\r\n        return <Redirect to={'/login'}/>\r\n    }\r\n\r\n    return <CommonForm type={'Register'} callBack={registerCallBackHandler}/>\r\n}\r\n","import {Redirect, Route, Switch} from \"react-router-dom\";\r\nimport {Login} from \"../../../n2-features/f1-auth/a1-login/Login\";\r\nimport {RecoveryPassword} from \"../../../n2-features/f1-auth/a3-recoveryPassword/RecoveryPassword\";\r\nimport {NewPassword} from \"../../../n2-features/f1-auth/a4-new-password/NewPassword\";\r\nimport {Test} from \"../../../n2-features/f0-test/Test\";\r\nimport {Error404} from \"../../../n2-features/f3-error/Error404\";\r\nimport {Profile} from \"../u2-components/Profile/Profile\";\r\nimport {Register} from \"../../../n2-features/f1-auth/a2-register/Register\";\r\n\r\nexport const PATH = {\r\n    LOGIN: '/login',\r\n    REGISTRATION: '/register',\r\n    PROFILE: '/profile',\r\n    RECOVERY_PASSWORD: '/recovery',\r\n    NEW_PASSWORD: '/new-password',\r\n    PACKS_LIST: '/packList',\r\n    TEST: '/test',\r\n    ERROR_404: '/404',\r\n    UNKNOWN_PAGE: '*',\r\n}\r\n\r\nexport const Routes = () => {\r\n    return (\r\n        <div style={{marginTop: '100px'}}>\r\n            <Switch>\r\n                <Route exact path={'/'} render={() => <Redirect to={PATH.LOGIN}/>}/>\r\n                <Route path={PATH.LOGIN} render={() => <Login/>}/>\r\n                <Route path={PATH.REGISTRATION} render={() => <Register/>}/>\r\n                <Route path={PATH.PROFILE} render={() => <Profile/>}/>\r\n                <Route path={PATH.RECOVERY_PASSWORD} render={() => <RecoveryPassword/>}/>\r\n                <Route path={`${PATH.NEW_PASSWORD}/:token`} render={() => <NewPassword/>}/>\r\n                <Route path={PATH.PACKS_LIST} render={() => <span style={{color: '#fff'}}>packList</span>}/>\r\n                <Route path={PATH.TEST} render={() => <Test/>}/>\r\n                <Route path={PATH.ERROR_404} render={() => <Error404/>}/>\r\n                <Redirect from={PATH.UNKNOWN_PAGE} to={PATH.ERROR_404}/>\r\n            </Switch>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport h from './Header.module.css'\r\n\r\nexport const Header = () => {\r\n    return (\r\n        <div className={h.header}>\r\n            <div className={h.wrapper}>\r\n                <div className={h.navMenu}>\r\n                    <NavLink\r\n                        className={h.link}\r\n                        activeClassName={h.activeLink}\r\n                        to={'/login'}>Sign in\r\n                    </NavLink>\r\n                    <NavLink\r\n                        className={h.link}\r\n                        activeClassName={h.activeLink}\r\n                        to={'/register'}>Sign up\r\n                    </NavLink>\r\n                    <NavLink\r\n                        className={h.link}\r\n                        activeClassName={h.activeLink}\r\n                        to={'/profile'}>Profile\r\n                    </NavLink>\r\n                    <NavLink\r\n                        className={h.link}\r\n                        activeClassName={h.activeLink}\r\n                        to={'/packList'}>Packs List\r\n                    </NavLink>\r\n                    <NavLink\r\n                        className={h.link}\r\n                        activeClassName={h.activeLink}\r\n                        to={'/recovery'}>Recovery\r\n                    </NavLink>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import {Routes} from \"../../u4-routes/Routes\";\r\nimport {Header} from \"../Header/Header\";\r\nimport m from './Main.module.css'\r\n// import {useDispatch, useSelector} from \"react-redux\";\r\n// import {useEffect} from \"react\";\r\n// import {authMeTC} from \"../../../../n2-features/f1-auth/a1-login/login-reducer\";\r\n// import {AppRootStateType} from \"../../../m2-bll/store/redux-store\";\r\n// import {Redirect} from \"react-router-dom\";\r\n\r\nexport const Main = () => {\r\n\r\n    // const dispatch = useDispatch();\r\n    // const isAmAuth = useSelector<AppRootStateType, boolean>(state => state.login.isAmAuth)\r\n    //\r\n    // useEffect(() => {\r\n    //     dispatch(authMeTC())\r\n    // }, [dispatch])\r\n    //\r\n    // if (!isAmAuth) {\r\n    //     return <Redirect to={'/login'}/>\r\n    // }\r\n\r\n    return (\r\n        <div className={m.main}>\r\n            <div className={m.container}>\r\n                <Header/>\r\n                <Routes/>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport {Provider} from 'react-redux';\r\nimport {HashRouter} from 'react-router-dom';\r\nimport {store} from '../../m2-bll/store/redux-store';\r\nimport {Main} from '../u2-components/Main/Main';\r\nimport a from './App.module.css'\r\n\r\nconst App = () => {\r\n    return (\r\n        <div className={a.app}>\r\n            <HashRouter>\r\n                <Provider store={store}>\r\n                    <Main/>\r\n                </Provider>\r\n            </HashRouter>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './n1-main/m1-ui/u1-app/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"CommonForm_wrapper__2nfvC\",\"incubator\":\"CommonForm_incubator__5-T16\",\"signUp\":\"CommonForm_signUp__3RQA3\",\"inputFormRegister\":\"CommonForm_inputFormRegister__sZDBn\",\"errorMessage\":\"CommonForm_errorMessage__3yU_n\",\"showHideMenu\":\"CommonForm_showHideMenu__1IINR\",\"buttonFormRegister\":\"CommonForm_buttonFormRegister__xTnBy\"};"],"sourceRoot":""}