{"version":3,"sources":["n1-main/m1-ui/u3-common/CommonForm/CommonForm.module.css","n2-features/f1-auth/a4-new-password/NewPassword.module.css","n1-main/m1-ui/u3-common/Super-Components/c3-SuperCheckbox/SuperCheckbox.module.css","n2-features/f3-error/Error404.module.css","n2-features/f1-auth/a3-recoveryPassword/RecoveryPassword.module.css","n1-main/m1-ui/u3-common/Super-Components/c1-SuperInputText/SuperInputText.module.css","n1-main/m1-ui/u3-common/Super-Components/c2-SuperButton/SuperButton.module.css","n1-main/m1-ui/u3-common/Super-Components/c7-Preloader/Preloader.module.css","n1-main/m1-ui/u3-common/Super-Components/c4-SuperEditableSpan/SuperSpan.module.css","n1-main/m1-ui/u3-common/Super-Components/c5-SuperSelect/SuperSelect.module.css","n1-main/m1-ui/u2-components/Header/Header.module.css","n3-dall/api/api_cards.ts","n2-features/f1-auth/a1-login/login-reducer.ts","n2-features/f1-auth/a2-register/register-reducer.ts","n1-main/m1-ui/u1-app/app-reducer.ts","n2-features/f1-auth/a4-new-password/newPassword-reducer.ts","n1-main/m2-bll/store/redux-store.ts","n2-features/f1-auth/a3-recoveryPassword/recoveryPassword-reducer.ts","n2-features/f1-auth/a5-profile/profile-reducer.ts","n1-main/m1-ui/u3-common/Super-Components/c1-SuperInputText/SuperInputText.tsx","n1-main/m1-ui/u3-common/Super-Components/c2-SuperButton/SuperButton.tsx","n1-main/m1-ui/u3-common/CommonForm/CommonForm.tsx","n2-features/f1-auth/a1-login/Login.tsx","n1-main/m1-ui/u3-common/Super-Components/c7-Preloader/Preloader.tsx","n2-features/f1-auth/a3-recoveryPassword/RecoveryPassword.tsx","n2-features/f1-auth/a4-new-password/NewPassword.tsx","n1-main/m1-ui/u3-common/Super-Components/c3-SuperCheckbox/SuperCheckbox.tsx","n1-main/m1-ui/u3-common/Super-Components/c4-SuperEditableSpan/SuperEditableSpan.tsx","n1-main/m1-ui/u3-common/Super-Components/c5-SuperSelect/SuperSelect.tsx","n1-main/m1-ui/u3-common/Super-Components/c6-SuperRadio/SuperRadio.tsx","n2-features/f0-test/Test.tsx","n2-features/f3-error/Error404.tsx","n1-main/m1-ui/u2-components/Profile/Profile.tsx","n2-features/f1-auth/a2-register/Register.tsx","n1-main/m1-ui/u4-routes/Routes.tsx","n1-main/m1-ui/u2-components/Header/Header.tsx","n1-main/m1-ui/u2-components/Main/Main.tsx","n1-main/m1-ui/u1-app/App.tsx","reportWebVitals.ts","index.tsx","n2-features/f1-auth/a2-register/Register.module.css"],"names":["module","exports","instance","axios","create","baseURL","withCredentials","recoveryPasswordApi","email","from","message","post","password","resetPasswordToken","loginApi","user","rememberMe","registerApi","initialState","profile","isLoggedIn","SET_REGISTER_DATA","isRegister","registerUser","dispatch","then","res","data","addedUser","_id","length","type","catch","e","error","response","console","log","alert","SET_ERROR","CHANGE_STATUS","status","changeStatusAC","isPasswordChanged","rootReducer","combineReducers","app","state","action","login","register","recoveryPassword","newPassword","value","store","createStore","applyMiddleware","thunk","window","SuperInputText","onChange","className","onKeyPress","onChangeText","onEnter","spanClassName","restProps","finalSpanClassName","s","finalInputClassName","input","errorInput","currentTarget","key","SuperButton","red","finalClassName","button","CommonForm","props","useState","setType","showHide","initialValues","confirmPassword","formik","useFormik","validate","values","errors","test","onSubmit","callBack","resetForm","emailField","inputFormRegister","htmlFor","id","getFieldProps","touched","errorMessage","passwordField","showHideMenu","onClick","confirmPasswordField","submitButton","title","buttonFormRegister","authRegister","wrapper","incubator","signUp","handleSubmit","formGenerator","Login","useDispatch","useSelector","to","loginProfile","err","Preloader","ldsRoller","RecoveryPassword","passwordRecovery","disabled","NewPassword","token","useParams","repeatPassword","SuperCheckbox","onChangeChecked","children","checkbox","label","checked","SuperEditableSpan","autoFocus","onBlur","spanProps","editMode","setEditMode","onDoubleClick","restSpanProps","superSpan","SuperSelect","options","onChangeOption","mappedOptions","map","el","i","select","SuperRadio","name","onChangeCallback","arr","Test","setValue","selections","undefined","Error404","c","_404","_1","_2","btn","Profile","Register","Routes","path","render","Header","h","link","activeClassName","active","Main","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,aAAe,iCAAiC,QAAU,4BAA4B,UAAY,8BAA8B,OAAS,2BAA2B,kBAAoB,sCAAsC,aAAe,iCAAiC,aAAe,iCAAiC,mBAAqB,yC,mBCArWD,EAAOC,QAAU,CAAC,QAAU,6BAA6B,UAAY,+BAA+B,OAAS,4BAA4B,kBAAoB,uCAAuC,aAAe,kCAAkC,aAAe,oC,mBCApQD,EAAOC,QAAU,CAAC,SAAW,kC,mBCA7BD,EAAOC,QAAU,CAAC,EAAI,oBAAoB,KAAO,uBAAuB,GAAK,qBAAqB,GAAK,qBAAqB,KAAO,uBAAuB,IAAM,wB,mBCAhKD,EAAOC,QAAU,CAAC,QAAU,kCAAkC,OAAS,iCAAiC,kBAAoB,4CAA4C,aAAe,yC,mBCAvLD,EAAOC,QAAU,CAAC,MAAQ,8BAA8B,WAAa,mCAAmC,MAAQ,gC,mBCAhHD,EAAOC,QAAU,CAAC,OAAS,4BAA4B,QAAU,6BAA6B,IAAM,2B,mBCApGD,EAAOC,QAAU,CAAC,UAAY,+B,mBCA9BD,EAAOC,QAAU,CAAC,UAAY,+B,mBCA9BD,EAAOC,QAAU,CAAC,OAAS,8B,uCCA3BD,EAAOC,QAAU,CAAC,QAAU,wBAAwB,QAAU,wBAAwB,OAAS,uBAAuB,KAAO,qBAAqB,KAAO,qBAAqB,OAAS,yB,sJCEjLC,E,OAAWC,EAAMC,OAAO,CAC1BC,QAAS,uCACTC,iBAAiB,IAIRC,EAAsB,SACdC,EAAeC,EAAcC,GAC1C,OAAOR,EAASS,KAAT,cAA6B,CAACH,QAAOC,OAAMC,aAF7CH,EAAsB,SAInBK,EAAkBC,GAC1B,OAAOX,EAASS,KAAT,wBAAuC,CAACC,WAAUC,wBAIpDC,EAAW,SACdC,GACF,OAAOb,EAASS,KAAT,cAA6B,CAACH,MAAOO,EAAKP,MAAOI,SAAUG,EAAKH,SAAUI,WAAYD,EAAKC,cAI7FC,EAAc,SACVT,EAAeI,GACxB,OAAOV,EAASS,KAAU,gBAAiB,CACvCH,QAAOI,cChBbM,EAAiC,CACnCC,QAAS,KACTC,YAAY,GCTVC,EAAoB,6DAOpBH,EAAe,CACjBI,YAAY,GAsBHC,EAAe,SAACf,EAAeI,GACxC,OAAO,SAACY,GACJP,EAAyBT,EAAOI,GAC3Ba,MAAK,SAACC,GACCA,EAAIC,KAAKC,UAAUC,IAAIC,OAAS,GAChCN,EAVuC,CACvDO,KAAMV,EAAmBC,YASkB,OAGlCU,OAAM,SAACC,GACJ,IAAMC,EAAQD,EAAEE,SACVF,EAAEE,SAASR,KAAKO,MACfD,EAAEvB,QAAU,gCACnB0B,QAAQC,IAAIH,GACZI,MAAMJ,QC7ChBK,EAAY,gDACZC,EAAgB,oDAWhBtB,EAAe,CACjBgB,MAAO,KACPO,OAAQ,QAiBCC,EAAiB,SAACD,GAAD,MACzB,CAACV,KAAMS,EAAeC,WC9BrBvB,EAAiC,CACnCyB,mBAAmB,GCIjBC,EAAcC,YAAgB,CAChCC,IFUsB,WAAuF,IAAtFC,EAAqF,uDAA3D7B,EAAc8B,EAA6C,uCAC5G,OAAQA,EAAOjB,MACX,KAAKQ,EACD,OAAO,2BAAIQ,GAAX,IAAkBb,MAAOc,EAAOd,QACpC,KAAKM,EACD,OAAO,2BAAIO,GAAX,IAAkBN,OAAQO,EAAOP,SACrC,QACI,OAAOM,IEhBfE,MJQwB,WAAoF,IAAnFF,EAAkF,uDAAxD7B,EAAc8B,EAA0C,uCAC3G,OAAQA,EAAOjB,MAEX,IAAK,QACD,OAAO,2BAAIgB,GAAX,IAAkB5B,QAAS6B,EAAO7B,QAASC,WAAY4B,EAAO5B,aAGlE,QACI,OAAO,eAAI2B,KIfnBG,SHI2B,WAA0E,IAAzEH,EAAwE,uDAAhE7B,EAAc8B,EAAkD,uCACpG,OAAQA,EAAOjB,MACX,KAAKV,EACD,OAAO,2BACA0B,GADP,IAEIzB,WAAY0B,EAAO1B,aAE3B,QACI,OAAO,eAAIyB,KGXnBI,iBCTmC,SAACJ,EAAYC,GAGxC,OAFAA,EAAOjB,KAEA,eAAIgB,IDOnBK,YDN8B,WAAmF,IAAlFL,EAAiF,uDAAvD7B,EAAc8B,EAAyC,uCAChH,OAAQA,EAAOjB,MACX,IAAK,gCACD,OAAO,2BAAIgB,GAAX,IAAkBJ,kBAAmBK,EAAOK,QAChD,QACI,OAAO,eAAIN,KCEnB5B,QEd0B,SAAC4B,EAAYC,GAG/B,OAFAA,EAAOjB,KAEA,eAAIgB,MFsBVO,EAAQC,YAAYX,EAAaY,YAAgBC,MAK9DC,OAAOJ,MAAQA,E,4EG8BAK,EA9C2C,SAAC,GAarD,IAVEC,EAUH,EAVGA,SACAC,EASH,EATGA,UACAC,EAQH,EARGA,WACAC,EAOH,EAPGA,aACAC,EAMH,EANGA,QACA9B,EAKH,EALGA,MACA+B,EAIH,EAJGA,cAEGC,EAEN,sGAgBKC,EAAkB,UAAMC,IAAElC,MAAR,YAAiB+B,GAAgC,IACnEI,EAAmB,UAAMD,IAAEE,MAAR,YAAiBpC,EAAQkC,IAAEG,WAAa,GAAxC,YAA8CV,GAEvE,OACI,qCACI,mCAEID,SArBa,SAAC3B,GACtB2B,GACGA,EAAS3B,GAEZ8B,GAAgBA,EAAa9B,EAAEuC,cAAcnB,QAkBrCS,WAhBe,SAAC7B,GACxB6B,GAAcA,EAAW7B,GAEzB+B,GACa,UAAV/B,EAAEwC,KACFT,KAYKH,UAAWQ,GACPH,IAEPhC,GAAS,sBAAM2B,UAAWM,EAAjB,SAAsCjC,Q,iBC7B7CwC,EAjBqC,SAAC,GAM/C,IAJEC,EAIH,EAJGA,IAEGT,GAEN,EAHGL,UAGH,oCACKe,EAAc,UAAMR,IAAES,OAAR,YAAkBF,EAAMP,IAAEO,IAAM,IAEpD,OACI,oCACId,UAAWe,GACPV,KCJHY,EAAa,SAACC,GAA0B,IAAD,EAGxBC,mBAAiB,YAHO,mBAGzCjD,EAHyC,KAGnCkD,EAHmC,KAK1CC,EAAW,WACbD,EAAiB,SAATlD,EAAkB,WAAa,SAKvCoD,EAAqB,KAEP,UAAfJ,EAAMhD,OACLoD,EAAgB,CACZ3E,MAAO,GACPI,SAAU,KAGA,aAAfmE,EAAMhD,OACLoD,EAAgB,CACZ3E,MAAO,GACPI,SAAU,GACVwE,gBAAiB,KAGP,sBAAfL,EAAMhD,OACLoD,EAAgB,CACZ3E,MAAO,KAMf,IAAM6E,EAASC,YAAU,CAErBH,gBAEAI,SAAU,SAACC,GACP,IAAMC,EAA0B,GA4BhC,OA3BKD,EAAOhF,MAEA,4CAA4CkF,KAAKF,EAAOhF,SAChEiF,EAAOjF,MAAQ,yBAFfiF,EAAOjF,MAAQ,oBAKD,UAAfuE,EAAMhD,MAAmC,aAAfgD,EAAMhD,OAC1ByD,EAAO5E,SAEA,gBAAgB8E,KAAKF,EAAO5E,UAE5B,2BAA2B8E,KAAKF,EAAO5E,UAEvC,4BAA4B8E,KAAKF,EAAO5E,YAChD6E,EAAO7E,SAAW,iDAFlB6E,EAAO7E,SAAW,8EAFlB6E,EAAO7E,SAAW,gDAFlB6E,EAAO7E,SAAW,wBAUR,aAAfmE,EAAMhD,OACAyD,EAAOJ,gBAEDI,EAAO5E,WAAa4E,EAAOJ,kBAClCK,EAAOL,gBAAkB,0DAFzBK,EAAOL,gBAAkB,gCAO1BK,GAEXE,SAAU,SAAAH,GAELT,EAAMa,UAAYb,EAAMa,SAASJ,GAClCH,EAAOQ,eAMTC,EAAa,WACf,OAAO,mCACH,sBAAKjC,UAAWO,IAAE2B,kBAAlB,UACI,uBAAOC,QAAQ,QAAf,mBACA,cAAC,EAAD,aACIC,GAAG,QACHlE,KAAK,SACDsD,EAAOa,cAAc,WAE5Bb,EAAOI,OAAOjF,OAAS6E,EAAOc,QAAQ3F,OACvC,qBAAKqD,UAAWO,IAAEgC,aAAlB,SAAiCf,EAAOI,OAAOjF,cAKrD6F,EAAgB,WAClB,OAAO,mCACH,sBAAKxC,UAAWO,IAAE2B,kBAAlB,UACI,uBAAOC,QAAQ,WAAf,sBACA,cAAC,EAAD,aACIC,GAAG,WACHlE,KAAMA,GACFsD,EAAOa,cAAc,cAE7B,sBAAMrC,UAAWO,IAAEkC,aACXC,QAASrB,EADjB,SACqC,SAATnD,EAAkB,eAAO,iBACpDsD,EAAOI,OAAO7E,UAAYyE,EAAOc,QAAQvF,UAC1C,qBAAKiD,UAAWO,IAAEgC,aAAlB,SAAiCf,EAAOI,OAAO7E,iBAKrD4F,EAAuB,WACzB,OAAO,mCACH,sBAAK3C,UAAWO,IAAE2B,kBAAlB,UACI,uBAAOC,QAAQ,kBAAf,8BACA,cAAC,EAAD,aACIC,GAAG,kBACHlE,KAAK,YACDsD,EAAOa,cAAc,qBAE5Bb,EAAOI,OAAOL,iBAAmBC,EAAOc,QAAQf,iBACjD,qBAAKvB,UAAWO,IAAEgC,aAAlB,SAAiCf,EAAOI,OAAOL,wBAMrDqB,EAAe,SAACC,GAElB,OAAO,mCACH,qBAAK7C,UAAWO,IAAEuC,mBAAlB,SACI,cAAC,EAAD,CACI9C,UAAWO,IAAES,OACb9C,KAAK,SAFT,SAEmB2E,SA4C/B,OACI,qBAAK7C,UAAWO,IAAEwC,aAAlB,SACI,sBAAK/C,UAAWO,IAAEyC,QAAlB,UACI,sBAAMhD,UAAWO,IAAE0C,UAAnB,0BAGA,sBAAMjD,UAAWO,IAAE2C,OAAnB,SAA4BhC,EAAMhD,OAElC,sBAAM4D,SAAUN,EAAO2B,aAAvB,SA7CU,WAGlB,OAAOjC,EAAMhD,MAET,IAAK,QACD,OAAO,qCACN+D,IACAO,IACAI,EAAa,YAGlB,IAAK,WACD,OAAO,qCACNX,IACAO,IACAG,IACAC,EAAa,eAGlB,IAAK,oBACD,OAAO,qCACNX,IACAW,EAAa,YAGlB,QACI,OAAO,qCACNX,IACAO,IACAG,IACAC,EAAa,WAiBVQ,WCvMPC,EAAQ,WAEjB,IAAM1F,EAAW2F,cAcjB,OAbmBC,aAAuC,SAAArE,GAAK,OAAIA,EAAME,MAAM7B,cAchE,cAAC,IAAD,CAAUiG,GAAI,aAGtB,mCAEH,cAAC,EAAD,CAAYtF,KAAM,QAAS6D,SAjBP,SAACJ,GAErB,IViCgBrE,EUjCVmG,EAAe,CACjB9G,MAAOgF,EAAOhF,MACdI,SAAU4E,EAAO5E,SACjBI,WAAYwE,EAAOxE,YAGvBQ,GV2BgBL,EU3BCmG,EV2BwB,SAAC9F,GAG9CV,EAAeK,GACVM,MAAM,SAACC,GACJF,EAbS,SAACL,EAAsBC,GAAvB,MACjB,CAACW,KAAM,QAASZ,UAASC,YAYO,GAAf6B,CAAM9B,IACfmB,MAAM,SAAWnB,EAAQX,MAAQ,wCAEpCwB,OAAO,SAACuF,GACLnF,QAAQC,IAAIkF,EAAI7G,SAChB4B,MAAM,yC,kCWrDLkF,EAAY,WACrB,OAAO,sBAAK3D,UAAWO,IAAEqD,UAAlB,UACH,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,4BCEKC,EAAmB,WAE5B,IAAMlG,EAAW2F,cACX1E,EAAS2E,aAA0C,SAAArE,GAAK,OAAIA,EAAMD,IAAIL,UAQtE4C,EAASC,YAAU,CACrBH,cAAe,CACX3E,MAAO,IAGX+E,SAAW,SAAAC,GACP,IAAIC,EAAyB,GAQ7B,OANKD,EAAOhF,MAEA,4CAA4CkF,KAAKF,EAAOhF,SAChEiF,EAAOjF,MAAQ,yBAFfiF,EAAOjF,MAAQ,WAKZiF,GAGXE,SAAU,SAAAH,GACNhE,EPhCoB,SAAChB,EAAeC,EAAcC,GAA9B,OAA8C,SAACc,GAC3EA,EAASkB,EAAe,YACxBnC,EAAqCC,EAAOC,EAAMC,GAC7Ce,MAAK,SAAAU,GACFX,EAASkB,EAAe,iBAE3BV,OAAM,SAACC,GACJ,IAAMC,EAAQD,EAAEE,SACVF,EAAEE,SAASR,KAAKO,MACfD,EAAEvB,QAAU,gCACnB0B,QAAQC,IAAIH,GACZI,MAAMJ,OOqBGyF,CAAiBnC,EAAOhF,MAxB5B,qCACA,2GA2Bb,OACI,qCACgB,YAAXiC,EAAuB,cAAC,EAAD,IAAe,KACvC,sBAAKoB,UAAWO,IAAEyC,QAAlB,UACI,sBAAMhD,UAAWO,IAAE2C,OAAnB,+BACA,uBAAMpB,SAAUN,EAAO2B,aAAvB,UACI,sBAAKnD,UAAWO,IAAE2B,kBAAlB,UACI,uBAAOC,QAAQ,QAAf,2BACA,cAAC,EAAD,aAAgBjE,KAAK,QACL6F,SAAqB,YAAXnF,GACN4C,EAAOa,cAAc,WACxCb,EAAOI,OAAOjF,MACR,qBAAKqD,UAAWO,IAAEgC,aAAlB,SAAiCf,EAAOI,OAAOjF,QAChD,QAEV,cAAC,EAAD,CAAaoH,SAAqB,YAAXnF,EAAsBV,KAAK,SAAlD,4B,iBC7CP8F,EAAc,WAEvB,IAAMrG,EAAW2F,cACVW,EAASC,cAATD,MACDnF,EAAoByE,aAAuC,SAAArE,GAAK,OAAIA,EAAMK,YAAYT,qBACtFF,EAAS2E,aAA0C,SAAArE,GAAK,OAAIA,EAAMD,IAAIL,UAL/C,EAOLuC,mBAAiB,YAPZ,mBAOtBjD,EAPsB,KAOhBkD,EAPgB,KASvBC,EAAW,WACbD,EAAiB,SAATlD,EAAkB,WAAa,SAGrCsD,EAASC,YAAU,CACrBH,cAAe,CACX/B,YAAa,GACb4E,eAAgB,IAGpBzC,SAAW,SAAAC,GACP,IAAIC,EAAyB,GAc7B,OAZKD,EAAOpC,YAEDoC,EAAOpC,YAAYtB,OAAS,IACnC2D,EAAOrC,YAAc,4CAFrBqC,EAAOrC,YAAc,WAKpBoC,EAAOwC,eAEDxC,EAAOwC,iBAAmBxC,EAAOpC,cACxCqC,EAAOuC,eAAiB,qBAFxBvC,EAAOuC,eAAiB,WAKrBvC,GAGXE,SAAU,SAAAH,GVnCS,IAAC5E,EAAkBC,EUoClCW,GVpCgBZ,EUoCK4E,EAAOpC,YVpCMvC,EUoCOiH,EVpCoB,SAACtG,GACtEA,EAASkB,EAAe,YACxBnC,EAAgCK,EAAUC,GACrCY,MAAK,SAAAU,GACFX,EANiC,CAACO,KAAM,gCAAiCsB,OAMhD,IACzB7B,EAASkB,EAAe,iBAE3BV,OAAM,SAACC,GACJ,IAAMC,EAAQD,EAAEE,SACVF,EAAEE,SAASR,KAAKO,MACfD,EAAEvB,QAAU,gCACnB0B,QAAQC,IAAIH,GACZI,MAAMJ,YU4Bd,OAAGS,EACQ,cAAC,IAAD,CAAU0E,GAAI,WAIrB,qCACgB,YAAX5E,EAAuB,cAAC,EAAD,IAAe,KACvC,sBAAKoB,UAAWO,IAAEyC,QAAlB,UACI,sBAAMhD,UAAWO,IAAE2C,OAAnB,0BACA,uBAAMpB,SAAUN,EAAO2B,aAAvB,UACI,sBAAKnD,UAAWO,IAAE2B,kBAAlB,UACI,uBAAOC,QAAQ,WAAf,0BACA,cAAC,EAAD,aAAgBjE,KAAMA,EACN6F,SAAqB,YAAXnF,GACN4C,EAAOa,cAAc,iBACzC,sBAAMrC,UAAWO,IAAEkC,aACbC,QAASrB,EADf,SACmC,SAATnD,EAAkB,eAAO,iBAClDsD,EAAOc,QAAQ/C,aAAeiC,EAAOI,OAAOrC,YACtC,qBAAKS,UAAWO,IAAEgC,aAAlB,SAAiCf,EAAOI,OAAOrC,cAChD,QAEV,sBAAKS,UAAWO,IAAE2B,kBAAlB,UACI,uBAAOC,QAAQ,WAAf,6BACA,cAAC,EAAD,aAAgBjE,KAAMA,EACN6F,SAAqB,YAAXnF,GACN4C,EAAOa,cAAc,oBACzC,sBAAMrC,UAAWO,IAAEkC,aACbC,QAASrB,EADf,SACmC,SAATnD,EAAkB,eAAO,iBAClDsD,EAAOc,QAAQ6B,gBAAkB3C,EAAOI,OAAOuC,eACzC,qBAAKnE,UAAWO,IAAEgC,aAAlB,SAAiCf,EAAOI,OAAOuC,iBAChD,QAEV,cAAC,EAAD,CAAaJ,SAAqB,YAAXnF,EAAsBV,KAAK,SAAlD,8B,kBCjDLkG,GA/ByC,SAAC,GAUpD,EARGlG,KAQF,IAPE6B,EAOH,EAPGA,SACAsE,EAMH,EANGA,gBACArE,EAKH,EALGA,UAEAsE,GAGH,EAJGlE,cAIH,EAHGkE,UACGjE,EAEN,4FAMKG,EAAmB,UAAMD,KAAEgE,SAAR,YAAoBvE,GAAwB,IAErE,OACI,wBAAOA,UAAWO,KAAEiE,MAApB,UACI,mCACItG,KAAM,WACN6B,SAXa,SAAC3B,GACtB2B,GAAYA,EAAS3B,GACrBiG,GAAmBA,EAAgBjG,EAAEuC,cAAc8D,UAU3CzE,UAAWQ,GACPH,IAEPiE,GAAY,sBAAMtE,UAAWO,KAAEH,cAAnB,SAAmCkE,Q,oBCuC7CI,GAxD4C,SAAC,GASvD,EAPGC,UAOF,IANEC,EAMH,EANGA,OACAzE,EAKH,EALGA,QACA0E,EAIH,EAJGA,UAEGxE,EAEN,8DAC+Bc,oBAAkB,GADjD,mBACM2D,EADN,KACgBC,EADhB,OAE8DF,GAAa,GAArEP,EAFN,EAEMA,SAAUU,EAFhB,EAEgBA,cAAehF,EAF/B,EAE+BA,UAAciF,EAF7C,wDAkBK7E,EAAa,UAAMG,KAAE2E,UAAR,YAAqBlF,GAExC,OACI,mCACK8E,EAEO,cAAC,EAAD,aACIH,WAAS,EACTC,OAjBG,SAACxG,GACpB2G,GAAY,GACZH,GAAUA,EAAOxG,IAgBD+B,QAvBI,WACpB4E,GAAY,GAEZ5E,GAAWA,MAsBSE,IAGR,8CACI2E,cApBU,SAAC5G,GAC3B2G,GAAY,GACZC,GAAiBA,EAAc5G,IAmBf4B,UAAWI,GAEP6E,GAJR,aAOKX,GAAYjE,EAAUb,Y,oBC9BhC2F,GA5BqC,SAAC,GAO/C,IALEC,EAKH,EALGA,QACArF,EAIH,EAJGA,SACAsF,EAGH,EAHGA,eACGhF,EAEN,uDACKiF,EAA+BF,EAC/BA,EAAQG,KAAI,SAACC,EAAIC,GACf,OAAO,wBAA2BjG,MAAOgG,EAAlC,SAAuCA,GAAvC,UAAgBA,EAAhB,YAAsBC,OAE/B,GAON,OACI,qBAAKzF,UAAWO,KAAEmF,OAAlB,SACI,gDAAQ3F,SAPS,SAAC3B,GACtB2B,GAAYA,EAAS3B,GACrBiH,GAAkBA,EAAejH,EAAEuC,cAAcnB,SAKLa,GAAxC,aACKiF,QCcFK,GApCmC,SAAC,GAO9C,EALGzH,KAKF,IALQ0H,EAKT,EALSA,KACNR,EAIH,EAJGA,QAAS5F,EAIZ,EAJYA,MACTO,EAGH,EAHGA,SAAUsF,EAGb,EAHaA,eACPhF,EAEN,6EACKwF,EAAmB,SAACzH,GACtB2B,GAAYA,EAAS3B,GACrBiH,GAAkBA,EAAejH,EAAEuC,cAAcnB,QAI/C8F,EAA+BF,EAAUA,EAAQG,KAAI,SAACC,EAAIC,GAAL,OACvD,cADoE,CACpE,mBACI,mCACIvH,KAAM,QACN0H,KAAMA,EACNnB,QAASe,IAAOhG,EAChBA,MAAOgG,EACPzF,SAAU8F,EACV7F,UAAWO,KAAEgE,UACTlE,IAEPmF,IAVL,UAAeI,EAAf,YAAuBH,OAYtB,GAEL,OACI,mCACKH,KCjCPQ,GAAM,CAAC,MAAO,UAAW,UAGlBC,GAAO,WAAO,IAAD,EACI5E,mBAAiB,IADrB,mBACf3B,EADe,KACRwG,EADQ,OAEe7E,mBAAS2E,GAAI,IAF5B,mBAEfG,EAFe,KAEHZ,EAFG,KAItB,OACI,qCACI,cAAC,EAAD,IACA,cAAC,GAAD,IACA,cAAC,EAAD,yBAGA,cAAC,GAAD,CACI7F,MAAOA,EACPU,aAAc8F,EACdnB,UAAW,CAACP,SAAU9E,OAAQ0G,EAAY,mBAE9C,cAAC,GAAD,CACId,QAASU,GACTtG,MAAOyG,EACPZ,eAAgBA,IAEpB,cAAC,GAAD,CACIO,KAAM,QACNR,QAASU,GACTtG,MAAOyG,EACPZ,eAAgBA,Q,oBChCnBc,GAAW,WACpB,OAAO,8BACH,sBAAKnG,UAAWO,KAAE6F,EAAlB,UACI,qBAAKpG,UAAWO,KAAE8F,KAAlB,iBACA,qBAAKrG,UAAWO,KAAE+F,GAAlB,sBACA,qBAAKtG,UAAWO,KAAEgG,GAAlB,2BACA,cAAC,IAAD,CAASvG,UAAWO,KAAEiG,IAAKhD,GAAG,WAA9B,yCCVCiD,GAAU,WACnB,OACI,qD,mBCcKC,GAAW,WAEpB,IAAMjJ,EAAa8F,aAAuC,SAAArE,GAAK,OAAIA,EAAMG,SAAS5B,cAC5EE,EAAW2F,cAHS,EAKFnC,mBAAiB,YALf,mBAKnBjD,EALmB,KAKbkD,EALa,KAWpBI,EAASC,YAAU,CACrBH,cAAe,CACX3E,MAAO,GACPI,SAAU,GACVwE,gBAAiB,IAErBG,SAAU,SAACC,GACP,IAAMC,EAA0B,GAuBhC,OAtBKD,EAAOhF,MAEA,4CAA4CkF,KAAKF,EAAOhF,SAChEiF,EAAOjF,MAAQ,yBAFfiF,EAAOjF,MAAQ,oBAKdgF,EAAO5E,SAEA,gBAAgB8E,KAAKF,EAAO5E,UAE5B,2BAA2B8E,KAAKF,EAAO5E,UAEvC,4BAA4B8E,KAAKF,EAAO5E,YAChD6E,EAAO7E,SAAW,iDAFlB6E,EAAO7E,SAAW,8EAFlB6E,EAAO7E,SAAW,gDAFlB6E,EAAO7E,SAAW,uBASjB4E,EAAOJ,gBAEDI,EAAO5E,WAAa4E,EAAOJ,kBAClCK,EAAOL,gBAAkB,qBAFzBK,EAAOL,gBAAkB,+BAKtBK,GAEXE,SAAU,SAAAH,GACNhE,EAASD,EAAaiE,EAAOhF,MAAOgF,EAAO5E,WAC3CyE,EAAOQ,eAIf,OAAIvE,EACO,cAAC,IAAD,CAAU+F,GAAI,WAIrB,qBAAKxD,UAAWO,KAAEwC,aAAlB,SACI,sBAAK/C,UAAWO,KAAEyC,QAAlB,UACI,sBAAMhD,UAAWO,KAAE0C,UAAnB,qBACA,sBAAMjD,UAAWO,KAAE2C,OAAnB,2CACA,uBAAMpB,SAAUN,EAAO2B,aAAvB,UACI,sBAAKnD,UAAWO,KAAE2B,kBAAlB,UACI,uBAAOC,QAAQ,QAAf,mBACA,cAAC,EAAD,aACIC,GAAG,QACHlE,KAAK,SACDsD,EAAOa,cAAc,WAE5Bb,EAAOI,OAAOjF,OAAS6E,EAAOc,QAAQ3F,OACvC,qBAAKqD,UAAWO,KAAEgC,aAAlB,SAAiCf,EAAOI,OAAOjF,WAGnD,sBAAKqD,UAAWO,KAAE2B,kBAAlB,UACI,uBAAOC,QAAQ,WAAf,sBACA,cAAC,EAAD,aACIC,GAAG,WACHlE,KAAMA,GACFsD,EAAOa,cAAc,cAE7B,sBAAMrC,UAAWO,KAAEkC,aACbC,QAvET,WACbtB,EAAiB,SAATlD,EAAkB,WAAa,SAqEvB,SACmC,SAATA,EAAkB,eAAO,iBAClDsD,EAAOI,OAAO7E,UAAYyE,EAAOc,QAAQvF,UAC1C,qBAAKiD,UAAWO,KAAEgC,aAAlB,SAAiCf,EAAOI,OAAO7E,cAGnD,sBAAKiD,UAAWO,KAAE2B,kBAAlB,UACI,uBAAOC,QAAQ,kBAAf,8BACA,cAAC,EAAD,aACIC,GAAG,kBACHlE,KAAK,YACDsD,EAAOa,cAAc,qBAE5Bb,EAAOI,OAAOL,iBAAmBC,EAAOc,QAAQf,iBACjD,qBAAKvB,UAAWO,KAAEgC,aAAlB,SAAiCf,EAAOI,OAAOL,qBAGnD,sBAAKvB,UAAWO,KAAEuC,mBAAlB,UACI,cAAC,EAAD,CACI9C,UAAWO,KAAES,OACb9C,KAAK,QAFT,oBAIA,cAAC,EAAD,CACI8B,UAAWO,KAAES,OACb9C,KAAK,SAFT,iCC1GXyI,GAAS,WAClB,OACI,8BACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,KAAM,SAAUC,OAAQ,kBAAM,cAAC,EAAD,OACrC,cAAC,IAAD,CAAOD,KAAM,YAAaC,OAAQ,kBAAM,cAAC,GAAD,OACxC,cAAC,IAAD,CAAOD,KAAM,WAAYC,OAAQ,kBAAM,cAAC,GAAD,OACvC,cAAC,IAAD,CAAOD,KAAM,YAAaC,OAAQ,kBAAM,cAAC,EAAD,OACxC,cAAC,IAAD,CAAOD,KAAM,uBAAwBC,OAAQ,kBAAM,cAAC,EAAD,OACnD,cAAC,IAAD,CAAOD,KAAM,QAASC,OAAQ,kBAAM,cAAC,GAAD,OACpC,cAAC,IAAD,CAAOA,OAAQ,kBAAM,cAAC,GAAD,a,mBCfxBC,GAAS,WAClB,OACI,8BACI,sBAAK9G,UAAW+G,KAAE/D,QAAlB,UACI,cAAC,IAAD,CAAShD,UAAW+G,KAAEC,KAAMC,gBAAiBF,KAAEG,OAAQ1D,GAAI,SAA3D,qBACA,cAAC,IAAD,CAASxD,UAAW+G,KAAEC,KAAMC,gBAAiBF,KAAEG,OAAQ1D,GAAI,YAA3D,qBACA,cAAC,IAAD,CAASxD,UAAW+G,KAAEC,KAAMC,gBAAiBF,KAAEG,OAAQ1D,GAAI,WAA3D,qBACA,cAAC,IAAD,CAASxD,UAAW+G,KAAEC,KAAMC,gBAAiBF,KAAEG,OAAQ1D,GAAI,YAA3D,sBACA,cAAC,IAAD,CAASxD,UAAW+G,KAAEC,KAAMC,gBAAiBF,KAAEG,OAAQ1D,GAAI,gBAA3D,0BACA,cAAC,IAAD,CAASxD,UAAW+G,KAAEC,KAAMC,gBAAiBF,KAAEG,OAAQ1D,GAAI,QAA3D,kBACA,cAAC,IAAD,CAASxD,UAAW+G,KAAEC,KAAMC,gBAAiBF,KAAEG,OAAQ1D,GAAI,OAA3D,6BCXH2D,GAAO,WAChB,OACI,qCACI,cAAC,GAAD,IACA,cAAC,GAAD,QCcGC,I,MAZH,WACR,OACI,qBAAKpH,UAAU,MAAf,SACI,cAAC,IAAD,UACI,cAAC,IAAD,CAAUP,MAAOA,EAAjB,SACI,cAAC,GAAD,YCAL4H,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqB3J,MAAK,YAAkD,IAA/C4J,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAAShB,OACL,cAAC,IAAMiB,WAAP,UACI,cAAC,GAAD,MAEJC,SAASC,eAAe,SAM5BX,M,kBCfAlL,EAAOC,QAAU,CAAC,aAAe,+BAA+B,QAAU,0BAA0B,UAAY,4BAA4B,OAAS,yBAAyB,kBAAoB,oCAAoC,aAAe,+BAA+B,aAAe,+BAA+B,mBAAqB,wC","file":"static/js/main.3a0b55ba.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"authRegister\":\"CommonForm_authRegister__1tYuq\",\"wrapper\":\"CommonForm_wrapper__2nfvC\",\"incubator\":\"CommonForm_incubator__5-T16\",\"signUp\":\"CommonForm_signUp__3RQA3\",\"inputFormRegister\":\"CommonForm_inputFormRegister__sZDBn\",\"errorMessage\":\"CommonForm_errorMessage__3yU_n\",\"showHideMenu\":\"CommonForm_showHideMenu__1IINR\",\"buttonFormRegister\":\"CommonForm_buttonFormRegister__xTnBy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"NewPassword_wrapper__3dLIs\",\"incubator\":\"NewPassword_incubator__3HH3Z\",\"signUp\":\"NewPassword_signUp__2AQ9e\",\"inputFormRegister\":\"NewPassword_inputFormRegister__u-qYM\",\"errorMessage\":\"NewPassword_errorMessage__2yq66\",\"showHideMenu\":\"NewPassword_showHideMenu__3r5Gx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__vsNfW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"c\":\"Error404_c__29qMy\",\"_404\":\"Error404__404__276o5\",\"_1\":\"Error404__1__2vTjh\",\"_2\":\"Error404__2__1dkY2\",\"text\":\"Error404_text__312p9\",\"btn\":\"Error404_btn__2349u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"RecoveryPassword_wrapper__1NO3t\",\"signUp\":\"RecoveryPassword_signUp__2ILQ-\",\"inputFormRegister\":\"RecoveryPassword_inputFormRegister__30Xrt\",\"errorMessage\":\"RecoveryPassword_errorMessage__24o4e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"SuperInputText_input__2Ri_z\",\"errorInput\":\"SuperInputText_errorInput__3By_1\",\"error\":\"SuperInputText_error__3MskL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"SuperButton_button__3JMxg\",\"glowing\":\"SuperButton_glowing__DUsdW\",\"red\":\"SuperButton_red__28cmk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ldsRoller\":\"Preloader_ldsRoller__2W6c2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superSpan\":\"SuperSpan_superSpan__VBb2o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"SuperSelect_select__2u_EY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Header_wrapper__304qh\",\"navLink\":\"Header_navLink__34F64\",\"parent\":\"Header_parent__3uXIU\",\"item\":\"Header_item__r8DJn\",\"link\":\"Header_link__1nRIe\",\"active\":\"Header_active__19wmR\"};","import axios from \"axios\";\r\nimport { ProfileType } from \"../../n2-features/f1-auth/a1-login/login-reducer\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0/',\r\n    withCredentials: true,\r\n})\r\n\r\n// Api\r\nexport const recoveryPasswordApi = {\r\n    passwordRecovery(email: string, from: string, message: {}) {\r\n        return instance.post(`auth/forgot`, {email, from, message})\r\n    },\r\n    newPassword(password: string, resetPasswordToken: {}) {\r\n        return instance.post(`auth/set-new-password`, {password, resetPasswordToken})\r\n    }\r\n}\r\n\r\nexport const loginApi = {\r\n    login(user: ProfileType) {\r\n        return instance.post(`auth/login/`, {email: user.email, password: user.password, rememberMe: user.rememberMe})\r\n    }\r\n}\r\n\r\nexport const registerApi = {\r\n    registerUser(email: string, password: string) {\r\n        return instance.post<any>('auth/register', {\r\n            email, password\r\n        })\r\n    },\r\n}\r\n\r\n","import { addSyntheticTrailingComment } from \"typescript\";\r\nimport { AppRootStateType } from \"../../../n1-main/m2-bll/store/redux-store\";\r\nimport {Dispatch} from 'redux';\r\nimport { loginApi } from \"../../../n3-dall/api/api_cards\";\r\n\r\n// Initial State\r\ntype InitialStateType = {\r\n    profile: ProfileType | null,\r\n    isLoggedIn: boolean\r\n}\r\n\r\nconst initialState: InitialStateType = {\r\n    profile: null,\r\n    isLoggedIn: false\r\n}\r\n\r\n\r\n\r\n// Reducer\r\nexport const loginReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n\r\n        case 'LOGIN': {\r\n            return {...state, profile: action.profile, isLoggedIn: action.isLoggedIn}\r\n        }\r\n\r\n        default:\r\n            return {...state}\r\n    }\r\n}\r\n\r\nexport type ProfileType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n}\r\n\r\n// Actions\r\nexport const login = (profile: ProfileType, isLoggedIn: boolean) => (\r\n    {type: 'LOGIN', profile, isLoggedIn} as const) \r\n\r\n// Types\r\ntype ActionsType = ReturnType<typeof login>\r\n\r\n\r\n// Thunk Creators\r\nexport const loginTC = (profile: ProfileType) => (dispatch: Dispatch<ActionsType>) => {\r\n    \r\n\r\n    loginApi.login(profile)\r\n        .then( (res) => {\r\n            dispatch(login(profile, true))\r\n            alert('User: ' + profile.email + ' has been Successfully logged in!')\r\n        })\r\n        .catch( (err) => {\r\n            console.log(err.message)\r\n            alert('Invalid email or password')\r\n        })\r\n}","import {Dispatch} from \"redux\";\r\nimport {registerApi} from \"../../../n3-dall/api/api_cards\";\r\n\r\n// Actions\r\nconst SET_REGISTER_DATA = 'friday_teamwork_project/register-reducer/SET_REGISTER_DATA';\r\n\r\n// Types\r\ntype InitialStateType = typeof initialState;\r\nexport type RegisterActionsType = ReturnType<typeof setRegisterDataAC>\r\n\r\n// Initial State\r\nconst initialState = {\r\n    isRegister: false\r\n}\r\n\r\n// Reducer\r\nexport const registerReducer = (state = initialState, action: RegisterActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case SET_REGISTER_DATA:\r\n            return {\r\n                ...state,\r\n                isRegister: action.isRegister\r\n            }\r\n        default:\r\n            return {...state}\r\n    }\r\n}\r\n\r\n// Action Creators\r\nexport const setRegisterDataAC = (isRegister: boolean) => ({\r\n    type: SET_REGISTER_DATA, isRegister\r\n} as const)\r\n\r\n// Thunk Creators\r\nexport const registerUser = (email: string, password: string) => {\r\n    return (dispatch: Dispatch) => {\r\n        registerApi.registerUser(email, password)\r\n            .then((res) => {\r\n                if (res.data.addedUser._id.length > 0) {\r\n                    dispatch(setRegisterDataAC(true))\r\n                }\r\n            })\r\n            .catch((e) => {\r\n                const error = e.response\r\n                    ? e.response.data.error\r\n                    : (e.message + ', more details in the console');\r\n                console.log(error)\r\n                alert(error)\r\n            })\r\n    }\r\n}","// Actions\r\n\r\nconst SET_ERROR = 'friday_teamwork_project/app-reducer/SET_ERROR';\r\nconst CHANGE_STATUS = 'friday_teamwork_project/app-reducer/CHANGE_STATUS';\r\n\r\n// Types\r\nexport type ErrorType = null | string;\r\nexport type SetAppErrorAT = ReturnType<typeof setAppError>;\r\nexport type ChangeStatusAT = ReturnType<typeof changeStatusAC>;\r\nexport type AppActionsType = SetAppErrorAT | ChangeStatusAT;\r\nexport type InitialStateType = typeof initialState;\r\nexport type StatusType = 'idle' | 'loading' | 'succeeded' | 'failed'\r\n\r\n//Initial State\r\nconst initialState = {\r\n    error: null as ErrorType,\r\n    status: 'idle' as StatusType\r\n}\r\n\r\n// Reducer\r\nexport const appReducer = (state: InitialStateType = initialState, action: AppActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case SET_ERROR:\r\n            return {...state, error: action.error}\r\n        case CHANGE_STATUS:\r\n            return {...state, status: action.status}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// Action Creators\r\nexport const setAppError = (error: ErrorType) => ({type: SET_ERROR, error}) as const;\r\nexport const changeStatusAC = (status: StatusType) =>\r\n    ({type: CHANGE_STATUS, status} as const)","import {Dispatch} from \"redux\";\r\nimport {recoveryPasswordApi} from \"../../../n3-dall/api/api_cards\";\r\nimport {changeStatusAC} from \"../../../n1-main/m1-ui/u1-app/app-reducer\";\r\n\r\nconst initialState: InitialStateType = {\r\n    isPasswordChanged: false\r\n}\r\n\r\nexport const newPasswordReducer = (state: InitialStateType = initialState, action: ActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"NEW-PASSWORD/PASSWORD-CHANGED\":\r\n            return {...state, isPasswordChanged: action.value}\r\n        default:\r\n            return {...state}\r\n    }\r\n}\r\n\r\nconst passwordChanged = (value: boolean) => ({type: \"NEW-PASSWORD/PASSWORD-CHANGED\", value})\r\n\r\nexport const newPassword = (password: string, resetPasswordToken: {}) => (dispatch: Dispatch) => {\r\n    dispatch(changeStatusAC(\"loading\"))\r\n    recoveryPasswordApi.newPassword(password, resetPasswordToken)\r\n        .then(response => {\r\n            dispatch(passwordChanged(true))\r\n            dispatch(changeStatusAC(\"succeeded\"))\r\n        })\r\n        .catch((e) => {\r\n            const error = e.response\r\n                ? e.response.data.error\r\n                : (e.message + ', more details in the console');\r\n            console.log(error)\r\n            alert(error)\r\n        })\r\n}\r\n\r\ntype InitialStateType = {\r\n    isPasswordChanged: boolean\r\n}\r\n\r\ntype ActionType = ReturnType<typeof passwordChanged>","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport thunk, {ThunkAction} from \"redux-thunk\";\r\nimport {loginReducer} from \"../../../n2-features/f1-auth/a1-login/login-reducer\";\r\nimport {registerReducer} from \"../../../n2-features/f1-auth/a2-register/register-reducer\";\r\nimport {recoveryPasswordReducer} from \"../../../n2-features/f1-auth/a3-recoveryPassword/recoveryPassword-reducer\";\r\nimport {newPasswordReducer} from \"../../../n2-features/f1-auth/a4-new-password/newPassword-reducer\";\r\nimport {profileReducer} from \"../../../n2-features/f1-auth/a5-profile/profile-reducer\";\r\nimport {AppActionsType, appReducer} from \"../../m1-ui/u1-app/app-reducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    app: appReducer,\r\n    login: loginReducer,\r\n    register: registerReducer,\r\n    recoveryPassword: recoveryPasswordReducer,\r\n    newPassword: newPasswordReducer,\r\n    profile: profileReducer,\r\n})\r\n\r\nexport type AppActionType =\r\n    | AppActionsType;\r\n\r\nexport type AppThunkType<ReturnType = void> = ThunkAction<ReturnType,\r\n    AppRootStateType,\r\n    unknown,\r\n    AppActionType>\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk))\r\n\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\n\r\n// @ts-ignore\r\nwindow.store = store // for dev","import {recoveryPasswordApi} from \"../../../n3-dall/api/api_cards\";\r\nimport {Dispatch} from \"redux\";\r\nimport {changeStatusAC} from \"../../../n1-main/m1-ui/u1-app/app-reducer\";\r\n\r\nexport const recoveryPasswordReducer = (state: any, action: any): any => {\r\n    switch (action.type) {\r\n        default:\r\n            return {...state}\r\n    }\r\n}\r\n\r\nexport const passwordRecovery = (email: string, from: string, message: {}) => (dispatch: Dispatch) => {\r\n    dispatch(changeStatusAC(\"loading\"))\r\n    recoveryPasswordApi.passwordRecovery(email, from, message)\r\n        .then(response => {\r\n            dispatch(changeStatusAC(\"succeeded\"))\r\n        })\r\n        .catch((e) => {\r\n            const error = e.response\r\n                ? e.response.data.error\r\n                : (e.message + ', more details in the console');\r\n            console.log(error)\r\n            alert(error)\r\n        })\r\n}","// Reducer\r\nexport const profileReducer = (state: any, action: any): any => {\r\n    switch (action.type) {\r\n        default:\r\n            return {...state}\r\n    }\r\n}\r\n\r\n// Actions\r\n// Types\r\n// Initial State\r\n// Action Creators\r\n// Thunk Creators","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        // type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange,\r\n        className,\r\n        onKeyPress,\r\n        onChangeText,\r\n        onEnter,\r\n        error,\r\n        spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value);\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter() // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\r\n    const finalInputClassName = `${s.input} ${error ? s.errorInput : ''} ${className}` // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                // type={'text'}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\nimport s from './SuperButton.module.css'\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red,\n        className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${s.button} ${red ? s.red : ''}`\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    )\n}\n\nexport default SuperButton\n","import {useFormik} from \"formik\";\r\nimport {useState} from \"react\";\r\nimport s from './CommonForm.module.css';\r\nimport SuperInputText from \"../Super-Components/c1-SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../Super-Components/c2-SuperButton/SuperButton\";\r\n\r\n\r\ntype FormikErrorType = {\r\n    email?: string\r\n    password?: string\r\n    confirmPassword?: string\r\n}\r\n\r\ntype FormPropsType = {\r\n    type: 'Login' | 'Register' | 'Recovery password',\r\n    callBack?: (values: any) => void\r\n}\r\n\r\nexport const CommonForm = (props: FormPropsType) => {\r\n\r\n\r\n    const [type, setType] = useState<string>('password')\r\n\r\n    const showHide = () => {\r\n        setType(type === 'text' ? 'password' : 'text')\r\n    }\r\n\r\n\r\n    // SET initial values for Formik start\r\n    let initialValues: any = null\r\n\r\n    if(props.type === 'Login') {\r\n        initialValues = {\r\n            email: '',\r\n            password: '',\r\n        }\r\n    }\r\n    if(props.type === 'Register') {\r\n        initialValues = {\r\n            email: '',\r\n            password: '',\r\n            confirmPassword: '',\r\n        }\r\n    }\r\n    if(props.type === 'Recovery password') {\r\n        initialValues = {\r\n            email: '',\r\n        }\r\n    }\r\n    // SET initial values for Formik end\r\n    \r\n\r\n    const formik = useFormik({\r\n        \r\n        initialValues,\r\n\r\n        validate: (values) => {\r\n            const errors: FormikErrorType = {};\r\n            if (!values.email) {\r\n                errors.email = 'Email is required';\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = 'Invalid email address';\r\n            }\r\n\r\n            if(props.type === 'Login' || props.type === 'Register') { // Check PASSWORD field only if form for Login or Register\r\n                if (!values.password) {\r\n                    errors.password = 'Password is required';\r\n                } else if (!/(?=.*[0-9])/gi.test(values.password)) {\r\n                    errors.password = 'The password must contain at least one number'\r\n                } else if (!/(?=.*[a-z])(?=.*[A-Z])/gi.test(values.password)) {\r\n                    errors.password = 'The password  must contain at least one lowercase or uppercase Latin letter'\r\n                } else if (!/[0-9a-zA-Z!@#$%^&*]{8,}/gi.test(values.password)) {\r\n                    errors.password = 'The password must have a minimum 8 characters'\r\n                }\r\n            }\r\n\r\n            if(props.type === 'Register'){ // Check CONFIRM PASSWORD field only if form for Register\r\n                if (!values.confirmPassword) {\r\n                    errors.confirmPassword = 'Confirm password is required';\r\n                } else if (values.password !== values.confirmPassword) {\r\n                    errors.confirmPassword = 'The password and confirm password fields do not match.';\r\n                }\r\n            }\r\n            \r\n\r\n            return errors;\r\n        },\r\n        onSubmit: values => {\r\n            //dispatch(registerUser(values.email, values.password))\r\n            {props.callBack && props.callBack(values)}\r\n            formik.resetForm();\r\n        },\r\n    });\r\n\r\n\r\n    // Reusable Email Field\r\n    const emailField = () => {\r\n        return <>\r\n            <div className={s.inputFormRegister}>\r\n                <label htmlFor=\"email\">Email</label>\r\n                <SuperInputText\r\n                    id=\"email\"\r\n                    type=\"email\"\r\n                    {...formik.getFieldProps('email')}\r\n                />\r\n                {formik.errors.email && formik.touched.email &&\r\n                <div className={s.errorMessage}>{formik.errors.email}</div>}\r\n            </div>\r\n        </>\r\n    }\r\n    // Reusable Password Field\r\n    const passwordField = () => {\r\n        return <>\r\n            <div className={s.inputFormRegister}>\r\n                <label htmlFor=\"password\">Password</label>\r\n                <SuperInputText\r\n                    id=\"password\"\r\n                    type={type}\r\n                    {...formik.getFieldProps('password')}\r\n                />\r\n                <span className={s.showHideMenu}\r\n                        onClick={showHide}>{type === 'text' ? '🔒' : '🔑'}</span>\r\n                {formik.errors.password && formik.touched.password &&\r\n                <div className={s.errorMessage}>{formik.errors.password}</div>}\r\n            </div>\r\n        </>\r\n    }\r\n    // Reusable Confirm Password Field\r\n    const confirmPasswordField = () => {\r\n        return <>\r\n            <div className={s.inputFormRegister}>\r\n                <label htmlFor=\"confirmPassword\">Confirm password</label>\r\n                <SuperInputText\r\n                    id=\"confirmPassword\"\r\n                    type=\"password\"\r\n                    {...formik.getFieldProps('confirmPassword')}\r\n                />\r\n                {formik.errors.confirmPassword && formik.touched.confirmPassword &&\r\n                <div className={s.errorMessage}>{formik.errors.confirmPassword}</div>}\r\n            </div>\r\n        </>\r\n    }\r\n\r\n    // Reusable Button\r\n    const submitButton = (title: string) => {\r\n        \r\n        return <>\r\n            <div className={s.buttonFormRegister}>\r\n                <SuperButton\r\n                    className={s.button}\r\n                    type=\"submit\">{title}\r\n                </SuperButton>\r\n            </div>\r\n        </>\r\n    }\r\n\r\n    // Form Generator \r\n    const formGenerator = () => {\r\n\r\n        \r\n        switch(props.type) {\r\n\r\n            case 'Login' :\r\n                return <>\r\n                {emailField()}\r\n                {passwordField()}\r\n                {submitButton('Login')}\r\n                </>\r\n            \r\n            case 'Register' :\r\n                return <>\r\n                {emailField()}\r\n                {passwordField()}\r\n                {confirmPasswordField()}\r\n                {submitButton('Register')}\r\n                </>\r\n            \r\n            case 'Recovery password' :\r\n                return <>\r\n                {emailField()}\r\n                {submitButton('Reset')}\r\n                </>\r\n            \r\n            default : \r\n                return <>\r\n                {emailField()}\r\n                {passwordField()}\r\n                {confirmPasswordField()}\r\n                {submitButton('N/A')}\r\n                </>\r\n        }\r\n        \r\n    }    \r\n\r\n    return (\r\n        <div className={s.authRegister}>\r\n            <div className={s.wrapper}>\r\n                <span className={s.incubator}>It-incubator</span>\r\n\r\n                {/* Form Title */}\r\n                <span className={s.signUp}>{props.type}</span>\r\n\r\n                <form onSubmit={formik.handleSubmit}>\r\n                    \r\n                    {/* Form generator function */}\r\n                   {formGenerator()}\r\n\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { loginTC } from \"./login-reducer\";\r\nimport { AppRootStateType } from \"../../../n1-main/m2-bll/store/redux-store\";\r\nimport { CommonForm } from \"../../../n1-main/m1-ui/u3-common/CommonForm/CommonForm\";\r\n\r\nexport const Login = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.login.isLoggedIn)\r\n\r\n    const callBackHandler = (values: any) => {\r\n        \r\n        const loginProfile = {\r\n            email: values.email,\r\n            password: values.password,\r\n            rememberMe: values.rememberMe\r\n        }\r\n        \r\n        dispatch(loginTC(loginProfile))\r\n    }\r\n\r\n    if(isLoggedIn) {\r\n            return <Redirect to={'/profile'}/>\r\n    }\r\n\r\n    return <>\r\n\r\n        <CommonForm type={'Login'} callBack={callBackHandler}/>\r\n    \r\n    </>\r\n\r\n}","import React from 'react'\r\nimport s from './Preloader.module.css'\r\n\r\nexport const Preloader = () => {\r\n    return <div className={s.ldsRoller}>\r\n        <div/>\r\n        <div/>\r\n        <div/>\r\n        <div/>\r\n        <div/>\r\n        <div/>\r\n        <div/>\r\n        <div/>\r\n    </div>\r\n}","import SuperInputText from \"../../../n1-main/m1-ui/u3-common/Super-Components/c1-SuperInputText/SuperInputText\"\r\nimport SuperButton from \"../../../n1-main/m1-ui/u3-common/Super-Components/c2-SuperButton/SuperButton\"\r\nimport {useFormik} from \"formik\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {passwordRecovery} from \"./recoveryPassword-reducer\";\r\nimport s from './RecoveryPassword.module.css';\r\nimport {AppRootStateType} from \"../../../n1-main/m2-bll/store/redux-store\";\r\nimport {StatusType} from \"../../../n1-main/m1-ui/u1-app/app-reducer\";\r\nimport {Preloader} from \"../../../n1-main/m1-ui/u3-common/Super-Components/c7-Preloader/Preloader\";\r\n\r\ntype ErrorsDataType = {\r\n    email?: string\r\n}\r\n\r\nexport const RecoveryPassword = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const status = useSelector<AppRootStateType, StatusType>(state => state.app.status)\r\n\r\n    const from = \"test-front-admin <ai73a@yandex.by>\"\r\n    const message =\r\n        `<div>\r\n            <a href='http://localhost:3000/#/new-password/$token$'>link</a> \r\n        </div>`\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n        },\r\n\r\n        validate: (values => {\r\n            let errors: ErrorsDataType = {};\r\n\r\n            if (!values.email) {\r\n                errors.email = \"Required\"\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = 'Invalid email address'\r\n            }\r\n\r\n            return errors;\r\n        }),\r\n\r\n        onSubmit: values => {\r\n            dispatch(passwordRecovery(values.email, from, message))\r\n        },\r\n    });\r\n\r\n    return (\r\n        <>\r\n            {status === \"loading\" ? <Preloader/> : null}\r\n            <div className={s.wrapper}>\r\n                <span className={s.signUp}>Recovery Password</span>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                    <div className={s.inputFormRegister}>\r\n                        <label htmlFor=\"email\">Email Address</label>\r\n                        <SuperInputText type=\"email\"\r\n                                        disabled={status === \"loading\"}\r\n                                        {...formik.getFieldProps(\"email\")}/>\r\n                        {formik.errors.email\r\n                            ? (<div className={s.errorMessage}>{formik.errors.email}</div>)\r\n                            : null}\r\n                    </div>\r\n                    <SuperButton disabled={status === \"loading\"} type=\"submit\">Send</SuperButton>\r\n                </form>\r\n            </div>\r\n        </>\r\n    )\r\n}","import SuperInputText from \"../../../n1-main/m1-ui/u3-common/Super-Components/c1-SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../../../n1-main/m1-ui/u3-common/Super-Components/c2-SuperButton/SuperButton\";\r\nimport {useFormik} from \"formik\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {newPassword} from \"./newPassword-reducer\";\r\nimport {Redirect, useParams } from \"react-router-dom\";\r\nimport {AppRootStateType} from \"../../../n1-main/m2-bll/store/redux-store\";\r\nimport s from \"./NewPassword.module.css\";\r\nimport {useState} from \"react\";\r\nimport {StatusType} from \"../../../n1-main/m1-ui/u1-app/app-reducer\";\r\nimport {Preloader} from \"../../../n1-main/m1-ui/u3-common/Super-Components/c7-Preloader/Preloader\";\r\n\r\ntype ErrorsDataType = {\r\n    newPassword?: string\r\n    repeatPassword?: string\r\n}\r\n\r\nexport const NewPassword = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const {token} = useParams<{token: string}>()\r\n    const isPasswordChanged = useSelector<AppRootStateType, boolean>(state => state.newPassword.isPasswordChanged)\r\n    const status = useSelector<AppRootStateType, StatusType>(state => state.app.status)\r\n\r\n    const [type, setType] = useState<string>('password')\r\n\r\n    const showHide = () => {\r\n        setType(type === 'text' ? 'password' : 'text')\r\n    }\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            newPassword: '',\r\n            repeatPassword: ''\r\n        },\r\n\r\n        validate: (values => {\r\n            let errors: ErrorsDataType = {};\r\n\r\n            if (!values.newPassword) {\r\n                errors.newPassword = \"Required\"\r\n            } else if (values.newPassword.length < 8) {\r\n                errors.newPassword = \"Password must be more than 7 characters.\"\r\n            }\r\n\r\n            if (!values.repeatPassword) {\r\n                errors.repeatPassword = \"Required\"\r\n            } else if (values.repeatPassword !== values.newPassword) {\r\n                errors.repeatPassword = \"Password mismatch\"\r\n            }\r\n\r\n            return errors;\r\n        }),\r\n\r\n        onSubmit: values => {\r\n            dispatch(newPassword(values.newPassword, token))\r\n        },\r\n    });\r\n\r\n    if(isPasswordChanged) {\r\n        return <Redirect to={\"/login\"}/>\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {status === \"loading\" ? <Preloader/> : null}\r\n            <div className={s.wrapper}>\r\n                <span className={s.signUp}>New Password</span>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                    <div className={s.inputFormRegister}>\r\n                        <label htmlFor=\"password\">New Password</label>\r\n                        <SuperInputText type={type}\r\n                                        disabled={status === \"loading\"}\r\n                                        {...formik.getFieldProps(\"newPassword\")}/>\r\n                        <span className={s.showHideMenu}\r\n                              onClick={showHide}>{type === 'text' ? '🔒' : '🔑'}</span>\r\n                        {formik.touched.newPassword && formik.errors.newPassword\r\n                            ? (<div className={s.errorMessage}>{formik.errors.newPassword}</div>)\r\n                            : null}\r\n                    </div>\r\n                    <div className={s.inputFormRegister}>\r\n                        <label htmlFor=\"password\">Repeat Password</label>\r\n                        <SuperInputText type={type}\r\n                                        disabled={status === \"loading\"}\r\n                                        {...formik.getFieldProps(\"repeatPassword\")}/>\r\n                        <span className={s.showHideMenu}\r\n                              onClick={showHide}>{type === 'text' ? '🔒' : '🔑'}</span>\r\n                        {formik.touched.repeatPassword && formik.errors.repeatPassword\r\n                            ? (<div className={s.errorMessage}>{formik.errors.repeatPassword}</div>)\r\n                            : null}\r\n                    </div>\r\n                    <SuperButton disabled={status === \"loading\"} type=\"submit\">Change</SuperButton>\r\n                </form>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\nimport s from './SuperCheckbox.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n}\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange,\n        onChangeChecked,\n        className,\n        spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange && onChange(e);\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)// сделайте так чтоб работал onChange и onChangeChecked\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\n\n    return (\n        <label className={s.label}>\n            <input\n                type={'checkbox'}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    )\n}\n\nexport default SuperCheckbox\n","import React, {DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState} from 'react'\nimport SuperInputText from '../c1-SuperInputText/SuperInputText'\nimport s from './SuperSpan.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n// тип пропсов обычного спана\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n\n    spanProps?: DefaultSpanPropsType // пропсы для спана\n}\n\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\n    {\n        autoFocus, // игнорировать изменение этого пропса\n        onBlur,\n        onEnter,\n        spanProps,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const [editMode, setEditMode] = useState<boolean>(false)\n    const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {}\n\n    const onEnterCallback = () => {\n        setEditMode(false)\n        // выключить editMode при нажатии Enter\n        onEnter && onEnter()\n    }\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\n        setEditMode(false) // выключить editMode при нажатии за пределами инпута\n        onBlur && onBlur(e)\n    }\n    const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\n        setEditMode(true) // включить editMode при двойном клике\n        onDoubleClick && onDoubleClick(e)\n    }\n\n    const spanClassName = `${s.superSpan} ${className}`\n\n    return (\n        <>\n            {editMode\n                ? (\n                    <SuperInputText\n                        autoFocus // пропсу с булевым значением не обязательно указывать true\n                        onBlur={onBlurCallback}\n                        onEnter={onEnterCallback}\n\n                        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n                    />\n                ) : (\n                    <span\n                        onDoubleClick={onDoubleClickCallBack}\n                        className={spanClassName}\n\n                        {...restSpanProps}\n                    >\n                        {/*если нет захардкодженного текста для спана, то значение инпута*/}\n                        {children || restProps.value}\n                    </span>\n                )\n            }\n        </>\n    )\n}\n\nexport default SuperEditableSpan\n","import React, {SelectHTMLAttributes, DetailedHTMLProps, ChangeEvent} from 'react'\nimport s from './SuperSelect.module.css'\n\ntype DefaultSelectPropsType = DetailedHTMLProps<SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>\n\ntype SuperSelectPropsType = DefaultSelectPropsType & {\n    options?: string[]\n    onChangeOption?: (option: string) => void\n}\n\nconst SuperSelect: React.FC<SuperSelectPropsType> = (\n    {\n        options,\n        onChange,\n        onChangeOption,\n        ...restProps\n    }\n) => {\n    const mappedOptions: JSX.Element[] = options // map options with key\n        ? options.map((el, i) => {\n            return <option key={`${el}-${i}`} value={el}>{el}</option>\n        })\n        : [];\n\n    const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\n        onChange && onChange(e);\n        onChangeOption && onChangeOption(e.currentTarget.value)\n    }\n\n    return (\n        <div className={s.select}>\n            <select onChange={onChangeCallback} {...restProps}>\n                {mappedOptions}\n            </select>\n        </div>\n    )\n}\n\nexport default SuperSelect\n","import React, {ChangeEvent, InputHTMLAttributes, DetailedHTMLProps} from 'react'\nimport s from './../c3-SuperCheckbox/SuperCheckbox.module.css'\n\ntype DefaultRadioPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperRadioPropsType = DefaultRadioPropsType & {\n    options?: string[]\n    onChangeOption?: (option: string) => void\n}\n\nconst SuperRadio: React.FC<SuperRadioPropsType> = (\n    {\n        type, name,\n        options, value,\n        onChange, onChangeOption,\n        ...restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange && onChange(e);\n        onChangeOption && onChangeOption(e.currentTarget.value)\n    }\n\n\n    const mappedOptions: JSX.Element[] = options ? options.map((el, i) => ( // map options with key\n        <label key={`${name}-${i}`}>\n            <input\n                type={'radio'}\n                name={name}\n                checked={el === value}\n                value={el}\n                onChange={onChangeCallback}\n                className={s.checkbox}\n                {...restProps}\n            />\n            {el}\n        </label>\n    )) : []\n\n    return (\n        <>\n            {mappedOptions}\n        </>\n    )\n}\n\nexport default SuperRadio\n","import {useState} from \"react\";\r\nimport SuperInputText from \"../../n1-main/m1-ui/u3-common/Super-Components/c1-SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../../n1-main/m1-ui/u3-common/Super-Components/c2-SuperButton/SuperButton\";\r\nimport SuperCheckbox from \"../../n1-main/m1-ui/u3-common/Super-Components/c3-SuperCheckbox/SuperCheckbox\";\r\nimport SuperEditableSpan from \"../../n1-main/m1-ui/u3-common/Super-Components/c4-SuperEditableSpan/SuperEditableSpan\";\r\nimport SuperSelect from \"../../n1-main/m1-ui/u3-common/Super-Components/c5-SuperSelect/SuperSelect\";\r\nimport SuperRadio from \"../../n1-main/m1-ui/u3-common/Super-Components/c6-SuperRadio/SuperRadio\";\r\n\r\nconst arr = ['Tim', 'Nikolay', 'Nikita']\r\n\r\n\r\nexport const Test = () => {\r\n    const [value, setValue] = useState<string>('')\r\n    const [selections, onChangeOption] = useState(arr[1])\r\n\r\n    return (\r\n        <>\r\n            <SuperInputText/>\r\n            <SuperCheckbox/>\r\n            <SuperButton>\r\n                Click here\r\n            </SuperButton>\r\n            <SuperEditableSpan\r\n                value={value}\r\n                onChangeText={setValue}\r\n                spanProps={{children: value ? undefined : 'enter text...'}}\r\n            />\r\n            <SuperSelect\r\n                options={arr}\r\n                value={selections}\r\n                onChangeOption={onChangeOption}\r\n            />\r\n            <SuperRadio\r\n                name={'radio'}\r\n                options={arr}\r\n                value={selections}\r\n                onChangeOption={onChangeOption}\r\n            />\r\n        </>\r\n    )\r\n}","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport s from './Error404.module.css'\r\n\r\nexport const Error404 = () => {\r\n    return <div>\r\n        <div className={s.c}>\r\n            <div className={s._404}>404</div>\r\n            <div className={s._1}>THE PAGE</div>\r\n            <div className={s._2}>WAS NOT FOUND</div>\r\n            <NavLink className={s.btn} to='/profile'>&#8592;BACK TO PROFILE</NavLink>\r\n        </div>\r\n    </div>\r\n}","export const Profile = () => {\r\n    return (\r\n        <>\r\n            Profile Page\r\n        </>\r\n    )\r\n}","import {useFormik} from \"formik\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport SuperInputText from \"../../../n1-main/m1-ui/u3-common/Super-Components/c1-SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../../../n1-main/m1-ui/u3-common/Super-Components/c2-SuperButton/SuperButton\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {registerUser} from \"./register-reducer\";\r\nimport {AppRootStateType} from \"../../../n1-main/m2-bll/store/redux-store\";\r\nimport {useState} from \"react\";\r\nimport s from './Register.module.css';\r\n\r\ntype FormikErrorType = {\r\n    email?: string\r\n    password?: string\r\n    confirmPassword?: string\r\n}\r\n\r\nexport const Register = () => {\r\n\r\n    const isRegister = useSelector<AppRootStateType, boolean>(state => state.register.isRegister)\r\n    const dispatch = useDispatch();\r\n\r\n    const [type, setType] = useState<string>('password')\r\n\r\n    const showHide = () => {\r\n        setType(type === 'text' ? 'password' : 'text')\r\n    }\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n            confirmPassword: '',\r\n        },\r\n        validate: (values) => {\r\n            const errors: FormikErrorType = {};\r\n            if (!values.email) {\r\n                errors.email = 'Email is required';\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = 'Invalid email address';\r\n            }\r\n\r\n            if (!values.password) {\r\n                errors.password = 'Password is required';\r\n            } else if (!/(?=.*[0-9])/gi.test(values.password)) {\r\n                errors.password = 'The password must contain at least one number'\r\n            } else if (!/(?=.*[a-z])(?=.*[A-Z])/gi.test(values.password)) {\r\n                errors.password = 'The password  must contain at least one lowercase or uppercase Latin letter'\r\n            } else if (!/[0-9a-zA-Z!@#$%^&*]{8,}/gi.test(values.password)) {\r\n                errors.password = 'The password must have a minimum 8 characters'\r\n            }\r\n\r\n            if (!values.confirmPassword) {\r\n                errors.confirmPassword = 'Confirm password is required';\r\n            } else if (values.password !== values.confirmPassword) {\r\n                errors.confirmPassword = 'Password mismatch';\r\n            }\r\n\r\n            return errors;\r\n        },\r\n        onSubmit: values => {\r\n            dispatch(registerUser(values.email, values.password))\r\n            formik.resetForm();\r\n        },\r\n    });\r\n\r\n    if (isRegister) {\r\n        return <Redirect to={'/login'}/>\r\n    }\r\n\r\n    return (\r\n        <div className={s.authRegister}>\r\n            <div className={s.wrapper}>\r\n                <span className={s.incubator}>Sign up</span>\r\n                <span className={s.signUp}>Please fill in the form below</span>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                    <div className={s.inputFormRegister}>\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <SuperInputText\r\n                            id=\"email\"\r\n                            type=\"email\"\r\n                            {...formik.getFieldProps('email')}\r\n                        />\r\n                        {formik.errors.email && formik.touched.email &&\r\n                        <div className={s.errorMessage}>{formik.errors.email}</div>}\r\n                    </div>\r\n\r\n                    <div className={s.inputFormRegister}>\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <SuperInputText\r\n                            id=\"password\"\r\n                            type={type}\r\n                            {...formik.getFieldProps('password')}\r\n                        />\r\n                        <span className={s.showHideMenu}\r\n                              onClick={showHide}>{type === 'text' ? '🔒' : '🔑'}</span>\r\n                        {formik.errors.password && formik.touched.password &&\r\n                        <div className={s.errorMessage}>{formik.errors.password}</div>}\r\n                    </div>\r\n\r\n                    <div className={s.inputFormRegister}>\r\n                        <label htmlFor=\"confirmPassword\">Confirm password</label>\r\n                        <SuperInputText\r\n                            id=\"confirmPassword\"\r\n                            type=\"password\"\r\n                            {...formik.getFieldProps('confirmPassword')}\r\n                        />\r\n                        {formik.errors.confirmPassword && formik.touched.confirmPassword &&\r\n                        <div className={s.errorMessage}>{formik.errors.confirmPassword}</div>}\r\n                    </div>\r\n\r\n                    <div className={s.buttonFormRegister}>\r\n                        <SuperButton\r\n                            className={s.button}\r\n                            type='reset'>Cancel\r\n                        </SuperButton>\r\n                        <SuperButton\r\n                            className={s.button}\r\n                            type=\"submit\">Sign up\r\n                        </SuperButton>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import {Route, Switch} from \"react-router-dom\";\r\nimport {Login} from \"../../../n2-features/f1-auth/a1-login/Login\";\r\nimport {RecoveryPassword} from \"../../../n2-features/f1-auth/a3-recoveryPassword/RecoveryPassword\";\r\nimport {NewPassword} from \"../../../n2-features/f1-auth/a4-new-password/NewPassword\";\r\nimport {Test} from \"../../../n2-features/f0-test/Test\";\r\nimport {Error404} from \"../../../n2-features/f3-error/Error404\";\r\nimport { Profile } from \"../u2-components/Profile/Profile\";\r\nimport { Register } from \"../../../n2-features/f1-auth/a2-register/Register\";\r\n\r\nexport const Routes = () => {\r\n    return (\r\n        <div>\r\n            <Switch>\r\n                <Route path={'/login'} render={() => <Login/>}/>\r\n                <Route path={'/register'} render={() => <Register/>}/>\r\n                <Route path={'/profile'} render={() => <Profile/>}/>\r\n                <Route path={'/recovery'} render={() => <RecoveryPassword/>}/>\r\n                <Route path={'/new-password/:token'} render={() => <NewPassword/>}/>\r\n                <Route path={'/test'} render={() => <Test/>}/>\r\n                <Route render={() => <Error404/>}/>\r\n            </Switch>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport h from './Header.module.css'\r\n\r\nexport const Header = () => {\r\n    return (\r\n        <div>\r\n            <div className={h.wrapper}>\r\n                <NavLink className={h.link} activeClassName={h.active} to={'/login'}>SIGN IN</NavLink>\r\n                <NavLink className={h.link} activeClassName={h.active} to={'/register'}>SIGN UP</NavLink>\r\n                <NavLink className={h.link} activeClassName={h.active} to={'/profile'}>Profile</NavLink>\r\n                <NavLink className={h.link} activeClassName={h.active} to={'/recovery'}>Recovery</NavLink>\r\n                <NavLink className={h.link} activeClassName={h.active} to={'/new-password'}>New Password</NavLink>\r\n                <NavLink className={h.link} activeClassName={h.active} to={'/test'}>Test</NavLink>\r\n                <NavLink className={h.link} activeClassName={h.active} to={'/404'}>Error 404</NavLink>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import {Routes} from \"../../u4-routes/Routes\";\r\nimport {Header} from \"../Header/Header\";\r\n\r\nexport const Main = () => {\r\n    return (\r\n        <>\r\n            <Header/>\r\n            <Routes/>\r\n        </>\r\n    )\r\n}","import React from 'react';\r\nimport {Provider} from 'react-redux';\r\nimport {HashRouter} from 'react-router-dom';\r\nimport {store} from '../../m2-bll/store/redux-store';\r\nimport {Main} from '../u2-components/Main/Main';\r\nimport './App.css';\r\n\r\n// Tim's update\r\n\r\nconst App = () => {\r\n    return (\r\n        <div className=\"App\">\r\n            <HashRouter>\r\n                <Provider store={store}>\r\n                    <Main/>\r\n                </Provider>\r\n            </HashRouter>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './n1-main/m1-ui/u1-app/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"authRegister\":\"Register_authRegister__1J4Dl\",\"wrapper\":\"Register_wrapper__1_QAq\",\"incubator\":\"Register_incubator__MLZxn\",\"signUp\":\"Register_signUp__2a5zp\",\"inputFormRegister\":\"Register_inputFormRegister__1jygd\",\"errorMessage\":\"Register_errorMessage__3XFfq\",\"showHideMenu\":\"Register_showHideMenu__ojVp_\",\"buttonFormRegister\":\"Register_buttonFormRegister__JsPDK\"};"],"sourceRoot":""}