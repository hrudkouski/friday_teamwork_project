{"version":3,"sources":["n1-main/m1-ui/u3-common/CommonForm/CommonForm.module.css","n1-main/m1-ui/u2-components/Packs/Cards/Cards.module.css","n1-main/m1-ui/u3-common/Pagination/Pagination.module.css","n1-main/m1-ui/u2-components/Header/Header.module.css","n1-main/m1-ui/u2-components/Packs/Packs.module.css","n1-main/m1-ui/u2-components/Profile/Profile.module.css","n1-main/m1-ui/u2-components/Learn/Learn.module.css","n1-main/m1-ui/u3-common/Super-Components/c3-SuperCheckbox/SuperCheckbox.module.css","n2-features/f3-error/Error404.module.css","n1-main/m1-ui/u2-components/Packs/Pack/Pack.module.css","n1-main/m1-ui/u3-common/Super-Components/c8-SuperSlider/Slider.module.css","n1-main/m1-ui/u3-common/Super-Components/c1-SuperInputText/SuperInputText.module.css","n1-main/m1-ui/u3-common/Super-Components/c2-SuperButton/SuperButton.module.css","n1-main/m1-ui/u3-common/Super-Components/c7-Preloader/Preloader.module.css","n1-main/m1-ui/u2-components/Main/Main.module.css","n1-main/m1-ui/u3-common/Super-Components/c4-SuperEditableSpan/SuperSpan.module.css","n1-main/m1-ui/u3-common/Super-Components/c5-SuperSelect/SuperSelect.module.css","n1-main/m1-ui/u1-app/App.module.css","n1-main/m1-ui/u3-common/ModalWindow/ModalWindow.module.css","n3-dall/api/api_cards.ts","n1-main/m1-ui/u1-app/app-reducer.ts","n2-features/f1-auth/a1-login/login-reducer.ts","n2-features/f1-auth/a2-register/register-reducer.ts","n2-features/f1-auth/a4-new-password/newPassword-reducer.ts","n1-main/m1-ui/u2-components/Packs/packs-reducer.ts","n1-main/m1-ui/u2-components/Packs/Cards/cards-reducer.ts","n1-main/m2-bll/store/redux-store.ts","n2-features/f1-auth/a3-recoveryPassword/recoveryPassword-reducer.ts","n2-features/f1-auth/a5-profile/profile-reducer.ts","n1-main/m1-ui/u3-common/Super-Components/c1-SuperInputText/SuperInputText.tsx","n1-main/m1-ui/u3-common/Super-Components/c2-SuperButton/SuperButton.tsx","n1-main/m1-ui/u3-common/Super-Components/c3-SuperCheckbox/SuperCheckbox.tsx","n1-main/m1-ui/u3-common/Super-Components/c7-Preloader/Preloader.tsx","n1-main/m1-ui/u3-common/CommonForm/CommonForm.tsx","n2-features/f1-auth/a1-login/Login.tsx","n2-features/f1-auth/a3-recoveryPassword/RecoveryPassword.tsx","n2-features/f1-auth/a4-new-password/NewPassword.tsx","n1-main/m1-ui/u3-common/Super-Components/c4-SuperEditableSpan/SuperEditableSpan.tsx","n1-main/m1-ui/u3-common/Super-Components/c5-SuperSelect/SuperSelect.tsx","n1-main/m1-ui/u3-common/Super-Components/c6-SuperRadio/SuperRadio.tsx","n2-features/f0-test/Test.tsx","n2-features/f3-error/Error404.tsx","n1-main/m1-ui/u2-components/Profile/Profile.tsx","n2-features/f1-auth/a2-register/Register.tsx","n1-main/m1-ui/u3-common/ModalWindow/UpdatePack/UpdatePacksModalWindow.tsx","n1-main/m1-ui/u3-common/ModalWindow/DeletePack/DeletePackModalWindow.tsx","n1-main/m1-ui/u2-components/Packs/Pack/Pack.tsx","n1-main/m1-ui/u3-common/ModalWindow/CreatePacks/CreatePackModalWindow.tsx","n1-main/m1-ui/u3-common/Pagination/Pagination.tsx","n1-main/m1-ui/u3-common/Super-Components/c8-SuperSlider/Slider.tsx","n1-main/m1-ui/u2-components/Packs/Packs.tsx","n1-main/m1-ui/u3-common/ModalWindow/CreateCard/CreateCardModalWindow.tsx","n1-main/m1-ui/u3-common/ModalWindow/DeleteCard/DeleteCardModalWindow.tsx","n1-main/m1-ui/u3-common/ModalWindow/UpdateCard/UpdateCardModalWindow.tsx","n1-main/m1-ui/u2-components/Packs/Cards/Card/Card.tsx","n1-main/m1-ui/u2-components/Packs/Cards/Cards.tsx","n1-main/m1-ui/u2-components/Learn/Learn.tsx","n1-main/m1-ui/u4-routes/Routes.tsx","n1-main/m1-ui/u2-components/Header/Header.tsx","n1-main/m1-ui/u2-components/Main/Main.tsx","n1-main/m1-ui/u1-app/App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","instance","axios","create","baseURL","withCredentials","recoveryPasswordApi","email","from","message","post","password","resetPasswordToken","loginApi","rememberMe","delete","registerApi","packsApi","pageCount","page","packName","min","max","id","get","title","cardsPack","name","_id","put","cardsApi","cardsPack_id","newCard","card","updateCard","learnApi","grade","card_id","SET_ERROR","CHANGE_STATUS","SET_IS_INITIALIZED","initialState","error","status","isInitialized","changeStatusAC","type","setIsInitializedAC","SET_IS_LOGGED_IN","SET_IS_LOGGED_OUT","profile","avatar","created","isAdmin","publicCardPacksCount","token","tokenDeathTime","updated","verified","__v","isLoggedIn","logInAC","logOutTC","dispatch","then","toast","success","catch","err","finally","SET_REGISTER_DATA","isRegister","registerUser","res","data","addedUser","length","e","response","isPasswordChanged","cardPacks","cardPacksTotalCount","maxCardsCount","minCardsCount","activeModal","packCardsId","setIdAC","setEntityStatusPacksAC","entityStatus","setPacks","getState","state","currentPage","packs","packsOnPage","cards","count","SET_CARDS","SET_CARDS_TOTAL_COUNT","SET_CURRENT_PAGE","SET_UPDATE_GRADE_CARD","packUserId","cardsTotalCount","minGrade","maxGrade","getCards","packId","duration","updateGrade","setUpdateGradeCardAC","rootReducer","combineReducers","app","action","login","register","recoveryPassword","newPassword","value","maxCount","minCount","map","c","active","store","createStore","applyMiddleware","thunk","window","SuperInputText","onChange","className","onKeyPress","onChangeText","onEnter","spanClassName","restProps","finalSpanClassName","s","finalInputClassName","input","errorInput","currentTarget","key","SuperButton","red","finalClassName","button","SuperCheckbox","onChangeChecked","children","checkbox","label","checked","Preloader","loaderWrapper","loader","CommonForm","props","useSelector","useState","typeIcon","setTypeIcon","showHide","initialValues","confirmPassword","formik","useFormik","validate","values","errors","test","onSubmit","callBack","resetForm","emailField","inputFormCommon","htmlFor","placeholder","getFieldProps","touched","errorMessage","passwordField","showHideMenu","onClick","confirmPasswordField","submitButton","commonFormButton","disabled","commonForm","wrapper","formTitle","formDescription","handleSubmit","checkBoxFormCommon","formGenerator","loginAdditionalField","to","Login","useDispatch","RecoveryPassword","passwordRecovery","NewPassword","useParams","SuperEditableSpan","autoFocus","onBlur","spanProps","editMode","setEditMode","onDoubleClick","restSpanProps","superSpan","SuperSelect","options","onChangeOption","mappedOptions","el","i","select","SuperRadio","onChangeCallback","arr","Test","setValue","selections","undefined","Error404","_404","_1","_2","btn","Profile","avatarAddress","p","ava","src","alt","greeting","numberOfPacks","userPacks","Register","UpdatePacksModalWindow","setTitle","modalContainer","setActive","modalContent","stopPropagation","DeletePackModalWindow","allButton","packID","Pack","userLoginID","setActiveModal","activeDeletePackModal","setActiveDeletePackModal","date","Date","pack","time","Intl","DateTimeFormat","hour","minute","second","format","user_name","cardsCount","link","PATH","CARDS","LEARN","user_id","Button","activeModalUpdate","activeModalDelete","CreatePackModalWindow","createPacks","PaginationComponent","totalPages","handlePageChange","paginationBox","marginPagesDisplayed","pageRangeDisplayed","previousLabel","nextLabel","containerClassName","pagination","activeClassName","onPageChange","pageLinkClassName","pageClassName","nextClassName","previousClassName","breakClassName","previousLinkClassName","nextLinkClassName","breakLinkClassName","disabledClassName","Slider","leftSliderValue","setLeftSliderValue","rightSliderValue","setRightSliderValue","onload","slideOne","slideTwo","sliderOne","document","getElementById","sliderTwo","displayValOne","displayValTwo","sliderTrack","percent1","percent2","parseInt","textContent","fillColor","style","background","container","onInput","Packs","packsPerPage","Math","ceil","activeModalAdd","setActiveModalAdd","searchValue","setSearchValue","isMyPack","setIsMyPack","useEffect","search","setPackNameAC","copyPacks","packsContainer","navContainer","allMyPacks","searchContainer","searchInput","searchButton","packsHeader","selectedPage","selected","CreateCardModalWindow","question","setQuestion","answer","setAnswer","cardsPackID","createCardsHandler","createCard","onPressEnterAddCard","required","DeleteCardModalWindow","cardId","cardID","UpdateCardModalWindow","Card","activeDeleteCardModal","setActiveDeleteCardModal","activeUpdateCardModal","setActiveUpdateCardModal","update","toLocaleDateString","toFixed","Cards","userCardID","copyCards","backLink","addCardButton","titleNoCards","monkey","Learn","currentQuestion","stop","setStop","setGrade","learnContainer","infoBlock","block","butContainer","but","LOGIN","REGISTRATION","PROFILE","RECOVERY_PASSWORD","NEW_PASSWORD","PACKS_LIST","TEST","ERROR_404","UNKNOWN_PAGE","Routes","exact","path","render","Header","isloggedIn","h","header","activeLink","linkDisabled","Main","m","main","App","a","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.97e73d3e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"commonForm\":\"CommonForm_commonForm__-QlUM\",\"wrapper\":\"CommonForm_wrapper__1xiTp\",\"formTitle\":\"CommonForm_formTitle__25a-c\",\"formDescription\":\"CommonForm_formDescription__1gtlg\",\"inputFormCommon\":\"CommonForm_inputFormCommon__1Yk-9\",\"checkBoxFormCommon\":\"CommonForm_checkBoxFormCommon__qL_83\",\"errorMessage\":\"CommonForm_errorMessage__2x7vQ\",\"showHideMenu\":\"CommonForm_showHideMenu__i3v16\",\"commonFormButton\":\"CommonForm_commonFormButton__g4Gdy\",\"loginAdditionalField\":\"CommonForm_loginAdditionalField__1UJ2K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cards\":\"Cards_cards__2w9v3\",\"backLink\":\"Cards_backLink__1G3vc\",\"titleNoCards\":\"Cards_titleNoCards__f5Rl1\",\"monkey\":\"Cards_monkey__3ehIk\",\"link\":\"Cards_link__2hJg6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginationBox\":\"Pagination_paginationBox__1dTBU\",\"pagination\":\"Pagination_pagination__3Ner_\",\"pageClassName\":\"Pagination_pageClassName__22kcI\",\"pageLinkClassName\":\"Pagination_pageLinkClassName__8HYpm\",\"active\":\"Pagination_active__3u6KO\",\"nextClassName\":\"Pagination_nextClassName__1TSAP\",\"previousClassName\":\"Pagination_previousClassName__3mrlc\",\"previousLinkClassName\":\"Pagination_previousLinkClassName__1YfNC\",\"nextLinkClassName\":\"Pagination_nextLinkClassName__3HMeS\",\"breakClassName\":\"Pagination_breakClassName__ZHk_2\",\"breakLinkClassName\":\"Pagination_breakLinkClassName__2obed\",\"disabledClassName\":\"Pagination_disabledClassName__Jk3Xs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__cvDjZ\",\"link\":\"Header_link__2ysqS\",\"linkDisabled\":\"Header_linkDisabled__1n1il\",\"activeLink\":\"Header_activeLink__1e3ZQ\",\"wrapper\":\"Header_wrapper__3xRFV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"packsContainer\":\"Packs_packsContainer__JjSkn\",\"navContainer\":\"Packs_navContainer__ENoc9\",\"allMyPacks\":\"Packs_allMyPacks__3THVt\",\"searchContainer\":\"Packs_searchContainer__1V-ri\",\"searchButton\":\"Packs_searchButton__3qDai\",\"searchInput\":\"Packs_searchInput__3IuKC\",\"packsHeader\":\"Packs_packsHeader__Op-CR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__3kjRc\",\"title\":\"Profile_title__3AOxY\",\"greeting\":\"Profile_greeting__HHICK\",\"numberOfPacks\":\"Profile_numberOfPacks__1Ywex\",\"ava\":\"Profile_ava__2UKLf\",\"userPacks\":\"Profile_userPacks__1umca\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"learnContainer\":\"Learn_learnContainer__292yl\",\"question\":\"Learn_question__1ss3h\",\"block\":\"Learn_block__1dCJO\",\"butContainer\":\"Learn_butContainer__2gnAQ\",\"infoBlock\":\"Learn_infoBlock__12r4Z\",\"titleNoCards\":\"Learn_titleNoCards__1Gcmd\",\"monkey\":\"Learn_monkey__3ZwyV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__1hQIA\",\"label\":\"SuperCheckbox_label__3FI_A\",\"spanClassName\":\"SuperCheckbox_spanClassName__1ZYbX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"c\":\"Error404_c__bDX6C\",\"_404\":\"Error404__404__Srhjh\",\"_1\":\"Error404__1__14RqW\",\"_2\":\"Error404__2__3vj9q\",\"text\":\"Error404_text__1hdOd\",\"btn\":\"Error404_btn__2q94f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"Pack_link__3EeCh\",\"Button\":\"Pack_Button__U3GwS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Slider_wrapper__3rMnN\",\"container\":\"Slider_container__2Luug\",\"sliderTrack\":\"Slider_sliderTrack__1SSXq\",\"values\":\"Slider_values__60qc4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"SuperInputText_input__193Ko\",\"errorInput\":\"SuperInputText_errorInput__3UDcl\",\"error\":\"SuperInputText_error__2bX29\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"SuperButton_button__3pFly\",\"glowing\":\"SuperButton_glowing__MANjT\",\"red\":\"SuperButton_red__1xDsR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loaderWrapper\":\"Preloader_loaderWrapper__3GCJs\",\"loader\":\"Preloader_loader__2BOy5\",\"spin\":\"Preloader_spin__3bGt1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Main_main__1U1OV\",\"container\":\"Main_container__300R0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superSpan\":\"SuperSpan_superSpan__2bOWk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"SuperSelect_select__2k_GJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__32MZb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalContainer\":\"ModalWindow_modalContainer__1M4dP\",\"modalContent\":\"ModalWindow_modalContent__38YFD\",\"title\":\"ModalWindow_title__24C24\",\"allButton\":\"ModalWindow_allButton__3GOfw\"};","import axios from \"axios\";\nimport {EntityStatusType} from \"../../n1-main/m1-ui/u2-components/Packs/packs-reducer\";\nimport {ProfileResponseType} from \"../../n2-features/f1-auth/a1-login/login-reducer\";\n\nconst instance = axios.create({\n    baseURL: 'https://neko-back.herokuapp.com/2.0/',\n    withCredentials: true,\n})\n\n// Api\nexport const recoveryPasswordApi = {\n    passwordRecovery(email: string, from: string, message: {}) {\n        return instance.post(`auth/forgot`, {\n            email, from, message\n        })\n    },\n    newPassword(password: string, resetPasswordToken: {}) {\n        return instance.post(`auth/set-new-password`, {\n            password, resetPasswordToken\n        })\n    }\n}\n\nexport const loginApi = {\n    authMe() {\n        return instance.post<ProfileResponseType>('auth/me')\n    },\n    login(email: string, password: string, rememberMe: boolean) {\n        return instance.post<ProfileResponseType>(`auth/login`, {email, password, rememberMe})\n    },\n    logOut() {\n        return instance.delete('auth/me')\n    }\n}\n\nexport const registerApi = {\n    registerUser(email: string, password: string) {\n        return instance.post('auth/register', {\n            email, password\n        })\n    },\n}\n\nexport const packsApi = {\n    getPacks(pageCount: number = 7, page: number = 1, packName: string = '', min: number, max: number, id: string) {\n        return instance.get<ResponseDataType>(`/cards/pack/?packName=${packName}&pageCount=${pageCount}&page=${page}&sortPacks=&min=${min}&max=${max}&user_id=${id}`)\n    },\n    createPacks(title: string) {\n        return instance.post(`cards/pack`, {\n            cardsPack: {\n                name: title\n            }\n        })\n    },\n    deletePacks(id: string) {\n        return instance.delete<CardPacksDataType>(`cards/pack?id=${id}`)\n    },\n    updatePacks(_id: string, name: string) {\n        return instance.put(`cards/pack`, {\n            cardsPack: {_id, name}\n        })\n    }\n}\n\nexport const cardsApi = {\n    getCards(cardsPack_id: string, page: number = 1, pageCount: number = 10,) {\n        return instance.get<CardsResponseDataType>\n        (`cards/card?cardsPack_id=${cardsPack_id}&pageCount=${pageCount}&page=${page}`)\n    },\n    createCard(newCard: NewCardType) {\n        return instance.post(`cards/card`, {\n            card: newCard\n        })\n    },\n    deleteCard(cardsPack_id: string) {\n        return instance.delete(`cards/card?id=${cardsPack_id}`)\n    },\n    updateCard(updateCard: updateCardType) {\n        return instance.put('cards/card', {card: updateCard})\n    },\n}\n\nexport const learnApi = {\n    learnCard(grade: number, card_id: string) {\n        return instance.put<GradeDataType>(`/cards/grade`, {grade, card_id})\n    }\n}\n\n// Types\nexport type CardPacksDataType = {\n    _id: string\n    user_id: string\n    user_name: string\n    name: string\n    cardsCount: number\n    created: string\n    updated: Date\n    entityStatus: EntityStatusType\n}\n// export type PacksResponseDataType = {\n//     cardPacks: Array<CardPacksDataType>\n//     cardPacksTotalCount: number\n//     maxCardsCount: number\n//     minCardsCount: number\n//     page: number\n//     pageCount: number\n// }\nexport type CardsResponseDataType = {\n    cards: Array<CardDataType>,\n    packUserId: string\n    page: number\n    pageCount: number\n    cardsTotalCount: number\n    minGrade: number\n    maxGrade: number\n    token: string\n    tokenDeathTime: number\n}\nexport type CardDataType = {\n    answer: string\n    answerImg: string\n    answerVideo: string\n    cardsPack_id: string\n    comments: string\n    created: string\n    grade: number\n    more_id: string\n    question: string\n    questionImg: string\n    questionVideo: string\n    rating: number\n    shots: number\n    type: string\n    updated: string\n    user_id: string\n    __v: number\n    _id: string\n}\nexport type NewCardType = {\n    cardsPack_id: string\n    question?: string\n    answer?: string\n}\ntype updateCardType = {\n    _id: string,\n    question?: string,\n    answer?: string\n}\nexport type ResponseDataType = {\n    cardPacks: Array<CardPacksDataType>\n    cardPacksTotalCount: number\n    maxCardsCount: number\n    minCardsCount: number\n    page: number\n    pageCount: number\n}\n\nexport type GradeDataType = {\n    _id: string\n    cardsPack_id: string\n    card_id: string\n    user_id: string\n    grade: number\n    shots: number\n}\n\n","import {logInAC} from \"../../../n2-features/f1-auth/a1-login/login-reducer\";\nimport {loginApi} from \"../../../n3-dall/api/api_cards\";\nimport {AppThunkType} from \"../../m2-bll/store/redux-store\";\n\n// Actions\nconst SET_ERROR = 'friday_teamwork_project/app-reducer/SET_ERROR';\nconst CHANGE_STATUS = 'friday_teamwork_project/app-reducer/CHANGE_STATUS';\nconst SET_IS_INITIALIZED = 'friday_teamwork_project/login-reducer/SET_IS_AM_AUTH';\n\n// Types\nexport type ErrorType = null | string;\nexport type SetAppErrorAT = ReturnType<typeof setAppError>;\nexport type ChangeStatusAT = ReturnType<typeof changeStatusAC>;\nexport type SetIsInitializedAT = ReturnType<typeof setIsInitializedAC>\nexport type AppActionsType = SetAppErrorAT | ChangeStatusAT | SetIsInitializedAT;\nexport type InitialStateType = typeof initialState;\nexport type StatusType = 'idle' | 'loading' | 'succeeded' | 'failed'\n\n//Initial State\nconst initialState = {\n    error: null as ErrorType,\n    status: 'idle' as StatusType,\n    isInitialized: false\n}\n\n// Reducer\nexport const appReducer = (state: InitialStateType = initialState, action: AppActionsType): InitialStateType => {\n    switch (action.type) {\n        case SET_ERROR:\n            return {...state, error: action.error}\n        case CHANGE_STATUS:\n            return {...state, status: action.status}\n        case SET_IS_INITIALIZED:\n            return {...state, isInitialized: action.isInitialized}\n        default:\n            return state\n    }\n}\n\n// Action Creators\nexport const setAppError = (error: ErrorType) => ({type: SET_ERROR, error}) as const;\nexport const changeStatusAC = (status: StatusType) =>\n    ({type: CHANGE_STATUS, status} as const)\nexport const setIsInitializedAC = (isInitialized: boolean) => ({type: SET_IS_INITIALIZED, isInitialized} as const)\n\n// Thunk\nexport const isInitializedTC = (): AppThunkType =>\n    (dispatch) => {\n        dispatch(changeStatusAC(\"loading\"))\n        loginApi.authMe()\n            .then((res) => {\n                dispatch(setIsInitializedAC(true))\n                dispatch(logInAC(res.data, true))\n                dispatch(changeStatusAC(\"succeeded\"))\n            })\n            .catch(() => {\n                dispatch(changeStatusAC(\"failed\"))\n            })\n            .finally(() => {\n                dispatch(setIsInitializedAC(true))\n            })\n    }","import {loginApi} from \"../../../n3-dall/api/api_cards\";\nimport {AppThunkType} from \"../../../n1-main/m2-bll/store/redux-store\";\nimport {changeStatusAC, setIsInitializedAC} from \"../../../n1-main/m1-ui/u1-app/app-reducer\";\nimport {toast} from \"react-hot-toast\";\n\n// Actions\nconst SET_IS_LOGGED_IN = 'friday_teamwork_project/login-reducer/SET_IS_LOGGED_IN';\nconst SET_IS_LOGGED_OUT = 'friday_teamwork_project/login-reducer/SET_IS_LOGGED_OUT';\n\n// Types\nexport type LoginActionsType =\n    | ReturnType<typeof logInAC>\n    | ReturnType<typeof logOutAC>\n\nexport type ProfileResponseType = {\n    avatar: string\n    created: string\n    email: string\n    isAdmin: boolean\n    name: string\n    publicCardPacksCount: number\n    rememberMe: boolean\n    token: string\n    tokenDeathTime: number\n    updated: string\n    verified: boolean\n    __v: number\n    _id: string\n}\ntype InitialStateType = typeof initialState;\n\n// Initial State\nconst initialState = {\n    profile: {\n        avatar: '',\n        created: '',\n        email: '',\n        isAdmin: false,\n        name: '',\n        publicCardPacksCount: 0,\n        rememberMe: false,\n        token: '',\n        tokenDeathTime: 0,\n        updated: '',\n        verified: false,\n        __v: 0,\n        _id: ''\n    } || null,\n    isLoggedIn: false,\n}\n\n// Reducer\nexport const loginReducer = (state: InitialStateType = initialState, action: LoginActionsType): InitialStateType => {\n    switch (action.type) {\n        case SET_IS_LOGGED_IN: {\n            return {\n                ...state,\n                profile: action.profile,\n                isLoggedIn: action.isLoggedIn\n            }\n        }\n        case SET_IS_LOGGED_OUT: {\n            return {\n                ...state,\n                isLoggedIn: action.isLoggedIn\n            }\n        }\n        default:\n            return {...state}\n    }\n}\n\n// Actions Creators\nexport const logInAC = (profile: ProfileResponseType, isLoggedIn: boolean) => ({\n    type: SET_IS_LOGGED_IN, profile, isLoggedIn\n} as const)\nexport const logOutAC = (isLoggedIn: boolean) => ({\n    type: SET_IS_LOGGED_OUT, isLoggedIn\n} as const)\n\n// Thunk Creators\nexport const loginTC = (email: string, password: string, rememberMe: boolean): AppThunkType => (dispatch) => {\n    dispatch(changeStatusAC(\"loading\"))\n    loginApi.login(email, password, rememberMe)\n        .then((res) => {\n            toast.success('Login successful')\n            dispatch(changeStatusAC(\"succeeded\"))\n            dispatch(logInAC(res.data, true))\n        })\n        .catch((err) => {\n            dispatch(changeStatusAC(\"failed\"))\n            toast.error(err.message)\n        })\n}\n\nexport const logOutTC = (): AppThunkType => (dispatch) => {\n    dispatch(changeStatusAC(\"loading\"))\n    loginApi.logOut()\n        .then(() => {\n            toast.success(\"logOut success —ฅᐠ.̫ .ᐟฅ—\")\n            dispatch(changeStatusAC(\"succeeded\"))\n            dispatch(logOutAC(false))\n            dispatch(setIsInitializedAC(false))\n        })\n        .catch((err) => {\n            toast.error(err.message)\n            dispatch(changeStatusAC(\"failed\"))\n        })\n        .finally(() => {\n            dispatch(setIsInitializedAC(true))\n            dispatch(changeStatusAC(\"succeeded\"))\n        })\n}","import {registerApi} from \"../../../n3-dall/api/api_cards\";\nimport {AppThunkType} from \"../../../n1-main/m2-bll/store/redux-store\";\nimport {changeStatusAC} from \"../../../n1-main/m1-ui/u1-app/app-reducer\";\nimport {toast} from \"react-hot-toast\";\n\n// Actions\nconst SET_REGISTER_DATA = 'friday_teamwork_project/register-reducer/SET_REGISTER_DATA';\n\n// Types\ntype InitialStateType = typeof initialState;\nexport type RegisterActionsType = ReturnType<typeof setRegisterDataAC>\n\n// Initial State\nconst initialState = {\n    isRegister: false\n}\n\n// Reducer\nexport const registerReducer = (state = initialState, action: RegisterActionsType): InitialStateType => {\n    switch (action.type) {\n        case SET_REGISTER_DATA:\n            return {\n                ...state,\n                isRegister: action.isRegister\n            }\n        default:\n            return {...state}\n    }\n}\n\n// Action Creators\nexport const setRegisterDataAC = (isRegister: boolean) => ({\n    type: SET_REGISTER_DATA, isRegister\n} as const)\n\n// Thunk Creators\nexport const registerUser = (email: string, password: string): AppThunkType => {\n    return (dispatch) => {\n        dispatch(changeStatusAC(\"loading\"))\n        registerApi.registerUser(email, password)\n            .then((res) => {\n                if (res.data.addedUser._id.length > 0) {\n                    toast.success('Registration is done')\n                    dispatch(changeStatusAC(\"succeeded\"))\n                    dispatch(setRegisterDataAC(true))\n                }\n            })\n            .catch((e) => {\n                dispatch(changeStatusAC(\"failed\"))\n                const error = e.response\n                    ? e.response.data.error\n                    : (e.message + ', more details in the console');\n                toast.error(error)\n            })\n    }\n}","import {Dispatch} from \"redux\";\nimport {recoveryPasswordApi} from \"../../../n3-dall/api/api_cards\";\nimport {changeStatusAC} from \"../../../n1-main/m1-ui/u1-app/app-reducer\";\nimport {toast} from \"react-hot-toast\";\n\nconst initialState: InitialStateType = {\n    isPasswordChanged: false\n}\n\nexport const newPasswordReducer = (state: InitialStateType = initialState, action: ActionType): InitialStateType => {\n    switch (action.type) {\n        case \"NEW-PASSWORD/PASSWORD-CHANGED\":\n            return {...state, isPasswordChanged: action.value}\n        default:\n            return {...state}\n    }\n}\n\nconst passwordChanged = (value: boolean) => ({type: \"NEW-PASSWORD/PASSWORD-CHANGED\", value})\n\nexport const newPassword = (password: string, resetPasswordToken: {}) => (dispatch: Dispatch) => {\n    dispatch(changeStatusAC(\"loading\"))\n    recoveryPasswordApi.newPassword(password, resetPasswordToken)\n        .then(() => {\n            dispatch(passwordChanged(true))\n            dispatch(changeStatusAC(\"succeeded\"))\n            toast.success('Password is changed!')\n        })\n        .catch((e) => {\n            const error = e.response\n                ? e.response.data.error\n                : (e.message + ', more details in the console');\n            dispatch(changeStatusAC(\"failed\"))\n            toast.error(error)\n        })\n}\n\ntype InitialStateType = {\n    isPasswordChanged: boolean\n}\n\ntype ActionType = ReturnType<typeof passwordChanged>","import {CardPacksDataType, packsApi, ResponseDataType} from \"../../../../n3-dall/api/api_cards\";\nimport {AppThunkType} from \"../../../m2-bll/store/redux-store\";\nimport {changeStatusAC} from \"../../u1-app/app-reducer\";\nimport {toast} from \"react-hot-toast\";\n\n// Initial State\nconst initialState: InitialStateType = {\n    cardPacks: [],\n    cardPacksTotalCount: 0,\n    maxCardsCount: 0,\n    minCardsCount: 0,\n    page: 1,\n    pageCount: 10,\n    activeModal: false,\n    packCardsId: '',\n    name: '',\n    _id: ''\n}\n\nexport const packsReducer = (state: InitialStateType = initialState, action: PacksActionsType): InitialStateType => {\n    switch (action.type) {\n        case \"CARDS/SET_MAX_CARD_NUMBER\": \n            return {...state, maxCardsCount: action.maxCount}\n        case \"CARDS/SET_MIN_CARD_NUMBER\": \n            return {...state, minCardsCount: action.minCount}\n        case \"CARDS/SET_ID\":\n            return {...state, _id: action._id}\n        case \"CARDS/SET_MIN\":\n            return {...state, minCardsCount: action.min}\n        case \"CARDS/SET_MAX\":\n            return {...state, maxCardsCount: action.max}\n        case \"CARDS/SET_NAME\":\n            return {...state, name: action.name}\n        case \"CARDS/SET_CARDS\":\n            return {...state, cardPacks: action.cards}\n        case \"CARDS/SET_STATUS\":\n            return {\n                ...state,\n                cardPacks: state.cardPacks.map(c => c._id === action.id\n                    ? {...c, entityStatus: action.entityStatus} : c)\n            }\n        case \"CARDS/SET_ACTIVE_MODAL\":\n            return {...state, activeModal: action.active}\n        case 'CARDS/SET_CURRENT_PAGE': {\n            return {...state, page: action.value}\n        }\n        case 'CARDS/SET_PACKS_TOTAL_COUNT':\n            return {...state, cardPacksTotalCount: action.count}\n        case 'CARDS/SET_PACK_CARDS_ID': {\n            return {...state, packCardsId: action.packId}\n        }\n        default:\n            return state\n    }\n}\n\n// Actions Creators\nexport const setMaxCardsCount = (maxCount: number) => ({type: \"CARDS/SET_MAX_CARD_NUMBER\", maxCount} as const)\nexport const setMinCardsCount = (minCount: number) => ({type: \"CARDS/SET_MIN_CARD_NUMBER\", minCount} as const)\nexport const setIdAC = (_id: string) => ({type: \"CARDS/SET_ID\", _id} as const)\nexport const setPackNameAC = (name: string) => ({type: \"CARDS/SET_NAME\", name} as const)\nexport const setMinAC = (min: number) => ({type: \"CARDS/SET_MIN\", min} as const)\nexport const setMaxAC = (max: number) => ({type: \"CARDS/SET_MAX\", max} as const)\nexport const setPacksAC = (cards: Array<CardPacksDataType>) => ({type: \"CARDS/SET_CARDS\", cards} as const)\nexport const setEntityStatusPacksAC = (entityStatus: EntityStatusType, id: string) =>\n    ({type: \"CARDS/SET_STATUS\", entityStatus, id} as const)\nexport const setActiveModalAC = (active: boolean) =>\n    ({type: \"CARDS/SET_ACTIVE_MODAL\", active} as const)\nexport const setCurrentPageAC = (value: number) => ({type: 'CARDS/SET_CURRENT_PAGE', value} as const)\nexport const setPacksTotalCountAC = (count: number) => ({type: 'CARDS/SET_PACKS_TOTAL_COUNT', count} as const)\nexport const setPackCardsIdAC = (packId: string) => ({type: 'CARDS/SET_PACK_CARDS_ID', packId} as const)\n\n// Thunk Creators\nexport const setPacks = (): AppThunkType =>\n    (dispatch, getState) => {\n        dispatch(changeStatusAC(\"loading\"))\n\n        const state = getState()\n        const currentPage = state.packs.page\n        const packsOnPage = state.packs.pageCount\n        const packName = state.packs.name\n        const minCardsCount = state.packs.minCardsCount\n        const maxCardsCount = state.packs.maxCardsCount\n        const _id = state.packs._id\n\n        packsApi.getPacks(packsOnPage, currentPage, packName, minCardsCount, maxCardsCount, _id)\n            .then(response => {\n                dispatch(setPacksAC(response.data.cardPacks))\n                dispatch(setPacksTotalCountAC(response.data.cardPacksTotalCount))\n                dispatch(changeStatusAC(\"succeeded\"))\n            })\n            .catch((e) => {\n                const error = e.response\n                    ? e.response.data.error\n                    : (e.message + ', more details in the console');\n                dispatch(changeStatusAC(\"failed\"))\n                toast.error(error)\n            })\n            .finally(() => {\n                dispatch(changeStatusAC('succeeded'))\n            })\n    }\n\nexport const createPacks = (title: string): AppThunkType =>\n    (dispatch) => {\n\n        dispatch(changeStatusAC(\"loading\"))\n        packsApi.createPacks(title)\n            .then(() => {\n                dispatch(setPacks())\n                dispatch(changeStatusAC(\"succeeded\"))\n            })\n            .catch((e) => {\n                const error = e.response\n                    ? e.response.data.error\n                    : (e.message + ', more details in the console');\n                dispatch(changeStatusAC(\"failed\"))\n                toast.error(error)\n            })\n    }\n\nexport const deletePacks = (_id: string): AppThunkType =>\n    (dispatch) => {\n\n        dispatch(changeStatusAC(\"loading\"))\n        dispatch(setEntityStatusPacksAC(\"loading\", _id))\n        packsApi.deletePacks(_id)\n            .then(() => {\n                dispatch(setPacks())\n                dispatch(changeStatusAC(\"succeeded\"))\n                dispatch(setEntityStatusPacksAC(\"succeeded\", _id))\n            })\n            .catch((e) => {\n                const error = e.response\n                    ? e.response.data.error\n                    : (e.message + ', more details in the console');\n                dispatch(setEntityStatusPacksAC(\"failed\", _id))\n                dispatch(changeStatusAC(\"failed\"))\n                toast.error(error)\n            })\n    }\n\nexport const updatePacks = (_id: string, name: string): AppThunkType =>\n    (dispatch) => {\n\n        dispatch(changeStatusAC(\"loading\"))\n        dispatch(setEntityStatusPacksAC(\"loading\", _id))\n        packsApi.updatePacks(_id, name)\n            .then(() => {\n                dispatch(setPacks())\n                dispatch(changeStatusAC(\"succeeded\"))\n                dispatch(setEntityStatusPacksAC(\"succeeded\", _id))\n            })\n            .catch((e) => {\n                const error = e.response\n                    ? e.response.data.error\n                    : (e.message + ', more details in the console');\n                dispatch(setEntityStatusPacksAC(\"failed\", _id))\n                dispatch(changeStatusAC(\"failed\"))\n                toast.error(error)\n            })\n    }\n\n// Types\nexport type InitialStateType = ResponseDataType & {\n    activeModal: boolean\n    name: string\n    _id: string\n    packCardsId: string\n}\nexport type EntityStatusType = 'idle' | 'loading' | 'succeeded' | 'failed'\nexport type PacksActionsType =\n    | ReturnType<typeof setIdAC>\n    | ReturnType<typeof setMinAC>\n    | ReturnType<typeof setMaxAC>\n    | ReturnType<typeof setPackNameAC>\n    | ReturnType<typeof setPacksAC>\n    | ReturnType<typeof setEntityStatusPacksAC>\n    | ReturnType<typeof setActiveModalAC>\n    | ReturnType<typeof setCurrentPageAC>\n    | ReturnType<typeof setPacksTotalCountAC>\n    | ReturnType<typeof setPackCardsIdAC>\n    | ReturnType<typeof setMaxCardsCount>\n    | ReturnType<typeof setMinCardsCount>\n\n","import {AppThunkType} from \"../../../../m2-bll/store/redux-store\";\nimport {changeStatusAC} from \"../../../u1-app/app-reducer\";\nimport {CardDataType, cardsApi, CardsResponseDataType, NewCardType, learnApi} from \"../../../../../n3-dall/api/api_cards\";\nimport {toast} from \"react-hot-toast\";\nimport {setPackCardsIdAC} from \"../packs-reducer\";\n\n// Actions\nconst SET_CARDS = 'friday_teamwork_project/cards-reducer/SET_CARDS';\nconst SET_CARDS_TOTAL_COUNT = 'friday_teamwork_project/cards-reducer/SET_CARDS_TOTAL_COUNT';\nconst SET_CURRENT_PAGE = 'friday_teamwork_project/cards-reducer/SET_CURRENT_PAGE';\nconst SET_UPDATE_GRADE_CARD = 'friday_teamwork_project/cards-reducer/SET_UPDATE_GRADE_CARD';\n\n// Types\nexport type InitialStateType = CardsResponseDataType & {\n    activeModal: boolean\n}\nexport type CardsActionsType =\n    | ReturnType<typeof setCardsAC>\n    | ReturnType<typeof setCardsCurrentPageAC>\n    | ReturnType<typeof setCardsTotalCountAC>\n    | ReturnType<typeof setUpdateGradeCardAC>\n\n// Initial State\nconst initialState: InitialStateType = {\n    cards: [],\n    packUserId: '',\n    page: 1,\n    pageCount: 10,\n    cardsTotalCount: 0,\n    minGrade: 0,\n    maxGrade: 6,\n    token: '',\n    tokenDeathTime: 1628534826945,\n    activeModal: false,\n}\n\n// Reducer\nexport const cardsReducer = (state: InitialStateType = initialState, action: CardsActionsType): InitialStateType => {\n    switch (action.type) {\n        case SET_CARDS: {\n            return {\n                ...state,\n                cards: action.cards\n            };\n        }\n        case SET_CURRENT_PAGE: {\n            return {\n                ...state,\n                page: action.value\n            }\n        }\n        case SET_CARDS_TOTAL_COUNT:\n            return {\n                ...state,\n                cardsTotalCount: action.count\n            }\n        case SET_UPDATE_GRADE_CARD: {\n            return {...state,\n                cards: state.cards.map(c => c._id === action.card_id ? {...c, grade: action.grade} : c)}\n        }\n        default:\n            return state;\n    }\n}\n\n// Actions Creators\n\nexport const setCardsAC = (cards: Array<CardDataType>) => ({type: SET_CARDS, cards} as const)\nexport const setCardsTotalCountAC = (count: number) => ({type: SET_CARDS_TOTAL_COUNT, count} as const)\nexport const setCardsCurrentPageAC = (value: number) => ({type: SET_CURRENT_PAGE, value} as const)\nexport const setUpdateGradeCardAC = (grade: number, card_id: string) => ({type: SET_UPDATE_GRADE_CARD, grade, card_id} as const)\n\n// Thunk Creators\nexport const getCards = (cardsPack_id: string): AppThunkType =>\n    (dispatch, getState) => {\n        dispatch(changeStatusAC(\"loading\"))\n\n        const state = getState()\n        const currentPage = state.cards.page\n        const packsOnPage = state.cards.pageCount\n\n        cardsApi.getCards(cardsPack_id, currentPage, packsOnPage)\n            .then(response => {\n                dispatch(setCardsAC(response.data.cards))\n                dispatch(setPackCardsIdAC(cardsPack_id))\n                dispatch(setCardsTotalCountAC(response.data.cardsTotalCount))\n                dispatch(changeStatusAC(\"succeeded\"))\n            })\n            .catch((e) => {\n                const error = e.response\n                    ? e.response.data.error\n                    : (e.message + ', more details in the console');\n                dispatch(changeStatusAC(\"failed\"))\n                toast.error(error, {\n                    duration: 2000\n                })\n            })\n            .finally(() => {\n                dispatch(changeStatusAC('succeeded'))\n            })\n    }\n\nexport const createCard = (cardsPack_id: string, question: string, answer: string): AppThunkType =>\n    (dispatch) => {\n        dispatch(changeStatusAC(\"loading\"))\n        const newCard: NewCardType = {cardsPack_id, question, answer}\n        cardsApi.createCard(newCard)\n            .then(() => {\n                dispatch(getCards(cardsPack_id))\n                dispatch(changeStatusAC(\"succeeded\"))\n            })\n            .catch((e) => {\n                const error = e.response\n                    ? e.response.data.error\n                    : (e.message + ', more details in the console');\n                dispatch(changeStatusAC(\"failed\"))\n                toast.error(error, {\n                    duration: 2000\n                })\n            })\n    }\n\n\nexport const deleteCard = (cardId: string, packID: string): AppThunkType =>\n    (dispatch) => {\n        dispatch(changeStatusAC(\"loading\"))\n        cardsApi.deleteCard(cardId)\n            .then(() => {\n                dispatch(getCards(packID))\n                dispatch(changeStatusAC(\"succeeded\"))\n            })\n            .catch((e) => {\n           const error = e.response\n                    ? e.response.data.error\n                    : (e.message + ', more details in the console');\n                dispatch(changeStatusAC(\"failed\"))\n                toast.error(error)\n            })\n    }\n\nexport const updateGrade = (grade: number, card_id: string): AppThunkType =>\n    (dispatch) => {\n        dispatch(changeStatusAC(\"loading\"))\n        learnApi.learnCard(grade, card_id)\n            .then (res => {\n                dispatch(setUpdateGradeCardAC(res.data.grade, res.data.card_id))\n                dispatch(changeStatusAC(\"succeeded\"))\n            })\n            .catch(e => {\n                const error = e.response\n                    ? e.response.data.error\n                    : (e.message + ', more details in the console');\n                dispatch(changeStatusAC(\"failed\"))\n                toast.error(error, {\n                    duration: 2000\n                })\n            })\n    }\n\nexport const updateCard = (packId: string, cardId: string, question: string, answer: string): AppThunkType => (dispatch) => {\n    dispatch(changeStatusAC(\"loading\"))\n    const updateCard = {_id: cardId, question, answer}\n    cardsApi.updateCard(updateCard)\n        .then(() => {\n            dispatch(getCards(packId))\n        })\n        .catch(err => {\n            const error = err.response\n                ? err.response.data.error\n                : (err.message + ', more details in the console');\n            dispatch(changeStatusAC(\"failed\"))\n            toast.error(error, {\n                duration: 2000\n            });\n        })\n        .finally(() => {\n            dispatch(changeStatusAC('succeeded'))\n        })\n}\n\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\nimport thunk, {ThunkAction} from \"redux-thunk\";\nimport {LoginActionsType, loginReducer} from \"../../../n2-features/f1-auth/a1-login/login-reducer\";\nimport {RegisterActionsType, registerReducer} from \"../../../n2-features/f1-auth/a2-register/register-reducer\";\nimport {recoveryPasswordReducer} from \"../../../n2-features/f1-auth/a3-recoveryPassword/recoveryPassword-reducer\";\nimport {newPasswordReducer} from \"../../../n2-features/f1-auth/a4-new-password/newPassword-reducer\";\nimport {profileReducer} from \"../../../n2-features/f1-auth/a5-profile/profile-reducer\";\nimport {AppActionsType, appReducer} from \"../../m1-ui/u1-app/app-reducer\";\nimport {PacksActionsType, packsReducer} from \"../../m1-ui/u2-components/Packs/packs-reducer\";\nimport {CardsActionsType, cardsReducer} from \"../../m1-ui/u2-components/Packs/Cards/cards-reducer\";\n\nconst rootReducer = combineReducers({\n    app: appReducer,\n    login: loginReducer,\n    register: registerReducer,\n    recoveryPassword: recoveryPasswordReducer,\n    newPassword: newPasswordReducer,\n    profile: profileReducer,\n    packs: packsReducer,\n    cards: cardsReducer,\n})\n\nexport type AppActionType =\n    | RegisterActionsType\n    | LoginActionsType\n    | AppActionsType\n    | CardsActionsType\n    | PacksActionsType;\n\nexport type AppThunkType<ReturnType = void> = ThunkAction<ReturnType,\n    AppRootStateType,\n    unknown,\n    AppActionType>\n\nexport const store = createStore(rootReducer, applyMiddleware(thunk))\n\nexport type AppRootStateType = ReturnType<typeof rootReducer>\n\n// @ts-ignore\nwindow.store = store // for dev","import {recoveryPasswordApi} from \"../../../n3-dall/api/api_cards\";\nimport {Dispatch} from \"redux\";\nimport {changeStatusAC} from \"../../../n1-main/m1-ui/u1-app/app-reducer\";\nimport {toast} from \"react-hot-toast\";\n\nexport const recoveryPasswordReducer = (state: any, action: any): any => {\n    switch (action.type) {\n        default:\n            return {...state}\n    }\n}\n\nexport const passwordRecovery = (email: string, from: string, message: {}) => (dispatch: Dispatch) => {\n    dispatch(changeStatusAC(\"loading\"))\n    recoveryPasswordApi.passwordRecovery(email, from, message)\n        .then(response => {\n            toast.success('Instructions send your mail')\n            dispatch(changeStatusAC(\"succeeded\"))\n        })\n        .catch((e) => {\n            const error = e.response\n                ? e.response.data.error\n                : (e.message + ', more details in the console');\n            dispatch(changeStatusAC(\"failed\"))\n            toast.error(error)\n        })\n}","// Reducer\nexport const profileReducer = (state: any, action: any): any => {\n    switch (action.type) {\n        default:\n            return {...state}\n    }\n}\n\n// Actions\n// Types\n// Initial State\n// Action Creators\n// Thunk Creators","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\nimport s from './SuperInputText.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n}\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        // type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange,\n        className,\n        onKeyPress,\n        onChangeText,\n        onEnter,\n        error,\n        spanClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value);\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        onEnter // если есть пропс onEnter\n        && e.key === 'Enter' // и если нажата кнопка Enter\n        && onEnter() // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\n    const finalInputClassName = `${s.input} ${error ? s.errorInput : ''} ${className}` // need to fix with (?:) and s.superInput\n\n    return (\n        <>\n            <input\n                // type={'text'}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </>\n    )\n}\n\nexport default SuperInputText\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\nimport s from './SuperButton.module.css'\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red,\n        className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${s.button} ${red ? s.red : ''}`\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    )\n}\n\nexport default SuperButton\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\nimport s from './SuperCheckbox.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n}\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange,\n        onChangeChecked,\n        className,\n        spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange && onChange(e);\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)// сделайте так чтоб работал onChange и onChangeChecked\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\n\n    return (\n        <label className={s.label}>\n            {children && <span className={s.spanClassName}>{children}</span>}\n            <input\n                type={'checkbox'}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            \n        </label> // благодаря label нажатие на спан передастся в инпут\n    )\n}\n\nexport default SuperCheckbox\n","import React from 'react'\nimport s from './Preloader.module.css'\n\nexport const Preloader = () => {\n    return <div className={s.loaderWrapper}>\n        <div className={s.loader}/>\n    </div>\n}","import {useFormik} from \"formik\";\nimport {useState} from \"react\";\nimport s from './CommonForm.module.css';\nimport SuperInputText from \"../Super-Components/c1-SuperInputText/SuperInputText\";\nimport SuperButton from \"../Super-Components/c2-SuperButton/SuperButton\";\nimport SuperCheckbox from \"../Super-Components/c3-SuperCheckbox/SuperCheckbox\";\nimport {useSelector} from \"react-redux\";\nimport {AppRootStateType} from \"../../../m2-bll/store/redux-store\";\nimport {StatusType} from \"../../u1-app/app-reducer\";\nimport {Preloader} from \"../Super-Components/c7-Preloader/Preloader\";\nimport {NavLink} from \"react-router-dom\";\nimport {Toaster} from 'react-hot-toast';\n\ntype FormikErrorType = {\n    email?: string\n    password?: string\n    confirmPassword?: string\n}\n\ntype FormPropsType = {\n    type: 'Login' | 'Register' | 'Recovery password' | 'New password'\n    callBack: (values: any) => void\n}\n\nexport const CommonForm = (props: FormPropsType) => {\n\n    const status = useSelector<AppRootStateType, StatusType>(state => state.app.status)\n    const [typeIcon, setTypeIcon] = useState<string>('password')\n\n    const showHide = () => {\n        setTypeIcon(typeIcon === 'text' ? 'password' : 'text')\n    }\n\n    // SET initial values for Formik start\n    let initialValues: any = null\n\n    if (props.type === 'Login') {\n        initialValues = {\n            email: '',\n            password: '',\n            rememberMe: false,\n        }\n    }\n\n    if (props.type === 'Register') {\n        initialValues = {\n            email: '',\n            password: '',\n            confirmPassword: '',\n        }\n    }\n\n    if (props.type === 'Recovery password') {\n        initialValues = {\n            email: '',\n        }\n    }\n\n    if (props.type === 'New password') {\n        initialValues = {\n            email: 'test@gmail.com',\n            password: '',\n            confirmPassword: '',\n        }\n    }\n\n    // SET initial values for Formik end\n    const formik = useFormik({\n\n        initialValues,\n\n        validate: (values) => {\n            const errors: FormikErrorType = {};\n            if (!values.email) {\n                errors.email = 'Email is required';\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n                errors.email = 'Invalid email address';\n            }\n\n            if (props.type === 'Login' || props.type === 'Register' || props.type === 'New password') { // Check PASSWORD field only if form for Login or Register or New password\n                if (!values.password) {\n                    errors.password = 'Password is required';\n                } else if (!/(?=.*[0-9])/gi.test(values.password)) {\n                    errors.password = 'The password must contain at least one number'\n                } else if (!/(?=.*[a-z])(?=.*[A-Z])/gi.test(values.password)) {\n                    errors.password = 'The password  must contain at least one lowercase or uppercase Latin letter'\n                } else if (!/[0-9a-zA-Z!@#$%^&*]{8,}/gi.test(values.password)) {\n                    errors.password = 'The password must have a minimum 8 characters'\n                }\n            }\n\n            if (props.type === 'Register' || props.type === 'New password'\n            ) { // Check CONFIRM PASSWORD field only if form for Register or New password\n                if (!values.confirmPassword) {\n                    errors.confirmPassword = 'Confirm password is required';\n                } else if (values.password !== values.confirmPassword) {\n                    errors.confirmPassword = 'The password and confirm password fields do not match.';\n                }\n            }\n\n            return errors;\n        },\n        onSubmit: values => {\n            props.callBack(values)\n            formik.resetForm();\n        },\n    });\n\n    // Reusable Email Field\n    const emailField = () => {\n        return <>\n            <div className={s.inputFormCommon}>\n                <label htmlFor=\"email\"/>\n                <SuperInputText\n                    id=\"email\"\n                    type=\"email\"\n                    placeholder='e-mail'\n                    {...formik.getFieldProps('email')}\n                />\n                {formik.errors.email && formik.touched.email &&\n                <div className={s.errorMessage}>{formik.errors.email}</div>}\n            </div>\n        </>\n    }\n    // Reusable Password Field\n    const passwordField = () => {\n        return <>\n            <div className={s.inputFormCommon}>\n                <label htmlFor=\"password\"/>\n                <SuperInputText\n                    id=\"password\"\n                    placeholder='password'\n                    type={typeIcon}\n                    {...formik.getFieldProps('password')}\n                />\n                <span className={s.showHideMenu}\n                      onClick={showHide}>{typeIcon === 'text' ? '🔒' : '🔑'}</span>\n                {formik.errors.password && formik.touched.password &&\n                <div className={s.errorMessage}>{formik.errors.password}</div>}\n            </div>\n        </>\n    }\n    // Reusable Confirm Password Field\n    const confirmPasswordField = () => {\n        return <>\n            <div className={s.inputFormCommon}>\n                <label htmlFor=\"confirmPassword\"/>\n                <SuperInputText\n                    type=\"password\"\n                    placeholder='confirm password'\n                    {...formik.getFieldProps('confirmPassword')}\n                />\n                {formik.errors.confirmPassword && formik.touched.confirmPassword &&\n                <div className={s.errorMessage}>{formik.errors.confirmPassword}</div>}\n            </div>\n        </>\n    }\n    // Reusable Checkbox Field\n    const checkBoxField = () => {\n        return <>\n            <div className={s.checkBoxFormCommon}>\n                <label htmlFor=\"rememberMe\"/>\n                <SuperCheckbox\n                    id=\"rememberMe\"\n                    type=\"checkbox\"\n                    children={'Remember me'}\n                    //placeholder='confirm password'\n                    {...formik.getFieldProps('rememberMe')}\n                />\n            </div>\n        </>\n    }\n    // Reusable Button\n    const submitButton = (title: string) => {\n        return <>\n            <div className={s.commonFormButton}>\n                <SuperButton\n                    disabled={status === \"loading\"}\n                    className={s.button}\n                    type=\"submit\">{title}\n                </SuperButton>\n            </div>\n        </>\n    }\n\n    // Form Generator\n    const formGenerator = () => {\n        switch (props.type) {\n            case 'Login' :\n                return <>\n                    {emailField()}\n                    {passwordField()}\n                    {checkBoxField()}\n                    {submitButton('Login')}\n                </>\n            case 'Register' :\n                return <>\n                    {emailField()}\n                    {passwordField()}\n                    {confirmPasswordField()}\n                    {submitButton('Register')}\n                </>\n            case 'Recovery password' :\n                return <>\n                    {emailField()}\n                    {submitButton('Send')}\n                </>\n            case 'New password' :\n                return <>\n                    {passwordField()}\n                    {confirmPasswordField()}\n                    {submitButton('Send')}\n                </>\n            default :\n                return <>\n                    {emailField()}\n                    {passwordField()}\n                    {confirmPasswordField()}\n                    {submitButton('N/A')}\n                </>\n        }\n    }\n\n    const formTitle = (type: string) => {\n        switch (type) {\n            case 'Login':\n                return 'Sign In'\n            case 'Register':\n                return 'Sign Up'\n            case 'Recovery password':\n                return 'Recover Password'\n            case 'New password':\n                return 'New Password'\n            default:\n                return ''\n        }\n    }\n\n    const formDescription = (type: string) => {\n        switch (type) {\n            case 'Register':\n                return 'Please fill in the form below'\n            case 'Recovery password':\n                return 'Please, enter your email';\n            case 'New password':\n                return 'Please, enter and confirm your new password'\n            default:\n                return ''\n        }\n    }\n\n    const loginAdditionalField = (type: string) => {\n        switch (type) {\n            case 'Login':\n                return <div className={s.loginAdditionalField}>\n                    <NavLink to='/recovery'>Forgot your password?</NavLink>\n                    <NavLink to='/register'>Go to sign up</NavLink>\n                </div>\n            default:\n                return null;\n        }\n    }\n\n    return (\n        <>\n            <div><Toaster/></div>\n            {status === \"loading\" && <Preloader/>}\n            <div className={s.commonForm}>\n                <div className={s.wrapper}>\n                    {/* Form Title */}\n                    <span className={s.formTitle}>{formTitle(props.type)}</span>\n                    {/* Form Description */}\n                    <span className={s.formDescription}>{formDescription(props.type)}</span>\n\n                    <form onSubmit={formik.handleSubmit}>\n                        {/* Form generator function */}\n                        {formGenerator()}\n                    </form>\n                    {/* Form additional field*/}\n                    {loginAdditionalField(props.type)}\n                </div>\n            </div>\n        </>\n    )\n}","import {useDispatch, useSelector} from \"react-redux\";\nimport {Redirect} from \"react-router-dom\";\nimport {loginTC} from \"./login-reducer\";\nimport {AppRootStateType} from \"../../../n1-main/m2-bll/store/redux-store\";\nimport {CommonForm} from \"../../../n1-main/m1-ui/u3-common/CommonForm/CommonForm\";\n\nexport const Login = () => {\n\n\n    const dispatch = useDispatch();\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.login.isLoggedIn)\n\n    const callBackHandler = (values: any) => {\n        dispatch(loginTC(values.email, values.password, values.rememberMe))\n    }\n\n    if (isLoggedIn) {\n        return <Redirect to={'/profile'}/>\n    }\n\n\n    return <CommonForm type={'Login'} callBack={callBackHandler}/>\n}","import {useDispatch} from \"react-redux\";\nimport {passwordRecovery} from \"./recoveryPassword-reducer\";\nimport {CommonForm} from \"../../../n1-main/m1-ui/u3-common/CommonForm/CommonForm\";\n\nexport const RecoveryPassword = () => {\n\n    const dispatch = useDispatch()\n\n    const from = \"test-front-admin <ai73a@yandex.by>\"\n    const message =\n        `<div>\n                Please, click on the link and enter a new password\n            <a href='https://hrudkouski.github.io/friday_teamwork_project/#/new-password/$token$'>Go to recovery password</a> \n        </div>`\n\n    const recoveryCallBackHandler = (values: any) => {\n        dispatch(passwordRecovery(values.email, from, message))\n    }\n\n    return (\n        <>\n            <CommonForm type={'Recovery password'} callBack={recoveryCallBackHandler}/>\n        </>\n    )\n}","import {useDispatch, useSelector} from \"react-redux\";\nimport {Redirect, useParams } from \"react-router-dom\";\nimport {AppRootStateType} from \"../../../n1-main/m2-bll/store/redux-store\";\nimport {StatusType} from \"../../../n1-main/m1-ui/u1-app/app-reducer\";\nimport {Preloader} from \"../../../n1-main/m1-ui/u3-common/Super-Components/c7-Preloader/Preloader\";\nimport {CommonForm} from \"../../../n1-main/m1-ui/u3-common/CommonForm/CommonForm\";\nimport {newPassword} from \"./newPassword-reducer\";\n\nexport const NewPassword = () => {\n    const dispatch = useDispatch()\n    const {token} = useParams<{token: string}>()\n    const isPasswordChanged = useSelector<AppRootStateType, boolean>(state => state.newPassword.isPasswordChanged)\n    const status = useSelector<AppRootStateType, StatusType>(state => state.app.status)\n\n    const newPasswordCallBack = (values: any) => {\n        dispatch(newPassword(values.password, token))\n    }\n\n    if(isPasswordChanged) {\n        return <Redirect to={\"/login\"}/>\n    }\n\n    return (\n        <>\n            {status === \"loading\" && <Preloader/>}\n            <CommonForm type={'New password'} callBack={newPasswordCallBack}/>\n        </>\n    )\n}\n","import React, {DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState} from 'react'\nimport SuperInputText from '../c1-SuperInputText/SuperInputText'\nimport s from './SuperSpan.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n// тип пропсов обычного спана\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n\n    spanProps?: DefaultSpanPropsType // пропсы для спана\n}\n\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\n    {\n        autoFocus, // игнорировать изменение этого пропса\n        onBlur,\n        onEnter,\n        spanProps,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const [editMode, setEditMode] = useState<boolean>(false)\n    const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {}\n\n    const onEnterCallback = () => {\n        setEditMode(false)\n        // выключить editMode при нажатии Enter\n        onEnter && onEnter()\n    }\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\n        setEditMode(false) // выключить editMode при нажатии за пределами инпута\n        onBlur && onBlur(e)\n    }\n    const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\n        setEditMode(true) // включить editMode при двойном клике\n        onDoubleClick && onDoubleClick(e)\n    }\n\n    const spanClassName = `${s.superSpan} ${className}`\n\n    return (\n        <>\n            {editMode\n                ? (\n                    <SuperInputText\n                        autoFocus // пропсу с булевым значением не обязательно указывать true\n                        onBlur={onBlurCallback}\n                        onEnter={onEnterCallback}\n\n                        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n                    />\n                ) : (\n                    <span\n                        onDoubleClick={onDoubleClickCallBack}\n                        className={spanClassName}\n\n                        {...restSpanProps}\n                    >\n                        {/*если нет захардкодженного текста для спана, то значение инпута*/}\n                        {children || restProps.value}\n                    </span>\n                )\n            }\n        </>\n    )\n}\n\nexport default SuperEditableSpan\n","import React, {SelectHTMLAttributes, DetailedHTMLProps, ChangeEvent} from 'react'\nimport s from './SuperSelect.module.css'\n\ntype DefaultSelectPropsType = DetailedHTMLProps<SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>\n\ntype SuperSelectPropsType = DefaultSelectPropsType & {\n    options?: string[]\n    onChangeOption?: (option: string) => void\n}\n\nconst SuperSelect: React.FC<SuperSelectPropsType> = (\n    {\n        options,\n        onChange,\n        onChangeOption,\n        ...restProps\n    }\n) => {\n    const mappedOptions: JSX.Element[] = options // map options with key\n        ? options.map((el, i) => {\n            return <option key={`${el}-${i}`} value={el}>{el}</option>\n        })\n        : [];\n\n    const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\n        onChange && onChange(e);\n        onChangeOption && onChangeOption(e.currentTarget.value)\n    }\n\n    return (\n        <div className={s.select}>\n            <select onChange={onChangeCallback} {...restProps}>\n                {mappedOptions}\n            </select>\n        </div>\n    )\n}\n\nexport default SuperSelect\n","import React, {ChangeEvent, InputHTMLAttributes, DetailedHTMLProps} from 'react'\nimport s from './../c3-SuperCheckbox/SuperCheckbox.module.css'\n\ntype DefaultRadioPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperRadioPropsType = DefaultRadioPropsType & {\n    options?: string[]\n    onChangeOption?: (option: string) => void\n}\n\nconst SuperRadio: React.FC<SuperRadioPropsType> = (\n    {\n        type, name,\n        options, value,\n        onChange, onChangeOption,\n        ...restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange && onChange(e);\n        onChangeOption && onChangeOption(e.currentTarget.value)\n    }\n\n\n    const mappedOptions: JSX.Element[] = options ? options.map((el, i) => ( // map options with key\n        <label key={`${name}-${i}`}>\n            <input\n                type={'radio'}\n                name={name}\n                checked={el === value}\n                value={el}\n                onChange={onChangeCallback}\n                className={s.checkbox}\n                {...restProps}\n            />\n            {el}\n        </label>\n    )) : []\n\n    return (\n        <>\n            {mappedOptions}\n        </>\n    )\n}\n\nexport default SuperRadio\n","import {useState} from \"react\";\nimport SuperInputText from \"../../n1-main/m1-ui/u3-common/Super-Components/c1-SuperInputText/SuperInputText\";\nimport SuperButton from \"../../n1-main/m1-ui/u3-common/Super-Components/c2-SuperButton/SuperButton\";\nimport SuperCheckbox from \"../../n1-main/m1-ui/u3-common/Super-Components/c3-SuperCheckbox/SuperCheckbox\";\nimport SuperEditableSpan from \"../../n1-main/m1-ui/u3-common/Super-Components/c4-SuperEditableSpan/SuperEditableSpan\";\nimport SuperSelect from \"../../n1-main/m1-ui/u3-common/Super-Components/c5-SuperSelect/SuperSelect\";\nimport SuperRadio from \"../../n1-main/m1-ui/u3-common/Super-Components/c6-SuperRadio/SuperRadio\";\n\nconst arr = ['Tim', 'Nikolay', 'Nikita']\n\n\nexport const Test = () => {\n    const [value, setValue] = useState<string>('')\n    const [selections, onChangeOption] = useState(arr[1])\n\n    return (\n        <>\n            <SuperInputText/>\n            <SuperCheckbox/>\n            <SuperButton>\n                Click here\n            </SuperButton>\n            <SuperEditableSpan\n                value={value}\n                onChangeText={setValue}\n                spanProps={{children: value ? undefined : 'enter text...'}}\n            />\n            <SuperSelect\n                options={arr}\n                value={selections}\n                onChangeOption={onChangeOption}\n            />\n            <SuperRadio\n                name={'radio'}\n                options={arr}\n                value={selections}\n                onChangeOption={onChangeOption}\n            />\n        </>\n    )\n}","import React from 'react';\nimport {NavLink} from 'react-router-dom';\nimport s from './Error404.module.css'\n\nexport const Error404 = () => {\n    return <div>\n        <div className={s.c}>\n            <div className={s._404}>404</div>\n            <div className={s._1}>THE PAGE</div>\n            <div className={s._2}>WAS NOT FOUND</div>\n            <NavLink className={s.btn} to='/profile'>&#8592;BACK TO PROFILE</NavLink>\n        </div>\n    </div>\n}","import {useSelector} from \"react-redux\";\nimport {AppRootStateType} from \"../../../m2-bll/store/redux-store\";\nimport {ProfileResponseType} from \"../../../../n2-features/f1-auth/a1-login/login-reducer\";\nimport {Redirect} from \"react-router-dom\";\nimport {StatusType} from \"../../u1-app/app-reducer\";\nimport p from './Profile.module.css'\nimport {Preloader} from \"../../u3-common/Super-Components/c7-Preloader/Preloader\";\n\nexport const Profile = () => {\n\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.login.isLoggedIn)\n    const status = useSelector<AppRootStateType, StatusType>(state => state.app.status)\n    const profile = useSelector<AppRootStateType, ProfileResponseType>(state => state.login.profile)\n\n\n    if (!isLoggedIn) {\n        return <Redirect to={'/login'}/>\n    }\n\n    const avatarAddress = profile.avatar ? profile.avatar : 'https://duiko.guru/landing/privlichenie/img/avatar.png'\n\n    return (\n        <>\n            {status === \"loading\" && <Preloader/>}\n            <div className={p.profile}>\n                <div className={p.ava}>\n                    <img src={avatarAddress} alt='avatar' title={'avatar'}/>\n                </div>\n                <div className={p.greeting}>{profile.email}</div>\n                <div className={p.greeting}>Hello, {profile.name}</div>\n                <div className={p.numberOfPacks}>\n                    You have <span className={p.userPacks}>\n                        {profile.publicCardPacksCount}\n                    </span> packs\n                </div>\n            </div>\n        </>\n    )\n}","import {useDispatch, useSelector} from \"react-redux\";\nimport {registerUser} from \"./register-reducer\";\nimport {AppRootStateType} from \"../../../n1-main/m2-bll/store/redux-store\";\nimport {CommonForm} from \"../../../n1-main/m1-ui/u3-common/CommonForm/CommonForm\";\nimport {Redirect} from \"react-router-dom\";\n\nexport const Register = () => {\n\n    const isRegister = useSelector<AppRootStateType, boolean>(state => state.register.isRegister)\n    const dispatch = useDispatch();\n\n    const registerCallBackHandler = (values: any) => {\n        dispatch(registerUser(values.email, values.password))\n    }\n\n    if (isRegister) {\n        return <Redirect to={'/login'}/>\n    }\n\n    return <CommonForm type={'Register'} callBack={registerCallBackHandler}/>\n}\n","import {ChangeEvent, MouseEvent, useState} from \"react\";\nimport s from \"../ModalWindow.module.css\";\nimport {useDispatch} from \"react-redux\";\nimport SuperInputText from \"../../Super-Components/c1-SuperInputText/SuperInputText\";\nimport SuperButton from \"../../Super-Components/c2-SuperButton/SuperButton\";\nimport {updatePacks} from \"../../../u2-components/Packs/packs-reducer\";\n\ntype UpdatePacksType = {\n    activeModalUpdate: boolean\n    setActive: (active: boolean) => void\n    id: string\n    name: string\n}\n\nexport const UpdatePacksModalWindow = (props: UpdatePacksType) => {\n\n    const [title, setTitle] = useState(props.name)\n\n    const dispatch = useDispatch();\n\n    const updatePackHandler = () => {\n        dispatch(updatePacks(props.id, title))\n        if (title !== '') {\n            setTitle('')\n        }\n        props.setActive(false)\n    }\n\n    const updateTitleHandler = (e: ChangeEvent<HTMLInputElement>) => {\n        setTitle(e.currentTarget.value)\n    }\n\n    const activeModalHandler = () => props.setActive(false)\n    const stopActiveModal = (e: MouseEvent<HTMLDivElement>) => e.stopPropagation()\n\n    return (\n        <div className={s.modalContainer} onClick={activeModalHandler}>\n            <div className={s.modalContent} onClick={stopActiveModal}>\n                <div className={s.title}>Please, update name of pack</div>\n                <SuperInputText type=\"text\"\n                                value={title}\n                                onChange={updateTitleHandler}\n                                autoFocus/>\n                <SuperButton type={\"submit\"} onClick={updatePackHandler}>OK</SuperButton>\n            </div>\n        </div>\n    )\n}","import {MouseEvent,} from \"react\";\nimport s from \"../ModalWindow.module.css\";\nimport {useDispatch} from \"react-redux\";\nimport SuperButton from \"../../Super-Components/c2-SuperButton/SuperButton\";\nimport {deletePacks} from \"../../../u2-components/Packs/packs-reducer\";\n\ntype CreatePacksType = {\n    activeModalDelete: boolean\n    setActive: (active: boolean) => void\n    packID: string\n}\n\nexport const DeletePackModalWindow = (props: CreatePacksType) => {\n\n    const dispatch = useDispatch();\n\n    const deletePackHandler = () => {\n        dispatch(deletePacks(props.packID))\n        props.setActive(false)\n    }\n\n    const resetPackHandler = () => props.setActive(false)\n    const activeModalHandler = () => props.setActive(false)\n    const stopActiveModal = (e: MouseEvent<HTMLDivElement>) => e.stopPropagation()\n\n    return (\n        <div className={s.modalContainer} onClick={activeModalHandler}>\n            <div className={s.modalContent} onClick={stopActiveModal}>\n                <div className={s.title}>Are you sure to delete this pack?</div>\n                <div className={s.allButton}>\n                    <SuperButton\n                        type={\"submit\"}\n                        onClick={deletePackHandler}>\n                        YES</SuperButton>\n                    <SuperButton\n                        red\n                        type={\"submit\"}\n                        onClick={resetPackHandler}>\n                        NO</SuperButton>\n                </div>\n\n            </div>\n        </div>\n    )\n}","import {CardPacksDataType} from \"../../../../../n3-dall/api/api_cards\";\nimport React, {useState} from \"react\";\nimport {UpdatePacksModalWindow} from \"../../../u3-common/ModalWindow/UpdatePack/UpdatePacksModalWindow\";\nimport {NavLink} from \"react-router-dom\";\nimport p from './Pack.module.css';\nimport {PATH} from \"../../../u4-routes/Routes\";\nimport {useSelector} from \"react-redux\";\nimport {AppRootStateType} from \"../../../../m2-bll/store/redux-store\";\nimport {DeletePackModalWindow} from \"../../../u3-common/ModalWindow/DeletePack/DeletePackModalWindow\";\n\ntype PackPropsType = {\n    pack: CardPacksDataType\n}\n\nexport const Pack = (props: PackPropsType) => {\n\n    const userLoginID = useSelector<AppRootStateType, string>(state => state.login.profile._id)\n\n    const [activeModal, setActiveModal] = useState(false)\n    const [activeDeletePackModal, setActiveDeletePackModal] = useState(false)\n\n    let date = new Date(props.pack.created);\n\n    let formatter = new Intl.DateTimeFormat(\"ru\", {\n        hour: \"numeric\",\n        minute: \"numeric\",\n        second: \"numeric\"\n    });\n\n    const time = formatter.format(date);\n\n    const openUpdateModalWindow = () => setActiveModal(true)\n\n    const openDeleteModalWindow = () => setActiveDeletePackModal(true)\n\n\n    return (\n        <>\n            <td>{props.pack.user_name}</td>\n            <td>{props.pack.name}</td>\n            <td>{props.pack.cardsCount}</td>\n            <td>{time}</td>\n            <td>\n                <NavLink\n                    className={p.link}\n                    to={PATH.CARDS + `/${props.pack._id}`}>\n                    👓\n                </NavLink>\n            </td>\n            <td>\n                <NavLink\n                    className={p.link}\n                    to={PATH.LEARN + `/${props.pack._id}`}>\n\n                        🎓\n                </NavLink>\n            </td>\n            <td>\n\n                {\n                    userLoginID !== props.pack.user_id\n                        ? null\n                        : <>\n                            <button\n                                className={p.Button}\n                                onClick={openUpdateModalWindow}\n                                disabled={props.pack.entityStatus === \"loading\"}\n                            >⚙️\n                            </button>\n\n                            <button\n                                className={p.Button}\n                                onClick={openDeleteModalWindow}\n                                disabled={props.pack.entityStatus === \"loading\"}\n                            >🧨\n                            </button>\n                        </>\n                }\n\n            </td>\n\n            {activeModal && <UpdatePacksModalWindow\n                activeModalUpdate={activeModal}\n                name={props.pack.name}\n                id={props.pack._id}\n                setActive={setActiveModal}/>}\n\n            {activeDeletePackModal && <DeletePackModalWindow\n                activeModalDelete={activeDeletePackModal}\n                packID={props.pack._id}\n                setActive={setActiveDeletePackModal}/>}\n        </>\n    )\n}","import {ChangeEvent, MouseEvent, useState} from \"react\";\nimport s from \"../ModalWindow.module.css\";\nimport {useDispatch} from \"react-redux\";\nimport SuperInputText from \"../../Super-Components/c1-SuperInputText/SuperInputText\";\nimport SuperButton from \"../../Super-Components/c2-SuperButton/SuperButton\";\nimport {createPacks} from \"../../../u2-components/Packs/packs-reducer\";\n\ntype CreatePacksType = {\n    activeModalAdd: boolean\n    setActive: (active: boolean) => void\n}\n\nexport const CreatePackModalWindow = (props: CreatePacksType) => {\n\n    const [title, setTitle] = useState('')\n\n    const dispatch = useDispatch();\n\n    const createCardsHandler = () => {\n        dispatch(createPacks(title))\n        if (title !== '') {\n            setTitle('')\n        }\n        props.setActive(false)\n    }\n\n    const changeTitleHandler = (e: ChangeEvent<HTMLInputElement>) => {\n        setTitle(e.currentTarget.value)\n    }\n\n    const activeModalHandler = () => props.setActive(false)\n    const stopActiveModal = (e: MouseEvent<HTMLDivElement>) => e.stopPropagation()\n\n    return (\n        <div className={s.modalContainer} onClick={activeModalHandler}>\n            <div className={s.modalContent} onClick={stopActiveModal}>\n                <div className={s.title}>Please, enter the name of the pack</div>\n                <SuperInputText type=\"text\"\n                                value={title}\n                                onChange={changeTitleHandler}\n                                autoFocus/>\n                <SuperButton type={\"submit\"} onClick={createCardsHandler}>OK</SuperButton>\n            </div>\n        </div>\n    )\n}","import React from 'react'\nimport ReactPaginate from 'react-paginate'\nimport p from './Pagination.module.css'\n\ntype PaginationComponentPropsType = {\n    totalPages: number;\n    handlePageChange: (selectedItem: { selected: number }) => void;\n}\n\nexport const PaginationComponent: React.FC<PaginationComponentPropsType> = (\n    {\n        totalPages,\n        handlePageChange,\n    }\n) => {\n    return (\n        <div className={p.paginationBox}>\n            <ReactPaginate pageCount={totalPages}\n                           marginPagesDisplayed={3}\n                           pageRangeDisplayed={5}\n                           previousLabel={'Previous'}\n                           nextLabel={'Next'}\n                           containerClassName={p.pagination}\n                           activeClassName={p.active}\n                           onPageChange={handlePageChange}\n                           pageLinkClassName={p.pageLinkClassName}\n                           pageClassName={p.pageClassName}\n                           nextClassName={p.nextClassName}\n                           previousClassName={p.previousClassName}\n                           breakClassName={p.breakClassName}\n                           previousLinkClassName={p.previousLinkClassName}\n                           nextLinkClassName={p.nextLinkClassName}\n                           breakLinkClassName={p.breakLinkClassName}\n                           disabledClassName={p.disabledClassName}\n            />\n        </div>\n    );\n};","import { useState } from 'react'\nimport { useDispatch } from 'react-redux';\nimport { setMinCardsCount, setMaxCardsCount } from '../../../u2-components/Packs/packs-reducer';\nimport s from './Slider.module.css' \n\n\nexport const Slider = () =>{\n\n    const MAX_CARDS_NUMBER = 24;\n    const dispatch = useDispatch();\n\n    const [leftSliderValue, setLeftSliderValue] = useState(0)\n    const [rightSliderValue, setRightSliderValue] = useState(MAX_CARDS_NUMBER)\n\n    window.onload = function() {\n        slideOne();\n        slideTwo();\n    }\n    \n    let sliderOne = document.getElementById('slider-1');\n    let sliderTwo = document.getElementById('slider-2');\n    let displayValOne = document.getElementById(\"range1\");\n    let displayValTwo = document.getElementById(\"range2\");\n    let minGap = 0;\n    let sliderTrack = document.getElementById(\"sliderTrack\")\n    \n    const sliderMaxValue = MAX_CARDS_NUMBER\n    let percent1 = 0\n    let percent2 = 0\n\n    const slideOne = () => {\n        //@ts-ignore\n        if(parseInt(sliderTwo.value) - parseInt(sliderOne.value) <= minGap ){\n            //@ts-ignore\n            sliderOne.value = parseInt(sliderTwo.value) - minGap\n        }\n        //@ts-ignore\n        displayValOne.textContent = sliderOne.value;\n        //@ts-ignore\n        setLeftSliderValue(sliderOne.value)\n        //@ts-ignore\n        dispatch(setMinCardsCount(sliderOne.value))\n        fillColor();\n    }\n    const slideTwo = () => {\n        //@ts-ignore\n        if(parseInt(sliderTwo.value) - parseInt(sliderOne.value) <= minGap ){\n            //@ts-ignore\n            sliderTwo.value = parseInt(sliderOne.value) + minGap\n        }\n        //@ts-ignore\n        displayValTwo.textContent = sliderTwo.value;\n        //@ts-ignore\n        setRightSliderValue(sliderTwo.value)\n        //@ts-ignore\n        dispatch(setMaxCardsCount(sliderTwo.value))\n        fillColor();\n    }\n\n    const fillColor = () => {\n        //@ts-ignore\n        percent1 = (sliderOne.value/ sliderMaxValue) * 100;\n        //@ts-ignore\n        percent2 = (sliderTwo.value/ sliderMaxValue) * 100;\n\n        //@ts-ignore\n        sliderTrack.style.background = `linear-gradient(to right, #90aede ${percent1}% ,#ffc300 ${percent1}%, #ffc300 ${percent2}%, #90aede ${percent2}%)`;        \n    }\n\n    return <>\n\n\n        <div className={s.wrapper}>\n\n            <div className={s.values}>\n\n                <span id=\"range1\">\n                    0\n                </span>\n                <span> - </span>\n                <span id=\"range2\">\n                    {sliderMaxValue}\n                </span>\n            </div>\n\n            <div className={s.container}>\n                <div className={s.sliderTrack} id=\"sliderTrack\"></div>\n                <input type=\"range\" min=\"0\" max={sliderMaxValue} value={leftSliderValue} id=\"slider-1\" onInput={() => slideOne()}/>\n                <input type=\"range\" min=\"0\" max={sliderMaxValue} value={rightSliderValue} id=\"slider-2\" onInput={() => slideTwo()}/>\n                </div>\n\n        </div>\n\n    </>\n}\n","import s from \"./Packs.module.css\"\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AppRootStateType} from \"../../../m2-bll/store/redux-store\";\nimport {CardPacksDataType} from \"../../../../n3-dall/api/api_cards\";\nimport {useEffect, useState} from \"react\";\nimport SuperButton from \"../../u3-common/Super-Components/c2-SuperButton/SuperButton\";\nimport {setCurrentPageAC, setIdAC, setPackNameAC, setPacks} from \"./packs-reducer\";\nimport {StatusType} from \"../../u1-app/app-reducer\";\nimport {Preloader} from \"../../u3-common/Super-Components/c7-Preloader/Preloader\";\nimport {Pack} from \"./Pack/Pack\";\nimport {Toaster} from \"react-hot-toast\";\nimport {CreatePackModalWindow} from \"../../u3-common/ModalWindow/CreatePacks/CreatePackModalWindow\";\nimport {PaginationComponent} from \"../../u3-common/Pagination/Pagination\";\nimport SuperInputText from \"../../u3-common/Super-Components/c1-SuperInputText/SuperInputText\";\nimport {Slider} from \"../../u3-common/Super-Components/c8-SuperSlider/Slider\";\n\nexport const Packs = () => {\n\n    const dispatch = useDispatch();\n    const packs = useSelector<AppRootStateType, Array<CardPacksDataType>>(state => state.packs.cardPacks)\n    const status = useSelector<AppRootStateType, StatusType>(state => state.app.status)\n    const page = useSelector<AppRootStateType, number>(state => state.packs.page)\n    const packsPerPage = useSelector<AppRootStateType, number>(state => state.packs.pageCount)\n    const name = useSelector<AppRootStateType, string>(state => state.packs.name)\n    const cardPacksTotalCount = useSelector<AppRootStateType, number>(state => state.packs.cardPacksTotalCount)\n    const userLoginID = useSelector<AppRootStateType, string>(state => state.login.profile._id)\n    const totalPages = Math.ceil(cardPacksTotalCount / packsPerPage)\n\n    const [activeModalAdd, setActiveModalAdd] = useState(false)\n    const [searchValue, setSearchValue] = useState(name)\n    const [isMyPack, setIsMyPack] = useState(false)\n\n    useEffect(() => {\n        dispatch(setPacks())\n    }, [dispatch, page])\n\n    const openModalWindow = () => {\n        setActiveModalAdd(true)\n    }\n\n    const allPacks = () => {\n        setIsMyPack(false)\n        dispatch(setIdAC(''))\n        dispatch(setPacks())\n    }\n\n    const myPacks = () => {\n        setIsMyPack(true)\n        dispatch(setIdAC(userLoginID))\n        dispatch(setPacks())\n    }\n\n    const inputValueSet = (value: string) => {\n        setSearchValue(value)\n    }\n\n    const search = () => {\n        dispatch(setPackNameAC(searchValue))\n        dispatch(setPacks())\n        setSearchValue('')\n        //send search request to the server \n    }\n\n    const copyPacks = packs.map(c => {\n        return (\n            <tr key={c._id}>\n                <Pack pack={c}/>\n            </tr>\n        )\n    })\n\n    const handlePageChange = (e: { selected: number }) => {\n        const selectedPage = e.selected + 1;\n        dispatch(setCurrentPageAC(selectedPage))\n    };\n\n    return (\n        <div className={s.packsContainer}>\n            <div><Toaster/></div>\n            {status === \"loading\" && <Preloader/>}\n            {activeModalAdd &&\n            <CreatePackModalWindow\n                activeModalAdd={activeModalAdd} setActive={setActiveModalAdd}/>}\n\n            <div className={s.navContainer}>\n                <SuperButton\n                    onClick={openModalWindow}\n                    disabled={status === \"loading\"}>\n                    ADD PACK\n                </SuperButton>\n\n                <div className={s.allMyPacks}>\n                    <SuperButton\n                        onClick={allPacks}\n                        disabled={status === \"loading\" || !isMyPack}>\n                        All PACKS\n                    </SuperButton>\n                    <SuperButton\n                        onClick={myPacks}\n                        disabled={status === \"loading\" || isMyPack}>\n                        MY PACKS\n                    </SuperButton>\n                </div>\n\n                <div className={s.searchContainer}>\n                    <SuperInputText onChangeText={inputValueSet}\n                                    onEnter={search}\n                                    placeholder='search packs'\n                                    className={s.searchInput}\n                                    value={searchValue}\n                    />\n                    <button\n                        onClick={search}\n                        className={s.searchButton}\n                        disabled={status === \"loading\"}>\n                        🔍\n                    </button>\n                </div>\n                <Slider/>\n            </div>\n\n            <table>\n                <thead className={s.packsHeader}>\n                <tr>\n                    <th>username</th>\n                    <th>name</th>\n                    <th>count</th>\n                    <th>time</th>\n                    <th>cards</th>\n                    <th>learn</th>\n                    <th>actions</th>\n                </tr>\n                </thead>\n                <tbody>\n                {copyPacks}\n                </tbody>\n            </table>\n\n            {\n                cardPacksTotalCount < 11\n                    ? null\n                    : <PaginationComponent\n                        handlePageChange={handlePageChange}\n                        totalPages={totalPages}/>\n            }\n        </div>\n    )\n}","import {ChangeEvent, KeyboardEvent, MouseEvent, useState} from \"react\";\nimport s from \"../ModalWindow.module.css\";\nimport {useDispatch} from \"react-redux\";\nimport SuperInputText from \"../../Super-Components/c1-SuperInputText/SuperInputText\";\nimport SuperButton from \"../../Super-Components/c2-SuperButton/SuperButton\";\nimport {useSelector} from \"react-redux\";\nimport {AppRootStateType} from \"../../../../m2-bll/store/redux-store\";\nimport {createCard} from \"../../../u2-components/Packs/Cards/cards-reducer\";\n\ntype CreatePacksType = {\n    activeModalAdd: boolean\n    setActive: (active: boolean) => void\n}\n\nexport const CreateCardModalWindow = (props: CreatePacksType) => {\n\n    const [question, setQuestion] = useState('')\n    const [answer, setAnswer] = useState('')\n    const cardsPackID = useSelector<AppRootStateType, string>(state => state.packs.packCardsId)\n\n    const dispatch = useDispatch();\n\n    const createCardsHandler = () => {\n        dispatch(createCard(cardsPackID, question, answer))\n        props.setActive(false)\n    }\n\n    const onPressEnterAddCard = (e: KeyboardEvent<HTMLInputElement>) => {\n        if (e.key === 'Enter') createCardsHandler();\n    }\n\n    const changeTitleQuestionHandler = (e: ChangeEvent<HTMLInputElement>) => {\n        setQuestion(e.currentTarget.value)\n    }\n\n    const changeTitleAnswerHandler = (e: ChangeEvent<HTMLInputElement>) => {\n        setAnswer(e.currentTarget.value)\n    }\n\n    const activeModalHandler = () => props.setActive(false)\n    const stopActiveModal = (e: MouseEvent<HTMLDivElement>) => e.stopPropagation()\n\n    return (\n        <div className={s.modalContainer} onClick={activeModalHandler}>\n            <div className={s.modalContent} onClick={stopActiveModal}>\n                <div className={s.title}>Please, enter the question and the answer of the card</div>\n                <SuperInputText type=\"text\"\n                                placeholder='question'\n                                required\n                                value={question}\n                                onChange={changeTitleQuestionHandler}\n                                onKeyPress={onPressEnterAddCard}\n                                autoFocus/>\n                <SuperInputText type=\"text\"\n                                required\n                                placeholder='answer'\n                                value={answer}\n                                onChange={changeTitleAnswerHandler}\n                                onKeyPress={onPressEnterAddCard}\n                                autoFocus/>\n                <SuperButton\n                    type={\"submit\"}\n                    onClick={createCardsHandler}>\n                    OK </SuperButton>\n            </div>\n        </div>\n    )\n}","import {MouseEvent,} from \"react\";\nimport s from \"../ModalWindow.module.css\";\nimport {useDispatch} from \"react-redux\";\nimport SuperButton from \"../../Super-Components/c2-SuperButton/SuperButton\";\nimport {deleteCard} from \"../../../u2-components/Packs/Cards/cards-reducer\";\n\ntype CreatePacksType = {\n    activeModalDelete: boolean\n    setActive: (active: boolean) => void\n    cardID: string\n    packID: string\n}\n\nexport const DeleteCardModalWindow = (props: CreatePacksType) => {\n\n    const dispatch = useDispatch();\n\n    const deleteCardHandler = () => {\n        dispatch(deleteCard(props.cardID, props.packID))\n        props.setActive(false)\n    }\n\n    const resetCardsHandler = () => props.setActive(false)\n    const activeModalHandler = () => props.setActive(false)\n    const stopActiveModal = (e: MouseEvent<HTMLDivElement>) => e.stopPropagation()\n\n    return (\n        <div className={s.modalContainer} onClick={activeModalHandler}>\n            <div className={s.modalContent} onClick={stopActiveModal}>\n                <div className={s.title}>Are you sure to delete this card?</div>\n                <div className={s.allButton}>\n                    <SuperButton\n                        type={\"submit\"}\n                        onClick={deleteCardHandler}>\n                        YES</SuperButton>\n                    <SuperButton\n                        type={\"submit\"}\n                        onClick={resetCardsHandler}>\n                        NO</SuperButton>\n                </div>\n            </div>\n        </div>\n    )\n}","import {ChangeEvent, MouseEvent, useState} from \"react\";\nimport s from \"../ModalWindow.module.css\";\nimport {useDispatch} from \"react-redux\";\nimport SuperInputText from \"../../Super-Components/c1-SuperInputText/SuperInputText\";\nimport SuperButton from \"../../Super-Components/c2-SuperButton/SuperButton\";\nimport {updateCard} from \"../../../u2-components/Packs/Cards/cards-reducer\";\n\ntype UpdatePacksType = {\n    activeModalUpdate: boolean\n    setActive: (active: boolean) => void\n    cardID: string\n    packID: string\n    answer: string\n    question: string\n}\n\nexport const UpdateCardModalWindow = (props: UpdatePacksType) => {\n\n    const [answer, setAnswer] = useState(props.answer)\n    const [question, setQuestion] = useState(props.question)\n\n    const dispatch = useDispatch();\n\n    const updateCardHandler = () => {\n        dispatch(updateCard(props.packID, props.cardID, question, answer))\n        if (question !== '') {\n            setQuestion('')\n        }\n        props.setActive(false)\n    }\n\n    const updateQuestionHandler = (e: ChangeEvent<HTMLInputElement>) => {\n        setQuestion(e.currentTarget.value)\n    }\n\n    const updateAnswerHandler = (e: ChangeEvent<HTMLInputElement>) => {\n        setAnswer(e.currentTarget.value)\n    }\n\n    const activeModalHandler = () => props.setActive(false)\n    const stopActiveModal = (e: MouseEvent<HTMLDivElement>) => e.stopPropagation()\n\n    return (\n        <div className={s.modalContainer} onClick={activeModalHandler}>\n            <div className={s.modalContent} onClick={stopActiveModal}>\n                <div className={s.title}>Please, update this card</div>\n                <SuperInputText type=\"text\"\n                                value={question}\n                                placeholder={'question'}\n                                onChange={updateQuestionHandler}\n                                autoFocus/>\n                <SuperInputText type=\"text\"\n                                value={answer}\n                                placeholder={'answer'}\n                                onChange={updateAnswerHandler}\n                                autoFocus/>\n                <SuperButton\n                    type={\"submit\"}\n                    onClick={updateCardHandler}>\n                    OK\n                </SuperButton>\n            </div>\n        </div>\n    )\n}","import c from './../Cards.module.css';\nimport {useSelector} from \"react-redux\";\nimport React, {useState} from \"react\";\nimport {CardDataType} from '../../../../../../n3-dall/api/api_cards';\nimport {AppRootStateType} from '../../../../../m2-bll/store/redux-store';\nimport {DeleteCardModalWindow} from \"../../../../u3-common/ModalWindow/DeleteCard/DeleteCardModalWindow\";\nimport {UpdateCardModalWindow} from \"../../../../u3-common/ModalWindow/UpdateCard/UpdateCardModalWindow\";\nimport {StatusType} from \"../../../../u1-app/app-reducer\";\n\ntype CardPropsType = {\n    card: CardDataType\n    packID: string\n}\n\nexport const Card: React.FC<CardPropsType> = (\n    {\n        card,\n        packID\n    }) => {\n\n    const [activeDeleteCardModal, setActiveDeleteCardModal] = useState(false)\n    const [activeUpdateCardModal, setActiveUpdateCardModal] = useState(false)\n    const userLoginID = useSelector<AppRootStateType, string>(state => state.login.profile._id)\n    const status = useSelector<AppRootStateType, StatusType>(state => state.app.status)\n\n    const update = new Date(card.updated).toLocaleDateString(['ban', 'id'])\n\n    const openDeleteCardModalWindow = () => setActiveDeleteCardModal(true)\n    const openUpdateCardModalWindow = () => setActiveUpdateCardModal(true)\n\n    return (\n        <>\n            {activeDeleteCardModal &&\n            <DeleteCardModalWindow\n                activeModalDelete={activeDeleteCardModal}\n                cardID={card._id}\n                packID={packID}\n                setActive={setActiveDeleteCardModal}\n            />}\n\n            {activeUpdateCardModal &&\n            <UpdateCardModalWindow\n                activeModalUpdate={activeUpdateCardModal}\n                setActive={setActiveUpdateCardModal}\n                cardID={card._id}\n                packID={packID}\n                answer={card.answer}\n                question={card.question}\n            />}\n\n            <tr>\n                <td>{card.question}</td>\n                <td>{card.answer}</td>\n                <td>{update}</td>\n                <td>{card.grade.toFixed(0)}</td>\n                <td>\n                    {userLoginID !== card.user_id\n                        ? null\n                        : <>\n                            <button\n                                className={c.link}\n                                disabled={status === \"loading\"}\n                                onClick={openDeleteCardModalWindow}>\n                                🧺\n                            </button>\n                            <button\n                                className={c.link}\n                                disabled={status === \"loading\"}\n                                onClick={openUpdateCardModalWindow}>\n                                🔄\n                            </button>\n                        </>\n                    }\n                </td>\n            </tr>\n        </>\n    )\n}","import c from './Cards.module.css';\nimport SuperButton from \"../../../u3-common/Super-Components/c2-SuperButton/SuperButton\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AppRootStateType} from \"../../../../m2-bll/store/redux-store\";\nimport {StatusType} from \"../../../u1-app/app-reducer\";\nimport {useEffect, useState} from \"react\";\nimport {Toaster} from \"react-hot-toast\";\nimport {Preloader} from \"../../../u3-common/Super-Components/c7-Preloader/Preloader\";\nimport {NavLink, useParams} from \"react-router-dom\";\nimport {getCards, setCardsCurrentPageAC} from './cards-reducer';\nimport {CardDataType} from '../../../../../n3-dall/api/api_cards';\nimport {CreateCardModalWindow} from \"../../../u3-common/ModalWindow/CreateCard/CreateCardModalWindow\";\nimport {Card} from \"./Card/Card\";\nimport {PaginationComponent} from \"../../../u3-common/Pagination/Pagination\";\n\nexport const Cards = () => {\n\n    const dispatch = useDispatch()\n    const [activeModalAdd, setActiveModalAdd] = useState(false)\n    const status = useSelector<AppRootStateType, StatusType>(state => state.app.status)\n    const cards = useSelector<AppRootStateType, Array<CardDataType>>(state => state.cards.cards)\n    const userCardID = useSelector<AppRootStateType, string>(state => state.cards.cards[0]?.user_id)\n    const userLoginID = useSelector<AppRootStateType, string>(state => state.login.profile._id)\n    const cardsTotalCount = useSelector<AppRootStateType, number>(state => state.cards.cardsTotalCount)\n    const packsPerPage = useSelector<AppRootStateType, number>(state => state.cards.pageCount)\n    const totalPages = Math.ceil(cardsTotalCount / packsPerPage)\n    const page = useSelector<AppRootStateType, number>(state => state.cards.page)\n    const {id} = useParams<{ id: string }>()\n\n    useEffect(() => {\n        dispatch(getCards(id))\n    }, [dispatch, id, page])\n\n    const openModalWindow = () => setActiveModalAdd(true)\n\n    const copyCards = cards.map(el => <tbody key={el._id}>\n    <Card card={el} packID={id}/>\n    </tbody>)\n\n    const handlePageChange = (e: { selected: number }) => {\n        const selectedPage = e.selected + 1;\n        dispatch(setCardsCurrentPageAC(selectedPage))\n    };\n\n    return (\n        <div className={c.cards}>\n            <div><Toaster/></div>\n            {status === \"loading\" && <Preloader/>}\n\n            {activeModalAdd && <CreateCardModalWindow\n                activeModalAdd={activeModalAdd}\n                setActive={setActiveModalAdd}\n            />}\n\n            <div className={c.backLink}>\n                <NavLink\n                    className={c.link}\n                    to={'/packList'}>\n                    🔙Go to Packs\n                </NavLink>\n            </div>\n\n            <h2>Cards</h2>\n\n            {\n                userCardID !== userLoginID\n                    ? null\n                    : <SuperButton\n                        className={c.addCardButton}\n                        onClick={openModalWindow}\n                        disabled={status === \"loading\"}>\n                        Add Card\n                    </SuperButton>\n            }\n\n            {\n                !cards.length\n                    ? <div className={c.titleNoCards}>\n                        <span className={c.monkey}>🐒</span>\n                        <span>Oops...</span>\n                        <span>There are no cards in this pack...</span>\n                    </div>\n                    : <table>\n                        <thead>\n                        <tr>\n                            <th>QUESTION</th>\n                            <th>ANSWER</th>\n                            <th>LAST UPDATE</th>\n                            <th>GRADE</th>\n                            <th>ACTIONS</th>\n                        </tr>\n                        </thead>\n                        {copyCards}\n                    </table>\n            }\n\n            {\n                cardsTotalCount < 11\n                    ? null\n                    : <PaginationComponent\n                        handlePageChange={handlePageChange}\n                        totalPages={totalPages}/>\n            }\n        </div>\n    )\n}","import React, {useEffect, useState} from \"react\";\nimport {NavLink, useParams} from \"react-router-dom\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AppRootStateType} from \"../../../m2-bll/store/redux-store\";\nimport {CardDataType} from \"../../../../n3-dall/api/api_cards\";\nimport {getCards, updateGrade} from \"../Packs/Cards/cards-reducer\";\nimport SuperButton from \"../../u3-common/Super-Components/c2-SuperButton/SuperButton\";\nimport s from \"./Learn.module.css\";\nimport c from \"../Packs/Cards/Cards.module.css\";\nimport {StatusType} from \"../../u1-app/app-reducer\";\nimport {Preloader} from \"../../u3-common/Super-Components/c7-Preloader/Preloader\";\nimport {Toaster} from \"react-hot-toast\";\n\nexport const Learn = () => {\n\n    const {id} = useParams<{ id: string }>()\n\n    const dispatch = useDispatch()\n\n    const cards = useSelector<AppRootStateType, Array<CardDataType>>(state => state.cards.cards)\n    const status = useSelector<AppRootStateType, StatusType>(state => state.app.status)\n    const grades = ['не знал', 'забыл', 'долго думал', 'перепутал', 'знал'];\n\n    const [currentQuestion, setQuestion] = useState(0)\n    const [answer, setAnswer] = useState(false)\n    const [stop, setStop] = useState(false)\n    const [grade, setGrade] = useState(0)\n\n    useEffect(() => {\n        dispatch(getCards(id))\n    }, [dispatch, id])\n\n    const nextQuestion = () => {\n        if (cards.length != currentQuestion + 1) {\n            setQuestion(currentQuestion + 1)\n        } else {\n            setStop(true)\n        }\n        dispatch(updateGrade(grade, cards[currentQuestion]._id))\n        setAnswer(false)\n        setGrade(0)\n    }\n\n    const setAnswerHandler = () => {\n        setAnswer(true)\n    }\n\n    const rollbackHandler = () => {\n        setQuestion(0)\n        setStop(false)\n    }\n\n\n    return (\n        <>\n            <div><Toaster/></div>\n            {status === \"loading\" && <Preloader/>}\n            <div className={c.backLink}>\n                <NavLink\n                    className={c.link}\n                    to={'/packList'}>\n                    🔙Go to Packs\n                </NavLink>\n            </div>\n            {\n                cards.length === 0\n                    ? <div className={c.titleNoCards}>\n                        <span className={c.monkey}>🐒</span>\n                        <span>Oops...</span>\n                        <span>There are no cards in this pack...</span>\n                    </div>\n                    : <div className={s.learnContainer}>\n                        {stop\n                            ? <div className={s.infoBlock}>\n                                <div>The questions are over</div>\n                                <SuperButton onClick={rollbackHandler}>Start over</SuperButton>\n                            </div>\n                            : <>\n                                <div className={s.question}>\n                                    {cards[currentQuestion]?.question}\n                                </div>\n\n                                <SuperButton onClick={setAnswerHandler} disabled={answer}>CHECK</SuperButton>\n\n                                {answer && (\n                                    <div className={s.block}>\n                                        <div>{cards[currentQuestion]?.answer}</div>\n                                        <div className={s.butContainer}>\n                                            {grades.map((el, i) => {\n                                                const settingGrades = () => {\n                                                    setGrade(i + 1)\n                                                }\n                                                return (\n                                                    <SuperButton key={i + 1}\n                                                                 onClick={settingGrades}\n                                                                 disabled={i + 1 === grade}\n                                                                 className={s.but}>\n                                                        {el}\n                                                    </SuperButton>\n                                                )\n                                            })}\n                                        </div>\n                                        <SuperButton onClick={nextQuestion}>NEXT</SuperButton>\n                                    </div>\n                                )}\n                            </>\n                        }\n                    </div>\n            }\n        </>\n\n    )\n}\n\n","import {Redirect, Route, Switch} from \"react-router-dom\";\nimport {Login} from \"../../../n2-features/f1-auth/a1-login/Login\";\nimport {RecoveryPassword} from \"../../../n2-features/f1-auth/a3-recoveryPassword/RecoveryPassword\";\nimport {NewPassword} from \"../../../n2-features/f1-auth/a4-new-password/NewPassword\";\nimport {Test} from \"../../../n2-features/f0-test/Test\";\nimport {Error404} from \"../../../n2-features/f3-error/Error404\";\nimport {Profile} from \"../u2-components/Profile/Profile\";\nimport {Register} from \"../../../n2-features/f1-auth/a2-register/Register\";\nimport {Packs} from \"../u2-components/Packs/Packs\";\nimport {Cards} from \"../u2-components/Packs/Cards/Cards\";\nimport {Learn} from \"../u2-components/Learn/Learn\";\n\nexport const PATH = {\n    LOGIN: '/login',\n    REGISTRATION: '/register',\n    PROFILE: '/profile',\n    RECOVERY_PASSWORD: '/recovery',\n    NEW_PASSWORD: '/new-password',\n    PACKS_LIST: '/packList',\n    CARDS: '/cards',\n    LEARN: '/learn',\n    TEST: '/test',\n    ERROR_404: '/404',\n    UNKNOWN_PAGE: '*',\n}\n\nexport const Routes = () => {\n    return (\n        <div>\n            <Switch>\n                <Route exact path={'/'} render={() => <Redirect to={PATH.LOGIN}/>}/>\n                <Route path={PATH.LOGIN} render={() => <Login/>}/>\n                <Route path={PATH.REGISTRATION} render={() => <Register/>}/>\n                <Route path={PATH.PROFILE} render={() => <Profile/>}/>\n                <Route path={PATH.RECOVERY_PASSWORD} render={() => <RecoveryPassword/>}/>\n                <Route path={`${PATH.NEW_PASSWORD}/:token`} render={() => <NewPassword/>}/>\n                <Route path={PATH.PACKS_LIST} render={() => <Packs/>}/>\n                <Route path={PATH.CARDS + `/:id`} render={() => <Cards/>}/>\n                <Route path={PATH.LEARN + `/:id`} render={() => <Learn/>}/>\n                <Route path={PATH.TEST} render={() => <Test/>}/>\n                <Route path={PATH.ERROR_404} render={() => <Error404/>}/>\n                <Redirect from={PATH.UNKNOWN_PAGE} to={PATH.ERROR_404}/>\n            </Switch>\n        </div>\n    )\n}","import React from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {NavLink} from \"react-router-dom\";\nimport {logOutTC} from \"../../../../n2-features/f1-auth/a1-login/login-reducer\";\nimport {AppRootStateType} from \"../../../m2-bll/store/redux-store\";\nimport {StatusType} from \"../../u1-app/app-reducer\";\nimport SuperButton from \"../../u3-common/Super-Components/c2-SuperButton/SuperButton\";\nimport h from './Header.module.css'\n\nexport const Header = () => {\n\n    const dispatch = useDispatch();\n    const isloggedIn = useSelector<AppRootStateType, boolean>(state => state.login.isLoggedIn)\n    const status = useSelector<AppRootStateType, StatusType>(state => state.app.status)\n\n    const logOutHandler = () => {\n        dispatch(logOutTC())\n    }\n\n    return (\n        <div className={h.header}>\n            <div>\n                <NavLink\n                    className={h.link}\n                    activeClassName={h.activeLink}\n                    to={'/register'}>Sign up\n                </NavLink>\n\n                <NavLink\n                    className={!isloggedIn ? h.link : h.linkDisabled}\n                    activeClassName={h.activeLink}\n                    to={'/login'}>Sign in\n                </NavLink>\n\n                <NavLink\n                    className={isloggedIn ? h.link : h.linkDisabled}\n                    activeClassName={h.activeLink}\n                    to={'/profile'}>Profile\n                </NavLink>\n\n                <NavLink\n                    className={isloggedIn ? h.link : h.linkDisabled}\n                    activeClassName={h.activeLink}\n                    to={'/packList'}>Packs List\n                </NavLink>\n            </div>\n\n            {/* Sign Out Button Shows only while Signed In */}\n            <div>\n                {isloggedIn &&\n                <NavLink to={'/login'}>\n                    <SuperButton\n                        red\n                        disabled={status === \"loading\"}\n                        onClick={logOutHandler}>SIGN OUT\n                    </SuperButton>\n                </NavLink>\n                }\n            </div>\n        </div>\n    )\n}","import { Routes } from \"../../u4-routes/Routes\";\nimport {Header} from \"../Header/Header\";\nimport m from './Main.module.css'\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {useEffect} from \"react\";\nimport { isInitializedTC } from \"../../u1-app/app-reducer\";\nimport { AppRootStateType } from \"../../../m2-bll/store/redux-store\";\nimport { Preloader } from \"../../u3-common/Super-Components/c7-Preloader/Preloader\";\n\n\nexport const Main = () => {\n\n    const isInitialized = useSelector<AppRootStateType, boolean>(state => state.app.isInitialized)\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n         dispatch(isInitializedTC())\n    }, [dispatch])\n\n    if(!isInitialized){\n        return <Preloader />\n    }\n\n    return (\n        <div className={m.main}>\n            <div className={m.container}>\n                <Header/>\n                <Routes/>\n            </div>\n        </div>\n    )\n}","import React from 'react';\nimport {Provider} from 'react-redux';\nimport {HashRouter} from 'react-router-dom';\nimport {store} from '../../m2-bll/store/redux-store';\nimport {Main} from '../u2-components/Main/Main';\nimport a from './App.module.css'\n\nconst App = () => {\n    return (\n        <div className={a.app}>\n            <HashRouter>\n                <Provider store={store}>\n                    <Main/>\n                </Provider>\n            </HashRouter>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './n1-main/m1-ui/u1-app/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}