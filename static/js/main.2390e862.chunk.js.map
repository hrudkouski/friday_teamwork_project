{"version":3,"sources":["n1-main/m1-ui/u3-common/Pagination/Pagination.module.css","n1-main/m1-ui/u2-components/Header/Header.module.css","n1-main/m1-ui/u3-common/ModalWindow/ModalWindow.module.css","n1-main/m1-ui/u3-common/Super-Components/c3-SuperCheckbox/SuperCheckbox.module.css","n2-features/f3-error/Error404.module.css","n1-main/m1-ui/u2-components/Profile/Profile.module.css","n1-main/m1-ui/u3-common/Super-Components/c1-SuperInputText/SuperInputText.module.css","n1-main/m1-ui/u3-common/Super-Components/c2-SuperButton/SuperButton.module.css","n1-main/m1-ui/u3-common/Super-Components/c7-Preloader/Preloader.module.css","n1-main/m1-ui/u2-components/Packs/Packs.module.css","n1-main/m1-ui/u2-components/Main/Main.module.css","n1-main/m1-ui/u3-common/Super-Components/c4-SuperEditableSpan/SuperSpan.module.css","n1-main/m1-ui/u3-common/Super-Components/c5-SuperSelect/SuperSelect.module.css","n1-main/m1-ui/u1-app/App.module.css","n3-dall/api/api_cards.ts","n1-main/m1-ui/u1-app/app-reducer.ts","n2-features/f1-auth/a1-login/login-reducer.ts","n2-features/f1-auth/a2-register/register-reducer.ts","n2-features/f1-auth/a4-new-password/newPassword-reducer.ts","n1-main/m1-ui/u2-components/Packs/packs-reducer.ts","n1-main/m2-bll/store/redux-store.ts","n2-features/f1-auth/a3-recoveryPassword/recoveryPassword-reducer.ts","n2-features/f1-auth/a5-profile/profile-reducer.ts","n1-main/m1-ui/u3-common/Super-Components/c1-SuperInputText/SuperInputText.tsx","n1-main/m1-ui/u3-common/Super-Components/c2-SuperButton/SuperButton.tsx","n1-main/m1-ui/u3-common/Super-Components/c3-SuperCheckbox/SuperCheckbox.tsx","n1-main/m1-ui/u3-common/Super-Components/c7-Preloader/Preloader.tsx","n1-main/m1-ui/u3-common/CommonForm/CommonForm.tsx","n2-features/f1-auth/a1-login/Login.tsx","n2-features/f1-auth/a3-recoveryPassword/RecoveryPassword.tsx","n2-features/f1-auth/a4-new-password/NewPassword.tsx","n1-main/m1-ui/u3-common/Super-Components/c4-SuperEditableSpan/SuperEditableSpan.tsx","n1-main/m1-ui/u3-common/Super-Components/c5-SuperSelect/SuperSelect.tsx","n1-main/m1-ui/u3-common/Super-Components/c6-SuperRadio/SuperRadio.tsx","n2-features/f0-test/Test.tsx","n2-features/f3-error/Error404.tsx","n1-main/m1-ui/u2-components/Profile/Profile.tsx","n2-features/f1-auth/a2-register/Register.tsx","n1-main/m1-ui/u3-common/ModalWindow/UpdatePacks/UpdatePacksModalWindow.tsx","n1-main/m1-ui/u2-components/Packs/Pack/Pack.tsx","n1-main/m1-ui/u3-common/ModalWindow/CreatePacks/CreatePackModalWindow.tsx","n1-main/m1-ui/u3-common/Pagination/Pagination.tsx","n1-main/m1-ui/u2-components/Packs/Packs.tsx","n1-main/m1-ui/u4-routes/Routes.tsx","n1-main/m1-ui/u2-components/Header/Header.tsx","n1-main/m1-ui/u2-components/Main/Main.tsx","n1-main/m1-ui/u1-app/App.tsx","reportWebVitals.ts","index.tsx","n1-main/m1-ui/u3-common/CommonForm/CommonForm.module.css"],"names":["module","exports","instance","axios","create","baseURL","withCredentials","recoveryPasswordApi","email","from","message","post","password","resetPasswordToken","loginApi","rememberMe","delete","registerApi","packsApi","pageCount","page","get","title","cardsPack","name","id","_id","put","SET_ERROR","CHANGE_STATUS","SET_IS_INITIALIZED","initialState","error","status","isInitialized","changeStatusAC","type","setIsInitializedAC","SET_IS_LOGGED_IN","SET_IS_LOGGED_OUT","profile","created","isAdmin","publicCardPacksCount","token","tokenDeathTime","updated","verified","__v","isLoggedIn","logInAC","logOutTC","dispatch","then","toast","success","catch","err","finally","SET_REGISTER_DATA","isRegister","registerUser","res","data","addedUser","length","e","response","isPasswordChanged","cardPacks","cardPacksTotalCount","maxCardsCount","minCardsCount","activeModal","setEntityStatusPacksAC","entityStatus","setPacks","getState","state","currentPage","packs","packsOnPage","cards","count","rootReducer","combineReducers","app","action","login","register","recoveryPassword","newPassword","value","map","c","active","store","createStore","applyMiddleware","thunk","window","SuperInputText","onChange","className","onKeyPress","onChangeText","onEnter","spanClassName","restProps","finalSpanClassName","s","finalInputClassName","input","errorInput","currentTarget","key","SuperButton","red","finalClassName","button","SuperCheckbox","onChangeChecked","children","checkbox","label","checked","Preloader","loaderWrapper","loader","CommonForm","props","useSelector","useState","typeIcon","setTypeIcon","showHide","initialValues","confirmPassword","formik","useFormik","validate","values","errors","test","onSubmit","callBack","resetForm","emailField","inputFormCommon","htmlFor","placeholder","getFieldProps","touched","errorMessage","passwordField","showHideMenu","onClick","confirmPasswordField","submitButton","commonFormButton","disabled","commonForm","wrapper","formTitle","formDescription","handleSubmit","checkBoxFormCommon","formGenerator","loginAdditionalField","to","Login","useDispatch","RecoveryPassword","passwordRecovery","NewPassword","useParams","SuperEditableSpan","autoFocus","onBlur","spanProps","editMode","setEditMode","onDoubleClick","restSpanProps","superSpan","SuperSelect","options","onChangeOption","mappedOptions","el","i","select","SuperRadio","onChangeCallback","arr","Test","setValue","selections","undefined","Error404","_404","_1","_2","btn","Profile","p","greeting","numberOfPacks","Register","UpdatePacksModalWindow","setTitle","modalContainer","setActive","modalContent","stopPropagation","Pack","setActiveModal","time","pack","slice","user_name","cardsCount","deletePacks","activeModalUpdate","CreatePackModalWindow","createPacks","PaginationComponent","totalPages","handlePageChange","paginationBox","marginPagesDisplayed","pageRangeDisplayed","previousLabel","nextLabel","containerClassName","pagination","activeClassName","onPageChange","pageLinkClassName","pageClassName","nextClassName","previousClassName","breakClassName","previousLinkClassName","nextLinkClassName","breakLinkClassName","disabledClassName","Packs","activeModalAdd","setActiveModalAdd","packsPerPage","Math","ceil","useEffect","deletePack","copyPacks","packsContainer","packsHeader","selectedPage","selected","PATH","Routes","exact","path","render","Header","islogedIn","h","header","link","activeLink","linkDisabled","Main","console","log","m","main","container","App","a","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2390e862.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginationBox\":\"Pagination_paginationBox__2awzo\",\"pagination\":\"Pagination_pagination__1r3k6\",\"pageClassName\":\"Pagination_pageClassName__3JQvJ\",\"pageLinkClassName\":\"Pagination_pageLinkClassName__Iq4Rj\",\"active\":\"Pagination_active__1VoH6\",\"nextClassName\":\"Pagination_nextClassName__3f9dI\",\"previousClassName\":\"Pagination_previousClassName__36AeO\",\"previousLinkClassName\":\"Pagination_previousLinkClassName__3s8j5\",\"nextLinkClassName\":\"Pagination_nextLinkClassName__2MfqG\",\"breakClassName\":\"Pagination_breakClassName__2YUFN\",\"breakLinkClassName\":\"Pagination_breakLinkClassName__2P1mc\",\"disabledClassName\":\"Pagination_disabledClassName__21mJh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1Z0mx\",\"link\":\"Header_link__1nRIe\",\"linkDisabled\":\"Header_linkDisabled__oOeWf\",\"activeLink\":\"Header_activeLink__1O_o4\",\"wrapper\":\"Header_wrapper__304qh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalContainer\":\"ModalWindow_modalContainer__3OVX8\",\"modalContent\":\"ModalWindow_modalContent__2dJYC\",\"title\":\"ModalWindow_title__Rzqq5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__vsNfW\",\"label\":\"SuperCheckbox_label__2t-si\",\"spanClassName\":\"SuperCheckbox_spanClassName__1E77_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"c\":\"Error404_c__29qMy\",\"_404\":\"Error404__404__276o5\",\"_1\":\"Error404__1__2vTjh\",\"_2\":\"Error404__2__1dkY2\",\"text\":\"Error404_text__312p9\",\"btn\":\"Error404_btn__2349u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__3XOIc\",\"title\":\"Profile_title__1SjXm\",\"greeting\":\"Profile_greeting__2bVk2\",\"numberOfPacks\":\"Profile_numberOfPacks__3wBv0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"SuperInputText_input__2Ri_z\",\"errorInput\":\"SuperInputText_errorInput__3By_1\",\"error\":\"SuperInputText_error__3MskL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"SuperButton_button__3JMxg\",\"glowing\":\"SuperButton_glowing__DUsdW\",\"red\":\"SuperButton_red__28cmk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loaderWrapper\":\"Preloader_loaderWrapper__2OAER\",\"loader\":\"Preloader_loader__1lSYw\",\"spin\":\"Preloader_spin__ivsiv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"packsContainer\":\"Packs_packsContainer__25bYR\",\"packsHeader\":\"Packs_packsHeader__2YoQc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Main_main__1z_2_\",\"container\":\"Main_container__2I624\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superSpan\":\"SuperSpan_superSpan__VBb2o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"SuperSelect_select__2u_EY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__2Nttw\"};","import axios from \"axios\";\r\nimport {EntityStatusType} from \"../../n1-main/m1-ui/u2-components/Packs/packs-reducer\";\r\nimport { ProfileResponseType } from \"../../n2-features/f1-auth/a1-login/login-reducer\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0/',\r\n    withCredentials: true,\r\n})\r\n\r\n// Api\r\nexport const recoveryPasswordApi = {\r\n    passwordRecovery(email: string, from: string, message: {}) {\r\n        return instance.post(`auth/forgot`, {\r\n            email, from, message\r\n        })\r\n    },\r\n    newPassword(password: string, resetPasswordToken: {}) {\r\n        return instance.post(`auth/set-new-password`, {\r\n            password, resetPasswordToken\r\n        })\r\n    }\r\n}\r\n\r\nexport const loginApi = {\r\n    authMe() {\r\n        return instance.post<ProfileResponseType>('auth/me')\r\n    },\r\n    login(email: string, password: string, rememberMe: boolean) {\r\n        return instance.post<ProfileResponseType>(`auth/login`, { email, password, rememberMe })\r\n    },\r\n    logOut() {\r\n        return instance.delete('auth/me')\r\n    }\r\n}\r\n\r\nexport const registerApi = {\r\n    registerUser(email: string, password: string) {\r\n        return instance.post('auth/register', {\r\n            email, password\r\n        })\r\n    },\r\n}\r\n\r\nexport const packsApi = {\r\n    getPacks(pageCount: number = 7, page: number = 1) {\r\n        return instance.get<ResponseDataType>(`/cards/pack/?&pageCount=${pageCount}&page=${page}`)\r\n    },\r\n    createPacks(title: string) {\r\n        return instance.post(`/cards/pack`, {\r\n            cardsPack: {\r\n                name: title\r\n            }\r\n        })\r\n    },\r\n    deletePacks(id: string) {\r\n        return instance.delete<CardPacksDataType>(`/cards/pack?id=${id}`)\r\n    },\r\n    updatePacks(_id: string, name: string) {\r\n        return instance.put(`/cards/pack`, {\r\n            cardsPack: {\r\n                _id,\r\n                name\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\n// Types\r\nexport type CardPacksDataType = {\r\n    _id: string\r\n    user_id: string\r\n    user_name: string\r\n    name: string\r\n    cardsCount: number\r\n    created: string\r\n    updated: Date\r\n    entityStatus: EntityStatusType\r\n}\r\n\r\nexport type ResponseDataType = {\r\n    cardPacks: Array<CardPacksDataType>\r\n    cardPacksTotalCount: number\r\n    maxCardsCount: number\r\n    minCardsCount: number\r\n    page: number\r\n    pageCount: number\r\n}\r\n\r\n","import { logInAC } from \"../../../n2-features/f1-auth/a1-login/login-reducer\";\r\nimport { loginApi } from \"../../../n3-dall/api/api_cards\";\r\nimport { AppThunkType } from \"../../m2-bll/store/redux-store\";\r\n\r\n// Actions\r\nconst SET_ERROR = 'friday_teamwork_project/app-reducer/SET_ERROR';\r\nconst CHANGE_STATUS = 'friday_teamwork_project/app-reducer/CHANGE_STATUS';\r\nconst SET_IS_INITIALIZED = 'friday_teamwork_project/login-reducer/SET_IS_AM_AUTH';\r\n\r\n// Types\r\nexport type ErrorType = null | string;\r\nexport type SetAppErrorAT = ReturnType<typeof setAppError>;\r\nexport type ChangeStatusAT = ReturnType<typeof changeStatusAC>;\r\nexport type SetIsInitializedAT = ReturnType<typeof setIsInitializedAC>\r\nexport type AppActionsType = SetAppErrorAT | ChangeStatusAT | SetIsInitializedAT;\r\nexport type InitialStateType = typeof initialState;\r\nexport type StatusType = 'idle' | 'loading' | 'succeeded' | 'failed'\r\n\r\n//Initial State\r\nconst initialState = {\r\n    error: null as ErrorType,\r\n    status: 'idle' as StatusType,\r\n    isInitialized: false\r\n}\r\n\r\n// Reducer\r\nexport const appReducer = (state: InitialStateType = initialState, action: AppActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case SET_ERROR:\r\n            return {...state, error: action.error}\r\n        case CHANGE_STATUS:\r\n            return {...state, status: action.status}\r\n        case SET_IS_INITIALIZED:\r\n            return {...state, isInitialized: action.isInitialized}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// Action Creators\r\nexport const setAppError = (error: ErrorType) => ({type: SET_ERROR, error}) as const;\r\nexport const changeStatusAC = (status: StatusType) =>\r\n    ({type: CHANGE_STATUS, status} as const)\r\nexport const setIsInitializedAC = (isInitialized: boolean) => ({type: SET_IS_INITIALIZED, isInitialized} as const)\r\n\r\n// Thunk\r\nexport const isInitializedTC = (): AppThunkType =>\r\n    (dispatch) => {\r\n    dispatch(changeStatusAC(\"loading\"))\r\n    loginApi.authMe()\r\n        .then((res) => {\r\n            console.log(res)\r\n                dispatch(setIsInitializedAC(true))\r\n                dispatch(logInAC(res.data, true))\r\n                dispatch(changeStatusAC(\"succeeded\"))\r\n        })\r\n        .catch((err) => {\r\n            console.log(err.message)\r\n            dispatch(changeStatusAC(\"succeeded\"))\r\n            //dispatch(setIsInitializedAC(false))\r\n        })\r\n        .finally(() => {\r\n            dispatch(setIsInitializedAC(true))\r\n        })\r\n}","import {loginApi} from \"../../../n3-dall/api/api_cards\";\r\nimport {AppThunkType} from \"../../../n1-main/m2-bll/store/redux-store\";\r\nimport {changeStatusAC, setIsInitializedAC} from \"../../../n1-main/m1-ui/u1-app/app-reducer\";\r\nimport {toast} from \"react-hot-toast\";\r\n\r\n// Actions\r\nconst SET_IS_LOGGED_IN = 'friday_teamwork_project/login-reducer/SET_IS_LOGGED_IN';\r\nconst SET_IS_LOGGED_OUT = 'friday_teamwork_project/login-reducer/SET_IS_LOGGED_OUT';\r\n\r\n// Types\r\nexport type LoginActionsType =\r\n    | ReturnType<typeof logInAC>\r\n    | ReturnType<typeof logOutAC>\r\n\r\nexport type ProfileResponseType = {\r\n    created: string\r\n    email: string\r\n    isAdmin: boolean\r\n    name: string\r\n    publicCardPacksCount: number\r\n    rememberMe: boolean\r\n    token: string\r\n    tokenDeathTime: number\r\n    updated: string\r\n    verified: boolean\r\n    __v: number\r\n    _id: string\r\n}\r\ntype InitialStateType = typeof initialState;\r\n\r\n// Initial State\r\nconst initialState = {\r\n    profile: {\r\n        created: '',\r\n        email: '',\r\n        isAdmin: false,\r\n        name: '',\r\n        publicCardPacksCount: 0,\r\n        rememberMe: false,\r\n        token: '',\r\n        tokenDeathTime: 0,\r\n        updated: '',\r\n        verified: false,\r\n        __v: 0,\r\n        _id: ''\r\n    } || null,\r\n    isLoggedIn: false,\r\n}\r\n\r\n// Reducer\r\nexport const loginReducer = (state: InitialStateType = initialState, action: LoginActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case SET_IS_LOGGED_IN: {\r\n            return {\r\n                ...state,\r\n                profile: action.profile,\r\n                isLoggedIn: action.isLoggedIn\r\n            }\r\n        }\r\n        case SET_IS_LOGGED_OUT: {\r\n            return {\r\n                ...state,\r\n                isLoggedIn: action.isLoggedIn\r\n            }\r\n        }\r\n        default:\r\n            return {...state}\r\n    }\r\n}\r\n\r\n// Actions Creators\r\nexport const logInAC = (profile: ProfileResponseType, isLoggedIn: boolean) => ({\r\n    type: SET_IS_LOGGED_IN, profile, isLoggedIn\r\n} as const)\r\nexport const logOutAC = (isLoggedIn: boolean) => ({\r\n    type: SET_IS_LOGGED_OUT, isLoggedIn\r\n} as const)\r\n\r\n// Thunk Creators\r\nexport const loginTC = (email: string, password: string, rememberMe: boolean): AppThunkType => (dispatch) => {\r\n    dispatch(changeStatusAC(\"loading\"))\r\n    loginApi.login(email, password, rememberMe)\r\n        .then((res) => {\r\n            toast.success('Login successful')\r\n            dispatch(changeStatusAC(\"succeeded\"))\r\n            dispatch(logInAC(res.data, true))\r\n        })\r\n        .catch((err) => {\r\n            dispatch(changeStatusAC(\"failed\"))\r\n            toast.error(err.message)\r\n        })\r\n}\r\n\r\nexport const logOutTC = (): AppThunkType => (dispatch) => {\r\n    dispatch(changeStatusAC(\"loading\"))\r\n    loginApi.logOut()\r\n        .then(() => {\r\n            toast.success(\"logOut success —ฅᐠ.̫ .ᐟฅ—\")\r\n            dispatch(changeStatusAC(\"succeeded\"))\r\n            dispatch(logOutAC(false))\r\n            dispatch(setIsInitializedAC(false))\r\n        })\r\n        .catch((err) => {\r\n            toast.error(err.message)\r\n            dispatch(changeStatusAC(\"failed\"))\r\n        })\r\n        .finally(() => {\r\n            dispatch(setIsInitializedAC(true))\r\n            dispatch(changeStatusAC(\"succeeded\"))\r\n        })\r\n}","import {registerApi} from \"../../../n3-dall/api/api_cards\";\r\nimport {AppThunkType} from \"../../../n1-main/m2-bll/store/redux-store\";\r\nimport {changeStatusAC} from \"../../../n1-main/m1-ui/u1-app/app-reducer\";\r\nimport {toast} from \"react-hot-toast\";\r\n\r\n// Actions\r\nconst SET_REGISTER_DATA = 'friday_teamwork_project/register-reducer/SET_REGISTER_DATA';\r\n\r\n// Types\r\ntype InitialStateType = typeof initialState;\r\nexport type RegisterActionsType = ReturnType<typeof setRegisterDataAC>\r\n\r\n// Initial State\r\nconst initialState = {\r\n    isRegister: false\r\n}\r\n\r\n// Reducer\r\nexport const registerReducer = (state = initialState, action: RegisterActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case SET_REGISTER_DATA:\r\n            return {\r\n                ...state,\r\n                isRegister: action.isRegister\r\n            }\r\n        default:\r\n            return {...state}\r\n    }\r\n}\r\n\r\n// Action Creators\r\nexport const setRegisterDataAC = (isRegister: boolean) => ({\r\n    type: SET_REGISTER_DATA, isRegister\r\n} as const)\r\n\r\n// Thunk Creators\r\nexport const registerUser = (email: string, password: string): AppThunkType => {\r\n    return (dispatch) => {\r\n        dispatch(changeStatusAC(\"loading\"))\r\n        registerApi.registerUser(email, password)\r\n            .then((res) => {\r\n                if (res.data.addedUser._id.length > 0) {\r\n                    toast.success('Registration is done')\r\n                    dispatch(changeStatusAC(\"succeeded\"))\r\n                    dispatch(setRegisterDataAC(true))\r\n                }\r\n            })\r\n            .catch((e) => {\r\n                dispatch(changeStatusAC(\"failed\"))\r\n                const error = e.response\r\n                    ? e.response.data.error\r\n                    : (e.message + ', more details in the console');\r\n                toast.error(error)\r\n            })\r\n    }\r\n}","import {Dispatch} from \"redux\";\r\nimport {recoveryPasswordApi} from \"../../../n3-dall/api/api_cards\";\r\nimport {changeStatusAC} from \"../../../n1-main/m1-ui/u1-app/app-reducer\";\r\nimport {toast} from \"react-hot-toast\";\r\n\r\nconst initialState: InitialStateType = {\r\n    isPasswordChanged: false\r\n}\r\n\r\nexport const newPasswordReducer = (state: InitialStateType = initialState, action: ActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"NEW-PASSWORD/PASSWORD-CHANGED\":\r\n            return {...state, isPasswordChanged: action.value}\r\n        default:\r\n            return {...state}\r\n    }\r\n}\r\n\r\nconst passwordChanged = (value: boolean) => ({type: \"NEW-PASSWORD/PASSWORD-CHANGED\", value})\r\n\r\nexport const newPassword = (password: string, resetPasswordToken: {}) => (dispatch: Dispatch) => {\r\n    dispatch(changeStatusAC(\"loading\"))\r\n    recoveryPasswordApi.newPassword(password, resetPasswordToken)\r\n        .then(response => {\r\n            dispatch(passwordChanged(true))\r\n            dispatch(changeStatusAC(\"succeeded\"))\r\n            toast.success('Password is changed!')\r\n        })\r\n        .catch((e) => {\r\n            const error = e.response\r\n                ? e.response.data.error\r\n                : (e.message + ', more details in the console');\r\n            dispatch(changeStatusAC(\"failed\"))\r\n            toast.error(error)\r\n        })\r\n}\r\n\r\ntype InitialStateType = {\r\n    isPasswordChanged: boolean\r\n}\r\n\r\ntype ActionType = ReturnType<typeof passwordChanged>","import {CardPacksDataType, packsApi, ResponseDataType} from \"../../../../n3-dall/api/api_cards\";\r\nimport {AppThunkType} from \"../../../m2-bll/store/redux-store\";\r\nimport {changeStatusAC} from \"../../u1-app/app-reducer\";\r\nimport {toast} from \"react-hot-toast\";\r\n\r\n// Initial State\r\nconst initialState: InitialStateType = {\r\n    cardPacks: [],\r\n    cardPacksTotalCount: 0,\r\n    maxCardsCount: 24,\r\n    minCardsCount: 0,\r\n    page: 1,\r\n    pageCount: 7,\r\n    activeModal: false\r\n}\r\n\r\nexport const packsReducer = (state: InitialStateType = initialState, action: PacksActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"CARDS/SET_CARDS\":\r\n            return {...state, cardPacks: action.cards}\r\n        case \"CARDS/SET_STATUS\":\r\n            return {\r\n                ...state, cardPacks: state.cardPacks.map(c => c._id === action.id\r\n                    ? {...c, entityStatus: action.entityStatus} : c)\r\n            }\r\n        case \"CARDS/SET_ACTIVE_MODAL\":\r\n            return {...state, activeModal: action.active}\r\n        case 'CARDS/SET_CURRENT_PAGE': {\r\n            return {\r\n                ...state,\r\n                page: action.value\r\n            }\r\n        }\r\n        case 'CARDS/SET_PACKS_TOTAL_COUNT':\r\n            return {\r\n                ...state,\r\n                cardPacksTotalCount: action.count\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// Actions Creators\r\nexport const setPacksAC = (cards: Array<CardPacksDataType>) => ({type: \"CARDS/SET_CARDS\", cards} as const)\r\nexport const setEntityStatusPacksAC = (entityStatus: EntityStatusType, id: string) =>\r\n    ({type: \"CARDS/SET_STATUS\", entityStatus, id} as const)\r\nexport const setActiveModalAC = (active: boolean) =>\r\n    ({type: \"CARDS/SET_ACTIVE_MODAL\", active} as const)\r\nexport const setCurrentPageAC = (value: number) => ({type: 'CARDS/SET_CURRENT_PAGE', value} as const)\r\nexport const setPacksTotalCountAC = (count: number) => ({type: 'CARDS/SET_PACKS_TOTAL_COUNT', count} as const)\r\n\r\n// Thunk Creators\r\nexport const setPacks = (): AppThunkType =>\r\n    (dispatch, getState) => {\r\n        dispatch(changeStatusAC(\"loading\"))\r\n\r\n        const state = getState()\r\n        const currentPage = state.packs.page\r\n        const packsOnPage = state.packs.pageCount\r\n\r\n        packsApi.getPacks(packsOnPage, currentPage)\r\n            .then(response => {\r\n                dispatch(setPacksAC(response.data.cardPacks))\r\n                dispatch(setPacksTotalCountAC(response.data.cardPacksTotalCount))\r\n                dispatch(changeStatusAC(\"succeeded\"))\r\n            })\r\n            .catch((e) => {\r\n                const error = e.response\r\n                    ? e.response.data.error\r\n                    : (e.message + ', more details in the console');\r\n                dispatch(changeStatusAC(\"failed\"))\r\n                toast.error(error)\r\n            })\r\n            .finally(() => {\r\n                dispatch(changeStatusAC('succeeded'))\r\n            })\r\n    }\r\n\r\nexport const createPacks = (title: string): AppThunkType =>\r\n    (dispatch) => {\r\n        dispatch(changeStatusAC(\"loading\"))\r\n        packsApi.createPacks(title)\r\n            .then(response => {\r\n                dispatch(setPacks())\r\n                dispatch(changeStatusAC(\"succeeded\"))\r\n            })\r\n            .catch((e) => {\r\n                const error = e.response\r\n                    ? e.response.data.error\r\n                    : (e.message + ', more details in the console');\r\n                dispatch(changeStatusAC(\"failed\"))\r\n                toast.error(error)\r\n            })\r\n    }\r\n\r\nexport const deletePacks = (_id: string): AppThunkType =>\r\n    (dispatch) => {\r\n        dispatch(changeStatusAC(\"loading\"))\r\n        dispatch(setEntityStatusPacksAC(\"loading\", _id))\r\n        packsApi.deletePacks(_id)\r\n            .then(response => {\r\n                dispatch(setPacks())\r\n                dispatch(changeStatusAC(\"succeeded\"))\r\n                dispatch(setEntityStatusPacksAC(\"succeeded\", _id))\r\n            })\r\n            .catch((e) => {\r\n                const error = e.response\r\n                    ? e.response.data.error\r\n                    : (e.message + ', more details in the console');\r\n                dispatch(setEntityStatusPacksAC(\"failed\", _id))\r\n                dispatch(changeStatusAC(\"failed\"))\r\n                toast.error(error)\r\n            })\r\n    }\r\n\r\nexport const updatePacks = (_id: string, name: string): AppThunkType =>\r\n    (dispatch) => {\r\n        dispatch(changeStatusAC(\"loading\"))\r\n        dispatch(setEntityStatusPacksAC(\"loading\", _id))\r\n        packsApi.updatePacks(_id, name)\r\n            .then(response => {\r\n                dispatch(setPacks())\r\n                dispatch(changeStatusAC(\"succeeded\"))\r\n                dispatch(setEntityStatusPacksAC(\"succeeded\", _id))\r\n            })\r\n            .catch((e) => {\r\n                const error = e.response\r\n                    ? e.response.data.error\r\n                    : (e.message + ', more details in the console');\r\n                dispatch(setEntityStatusPacksAC(\"failed\", _id))\r\n                dispatch(changeStatusAC(\"failed\"))\r\n                toast.error(error)\r\n            })\r\n    }\r\n\r\n// Types\r\nexport type InitialStateType = ResponseDataType & {\r\n    activeModal: boolean\r\n}\r\nexport type EntityStatusType = 'idle' | 'loading' | 'succeeded' | 'failed'\r\nexport type PacksActionsType =\r\n    | ReturnType<typeof setPacksAC>\r\n    | ReturnType<typeof setEntityStatusPacksAC>\r\n    | ReturnType<typeof setActiveModalAC>\r\n    | ReturnType<typeof setCurrentPageAC>\r\n    | ReturnType<typeof setPacksTotalCountAC>\r\n\r\n\r\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport thunk, {ThunkAction} from \"redux-thunk\";\r\nimport {LoginActionsType, loginReducer} from \"../../../n2-features/f1-auth/a1-login/login-reducer\";\r\nimport {RegisterActionsType, registerReducer} from \"../../../n2-features/f1-auth/a2-register/register-reducer\";\r\nimport {recoveryPasswordReducer} from \"../../../n2-features/f1-auth/a3-recoveryPassword/recoveryPassword-reducer\";\r\nimport {newPasswordReducer} from \"../../../n2-features/f1-auth/a4-new-password/newPassword-reducer\";\r\nimport {profileReducer} from \"../../../n2-features/f1-auth/a5-profile/profile-reducer\";\r\nimport {AppActionsType, appReducer} from \"../../m1-ui/u1-app/app-reducer\";\r\nimport {PacksActionsType, packsReducer} from \"../../m1-ui/u2-components/Packs/packs-reducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    app: appReducer,\r\n    login: loginReducer,\r\n    register: registerReducer,\r\n    recoveryPassword: recoveryPasswordReducer,\r\n    newPassword: newPasswordReducer,\r\n    profile: profileReducer,\r\n    packs: packsReducer\r\n})\r\n\r\nexport type AppActionType =\r\n    | RegisterActionsType\r\n    | LoginActionsType\r\n    | AppActionsType\r\n    | PacksActionsType;\r\n\r\nexport type AppThunkType<ReturnType = void> = ThunkAction<ReturnType,\r\n    AppRootStateType,\r\n    unknown,\r\n    AppActionType>\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk))\r\n\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\n\r\n// @ts-ignore\r\nwindow.store = store // for dev","import {recoveryPasswordApi} from \"../../../n3-dall/api/api_cards\";\r\nimport {Dispatch} from \"redux\";\r\nimport {changeStatusAC} from \"../../../n1-main/m1-ui/u1-app/app-reducer\";\r\nimport {toast} from \"react-hot-toast\";\r\n\r\nexport const recoveryPasswordReducer = (state: any, action: any): any => {\r\n    switch (action.type) {\r\n        default:\r\n            return {...state}\r\n    }\r\n}\r\n\r\nexport const passwordRecovery = (email: string, from: string, message: {}) => (dispatch: Dispatch) => {\r\n    dispatch(changeStatusAC(\"loading\"))\r\n    recoveryPasswordApi.passwordRecovery(email, from, message)\r\n        .then(response => {\r\n            toast.success('Instructions send your mail')\r\n            dispatch(changeStatusAC(\"succeeded\"))\r\n        })\r\n        .catch((e) => {\r\n            const error = e.response\r\n                ? e.response.data.error\r\n                : (e.message + ', more details in the console');\r\n            dispatch(changeStatusAC(\"failed\"))\r\n            toast.error(error)\r\n        })\r\n}","// Reducer\r\nexport const profileReducer = (state: any, action: any): any => {\r\n    switch (action.type) {\r\n        default:\r\n            return {...state}\r\n    }\r\n}\r\n\r\n// Actions\r\n// Types\r\n// Initial State\r\n// Action Creators\r\n// Thunk Creators","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        // type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange,\r\n        className,\r\n        onKeyPress,\r\n        onChangeText,\r\n        onEnter,\r\n        error,\r\n        spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value);\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter() // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\r\n    const finalInputClassName = `${s.input} ${error ? s.errorInput : ''} ${className}` // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                // type={'text'}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red,\r\n        className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${s.button} ${red ? s.red : ''}`\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange,\r\n        onChangeChecked,\r\n        className,\r\n        spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e);\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)// сделайте так чтоб работал onChange и onChangeChecked\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n    return (\r\n        <label className={s.label}>\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n            <input\r\n                type={'checkbox'}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            \r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import React from 'react'\r\nimport s from './Preloader.module.css'\r\n\r\nexport const Preloader = () => {\r\n    return <div className={s.loaderWrapper}>\r\n        <div className={s.loader}/>\r\n    </div>\r\n}","import {useFormik} from \"formik\";\r\nimport {useState} from \"react\";\r\nimport s from './CommonForm.module.css';\r\nimport SuperInputText from \"../Super-Components/c1-SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../Super-Components/c2-SuperButton/SuperButton\";\r\nimport SuperCheckbox from \"../Super-Components/c3-SuperCheckbox/SuperCheckbox\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../m2-bll/store/redux-store\";\r\nimport {StatusType} from \"../../u1-app/app-reducer\";\r\nimport {Preloader} from \"../Super-Components/c7-Preloader/Preloader\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {Toaster} from 'react-hot-toast';\r\n\r\ntype FormikErrorType = {\r\n    email?: string\r\n    password?: string\r\n    confirmPassword?: string\r\n}\r\n\r\ntype FormPropsType = {\r\n    type: 'Login' | 'Register' | 'Recovery password' | 'New password'\r\n    callBack: (values: any) => void\r\n}\r\n\r\nexport const CommonForm = (props: FormPropsType) => {\r\n\r\n    const status = useSelector<AppRootStateType, StatusType>(state => state.app.status)\r\n    const [typeIcon, setTypeIcon] = useState<string>('password')\r\n\r\n    const showHide = () => {\r\n        setTypeIcon(typeIcon === 'text' ? 'password' : 'text')\r\n    }\r\n\r\n    // SET initial values for Formik start\r\n    let initialValues: any = null\r\n\r\n    if (props.type === 'Login') {\r\n        initialValues = {\r\n            email: '',\r\n            password: '',\r\n            rememberMe: false,\r\n        }\r\n    }\r\n\r\n    if (props.type === 'Register') {\r\n        initialValues = {\r\n            email: '',\r\n            password: '',\r\n            confirmPassword: '',\r\n        }\r\n    }\r\n\r\n    if (props.type === 'Recovery password') {\r\n        initialValues = {\r\n            email: '',\r\n        }\r\n    }\r\n\r\n    if (props.type === 'New password') {\r\n        initialValues = {\r\n            email: 'test@gmail.com',\r\n            password: '',\r\n            confirmPassword: '',\r\n        }\r\n    }\r\n\r\n    // SET initial values for Formik end\r\n    const formik = useFormik({\r\n\r\n        initialValues,\r\n\r\n        validate: (values) => {\r\n            const errors: FormikErrorType = {};\r\n            if (!values.email) {\r\n                errors.email = 'Email is required';\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = 'Invalid email address';\r\n            }\r\n\r\n            if (props.type === 'Login' || props.type === 'Register' || props.type === 'New password') { // Check PASSWORD field only if form for Login or Register or New password\r\n                if (!values.password) {\r\n                    errors.password = 'Password is required';\r\n                } else if (!/(?=.*[0-9])/gi.test(values.password)) {\r\n                    errors.password = 'The password must contain at least one number'\r\n                } else if (!/(?=.*[a-z])(?=.*[A-Z])/gi.test(values.password)) {\r\n                    errors.password = 'The password  must contain at least one lowercase or uppercase Latin letter'\r\n                } else if (!/[0-9a-zA-Z!@#$%^&*]{8,}/gi.test(values.password)) {\r\n                    errors.password = 'The password must have a minimum 8 characters'\r\n                }\r\n            }\r\n\r\n            if (props.type === 'Register' || props.type === 'New password'\r\n            ) { // Check CONFIRM PASSWORD field only if form for Register or New password\r\n                if (!values.confirmPassword) {\r\n                    errors.confirmPassword = 'Confirm password is required';\r\n                } else if (values.password !== values.confirmPassword) {\r\n                    errors.confirmPassword = 'The password and confirm password fields do not match.';\r\n                }\r\n            }\r\n\r\n            return errors;\r\n        },\r\n        onSubmit: values => {\r\n            props.callBack(values)\r\n            formik.resetForm();\r\n        },\r\n    });\r\n\r\n    // Reusable Email Field\r\n    const emailField = () => {\r\n        return <>\r\n            <div className={s.inputFormCommon}>\r\n                <label htmlFor=\"email\"/>\r\n                <SuperInputText\r\n                    id=\"email\"\r\n                    type=\"email\"\r\n                    placeholder='e-mail'\r\n                    {...formik.getFieldProps('email')}\r\n                />\r\n                {formik.errors.email && formik.touched.email &&\r\n                <div className={s.errorMessage}>{formik.errors.email}</div>}\r\n            </div>\r\n        </>\r\n    }\r\n    // Reusable Password Field\r\n    const passwordField = () => {\r\n        return <>\r\n            <div className={s.inputFormCommon}>\r\n                <label htmlFor=\"password\"/>\r\n                <SuperInputText\r\n                    id=\"password\"\r\n                    placeholder='password'\r\n                    type={typeIcon}\r\n                    {...formik.getFieldProps('password')}\r\n                />\r\n                <span className={s.showHideMenu}\r\n                      onClick={showHide}>{typeIcon === 'text' ? '🔒' : '🔑'}</span>\r\n                {formik.errors.password && formik.touched.password &&\r\n                <div className={s.errorMessage}>{formik.errors.password}</div>}\r\n            </div>\r\n        </>\r\n    }\r\n    // Reusable Confirm Password Field\r\n    const confirmPasswordField = () => {\r\n        return <>\r\n            <div className={s.inputFormCommon}>\r\n                <label htmlFor=\"confirmPassword\"/>\r\n                <SuperInputText\r\n                    type=\"password\"\r\n                    placeholder='confirm password'\r\n                    {...formik.getFieldProps('confirmPassword')}\r\n                />\r\n                {formik.errors.confirmPassword && formik.touched.confirmPassword &&\r\n                <div className={s.errorMessage}>{formik.errors.confirmPassword}</div>}\r\n            </div>\r\n        </>\r\n    }\r\n    // Reusable Checkbox Field\r\n    const checkBoxField = () => {\r\n        return <>\r\n            <div className={s.checkBoxFormCommon}>\r\n                <label htmlFor=\"rememberMe\"/>\r\n                <SuperCheckbox\r\n                    id=\"rememberMe\"\r\n                    type=\"checkbox\"\r\n                    children={'Remember me'}\r\n                    //placeholder='confirm password'\r\n                    {...formik.getFieldProps('rememberMe')}\r\n                />\r\n            </div>\r\n        </>\r\n    }\r\n    // Reusable Button\r\n    const submitButton = (title: string) => {\r\n        return <>\r\n            <div className={s.commonFormButton}>\r\n                <SuperButton\r\n                    disabled={status === \"loading\"}\r\n                    className={s.button}\r\n                    type=\"submit\">{title}\r\n                </SuperButton>\r\n            </div>\r\n        </>\r\n    }\r\n\r\n    // Form Generator\r\n    const formGenerator = () => {\r\n        switch (props.type) {\r\n            case 'Login' :\r\n                return <>\r\n                    {emailField()}\r\n                    {passwordField()}\r\n                    {checkBoxField()}\r\n                    {submitButton('Login')}\r\n                </>\r\n            case 'Register' :\r\n                return <>\r\n                    {emailField()}\r\n                    {passwordField()}\r\n                    {confirmPasswordField()}\r\n                    {submitButton('Register')}\r\n                </>\r\n            case 'Recovery password' :\r\n                return <>\r\n                    {emailField()}\r\n                    {submitButton('Send')}\r\n                </>\r\n            case 'New password' :\r\n                return <>\r\n                    {passwordField()}\r\n                    {confirmPasswordField()}\r\n                    {submitButton('Send')}\r\n                </>\r\n            default :\r\n                return <>\r\n                    {emailField()}\r\n                    {passwordField()}\r\n                    {confirmPasswordField()}\r\n                    {submitButton('N/A')}\r\n                </>\r\n        }\r\n    }\r\n\r\n    const formTitle = (type: string) => {\r\n        switch (type) {\r\n            case 'Login':\r\n                return 'Sign In'\r\n            case 'Register':\r\n                return 'Sign Up'\r\n            case 'Recovery password':\r\n                return 'Recover Password'\r\n            case 'New password':\r\n                return 'New Password'\r\n            default:\r\n                return ''\r\n        }\r\n    }\r\n\r\n    const formDescription = (type: string) => {\r\n        switch (type) {\r\n            case 'Register':\r\n                return 'Please fill in the form below'\r\n            case 'Recovery password':\r\n                return 'Please, enter your email';\r\n            case 'New password':\r\n                return 'Please, enter and confirm your new password'\r\n            default:\r\n                return ''\r\n        }\r\n    }\r\n\r\n    const loginAdditionalField = (type: string) => {\r\n        switch (type) {\r\n            case 'Login':\r\n                return <div className={s.loginAdditionalField}>\r\n                    <NavLink to='/recovery'>Forgot your password?</NavLink>\r\n                    <NavLink to='/register'>Go to sign up</NavLink>\r\n                </div>\r\n            default:\r\n                return null;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div><Toaster/></div>\r\n            {status === \"loading\" && <Preloader/>}\r\n            <div className={s.commonForm}>\r\n                <div className={s.wrapper}>\r\n                    {/* Form Title */}\r\n                    <span className={s.formTitle}>{formTitle(props.type)}</span>\r\n                    {/* Form Description */}\r\n                    <span className={s.formDescription}>{formDescription(props.type)}</span>\r\n\r\n                    <form onSubmit={formik.handleSubmit}>\r\n                        {/* Form generator function */}\r\n                        {formGenerator()}\r\n                    </form>\r\n                    {/* Form additional field*/}\r\n                    {loginAdditionalField(props.type)}\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}","import {useDispatch, useSelector} from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {loginTC} from \"./login-reducer\";\r\nimport {AppRootStateType} from \"../../../n1-main/m2-bll/store/redux-store\";\r\nimport {CommonForm} from \"../../../n1-main/m1-ui/u3-common/CommonForm/CommonForm\";\r\n\r\nexport const Login = () => {\r\n\r\n\r\n    const dispatch = useDispatch();\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.login.isLoggedIn)\r\n\r\n    const callBackHandler = (values: any) => {\r\n        dispatch(loginTC(values.email, values.password, values.rememberMe))\r\n    }\r\n\r\n    if (isLoggedIn) {\r\n        return <Redirect to={'/profile'}/>\r\n    }\r\n\r\n\r\n    return <CommonForm type={'Login'} callBack={callBackHandler}/>\r\n}","import {useDispatch} from \"react-redux\";\r\nimport {passwordRecovery} from \"./recoveryPassword-reducer\";\r\nimport {CommonForm} from \"../../../n1-main/m1-ui/u3-common/CommonForm/CommonForm\";\r\n\r\nexport const RecoveryPassword = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const from = \"test-front-admin <ai73a@yandex.by>\"\r\n    const message =\r\n        `<div>\r\n                Please, click on the link and enter a new password\r\n            <a href='https://hrudkouski.github.io/friday_teamwork_project/#/new-password/$token$'>Go to recovery password</a> \r\n        </div>`\r\n\r\n    const recoveryCallBackHandler = (values: any) => {\r\n        dispatch(passwordRecovery(values.email, from, message))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <CommonForm type={'Recovery password'} callBack={recoveryCallBackHandler}/>\r\n        </>\r\n    )\r\n}","import {useDispatch, useSelector} from \"react-redux\";\r\nimport {Redirect, useParams } from \"react-router-dom\";\r\nimport {AppRootStateType} from \"../../../n1-main/m2-bll/store/redux-store\";\r\nimport {StatusType} from \"../../../n1-main/m1-ui/u1-app/app-reducer\";\r\nimport {Preloader} from \"../../../n1-main/m1-ui/u3-common/Super-Components/c7-Preloader/Preloader\";\r\nimport {CommonForm} from \"../../../n1-main/m1-ui/u3-common/CommonForm/CommonForm\";\r\nimport {newPassword} from \"./newPassword-reducer\";\r\n\r\nexport const NewPassword = () => {\r\n    const dispatch = useDispatch()\r\n    const {token} = useParams<{token: string}>()\r\n    const isPasswordChanged = useSelector<AppRootStateType, boolean>(state => state.newPassword.isPasswordChanged)\r\n    const status = useSelector<AppRootStateType, StatusType>(state => state.app.status)\r\n\r\n    const newPasswordCallBack = (values: any) => {\r\n        dispatch(newPassword(values.password, token))\r\n    }\r\n\r\n    if(isPasswordChanged) {\r\n        return <Redirect to={\"/login\"}/>\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {status === \"loading\" && <Preloader/>}\r\n            <CommonForm type={'New password'} callBack={newPasswordCallBack}/>\r\n        </>\r\n    )\r\n}\r\n","import React, {DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState} from 'react'\nimport SuperInputText from '../c1-SuperInputText/SuperInputText'\nimport s from './SuperSpan.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n// тип пропсов обычного спана\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n\n    spanProps?: DefaultSpanPropsType // пропсы для спана\n}\n\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\n    {\n        autoFocus, // игнорировать изменение этого пропса\n        onBlur,\n        onEnter,\n        spanProps,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const [editMode, setEditMode] = useState<boolean>(false)\n    const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {}\n\n    const onEnterCallback = () => {\n        setEditMode(false)\n        // выключить editMode при нажатии Enter\n        onEnter && onEnter()\n    }\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\n        setEditMode(false) // выключить editMode при нажатии за пределами инпута\n        onBlur && onBlur(e)\n    }\n    const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\n        setEditMode(true) // включить editMode при двойном клике\n        onDoubleClick && onDoubleClick(e)\n    }\n\n    const spanClassName = `${s.superSpan} ${className}`\n\n    return (\n        <>\n            {editMode\n                ? (\n                    <SuperInputText\n                        autoFocus // пропсу с булевым значением не обязательно указывать true\n                        onBlur={onBlurCallback}\n                        onEnter={onEnterCallback}\n\n                        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n                    />\n                ) : (\n                    <span\n                        onDoubleClick={onDoubleClickCallBack}\n                        className={spanClassName}\n\n                        {...restSpanProps}\n                    >\n                        {/*если нет захардкодженного текста для спана, то значение инпута*/}\n                        {children || restProps.value}\n                    </span>\n                )\n            }\n        </>\n    )\n}\n\nexport default SuperEditableSpan\n","import React, {SelectHTMLAttributes, DetailedHTMLProps, ChangeEvent} from 'react'\nimport s from './SuperSelect.module.css'\n\ntype DefaultSelectPropsType = DetailedHTMLProps<SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>\n\ntype SuperSelectPropsType = DefaultSelectPropsType & {\n    options?: string[]\n    onChangeOption?: (option: string) => void\n}\n\nconst SuperSelect: React.FC<SuperSelectPropsType> = (\n    {\n        options,\n        onChange,\n        onChangeOption,\n        ...restProps\n    }\n) => {\n    const mappedOptions: JSX.Element[] = options // map options with key\n        ? options.map((el, i) => {\n            return <option key={`${el}-${i}`} value={el}>{el}</option>\n        })\n        : [];\n\n    const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\n        onChange && onChange(e);\n        onChangeOption && onChangeOption(e.currentTarget.value)\n    }\n\n    return (\n        <div className={s.select}>\n            <select onChange={onChangeCallback} {...restProps}>\n                {mappedOptions}\n            </select>\n        </div>\n    )\n}\n\nexport default SuperSelect\n","import React, {ChangeEvent, InputHTMLAttributes, DetailedHTMLProps} from 'react'\nimport s from './../c3-SuperCheckbox/SuperCheckbox.module.css'\n\ntype DefaultRadioPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperRadioPropsType = DefaultRadioPropsType & {\n    options?: string[]\n    onChangeOption?: (option: string) => void\n}\n\nconst SuperRadio: React.FC<SuperRadioPropsType> = (\n    {\n        type, name,\n        options, value,\n        onChange, onChangeOption,\n        ...restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange && onChange(e);\n        onChangeOption && onChangeOption(e.currentTarget.value)\n    }\n\n\n    const mappedOptions: JSX.Element[] = options ? options.map((el, i) => ( // map options with key\n        <label key={`${name}-${i}`}>\n            <input\n                type={'radio'}\n                name={name}\n                checked={el === value}\n                value={el}\n                onChange={onChangeCallback}\n                className={s.checkbox}\n                {...restProps}\n            />\n            {el}\n        </label>\n    )) : []\n\n    return (\n        <>\n            {mappedOptions}\n        </>\n    )\n}\n\nexport default SuperRadio\n","import {useState} from \"react\";\r\nimport SuperInputText from \"../../n1-main/m1-ui/u3-common/Super-Components/c1-SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../../n1-main/m1-ui/u3-common/Super-Components/c2-SuperButton/SuperButton\";\r\nimport SuperCheckbox from \"../../n1-main/m1-ui/u3-common/Super-Components/c3-SuperCheckbox/SuperCheckbox\";\r\nimport SuperEditableSpan from \"../../n1-main/m1-ui/u3-common/Super-Components/c4-SuperEditableSpan/SuperEditableSpan\";\r\nimport SuperSelect from \"../../n1-main/m1-ui/u3-common/Super-Components/c5-SuperSelect/SuperSelect\";\r\nimport SuperRadio from \"../../n1-main/m1-ui/u3-common/Super-Components/c6-SuperRadio/SuperRadio\";\r\n\r\nconst arr = ['Tim', 'Nikolay', 'Nikita']\r\n\r\n\r\nexport const Test = () => {\r\n    const [value, setValue] = useState<string>('')\r\n    const [selections, onChangeOption] = useState(arr[1])\r\n\r\n    return (\r\n        <>\r\n            <SuperInputText/>\r\n            <SuperCheckbox/>\r\n            <SuperButton>\r\n                Click here\r\n            </SuperButton>\r\n            <SuperEditableSpan\r\n                value={value}\r\n                onChangeText={setValue}\r\n                spanProps={{children: value ? undefined : 'enter text...'}}\r\n            />\r\n            <SuperSelect\r\n                options={arr}\r\n                value={selections}\r\n                onChangeOption={onChangeOption}\r\n            />\r\n            <SuperRadio\r\n                name={'radio'}\r\n                options={arr}\r\n                value={selections}\r\n                onChangeOption={onChangeOption}\r\n            />\r\n        </>\r\n    )\r\n}","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport s from './Error404.module.css'\r\n\r\nexport const Error404 = () => {\r\n    return <div>\r\n        <div className={s.c}>\r\n            <div className={s._404}>404</div>\r\n            <div className={s._1}>THE PAGE</div>\r\n            <div className={s._2}>WAS NOT FOUND</div>\r\n            <NavLink className={s.btn} to='/profile'>&#8592;BACK TO PROFILE</NavLink>\r\n        </div>\r\n    </div>\r\n}","import {useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../m2-bll/store/redux-store\";\r\nimport {ProfileResponseType} from \"../../../../n2-features/f1-auth/a1-login/login-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {StatusType} from \"../../u1-app/app-reducer\";\r\nimport p from './Profile.module.css'\r\nimport {Preloader} from \"../../u3-common/Super-Components/c7-Preloader/Preloader\";\r\n\r\nexport const Profile = () => {\r\n\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.login.isLoggedIn)\r\n    const status = useSelector<AppRootStateType, StatusType>(state => state.app.status)\r\n    const profile = useSelector<AppRootStateType, ProfileResponseType>(state => state.login.profile)\r\n\r\n\r\n    if (!isLoggedIn) {\r\n        return <Redirect to={'/login'}/>\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {status === \"loading\" && <Preloader/>}\r\n            <div className={p.profile}>\r\n                \r\n                <h2 className={p.title}>Profile Page</h2>\r\n                <div className={p.greeting}>Hello, {profile.name}</div>\r\n                <div className={p.numberOfPacks}>You have {profile.publicCardPacksCount} packs.</div>\r\n\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}","import {useDispatch, useSelector} from \"react-redux\";\r\nimport {registerUser} from \"./register-reducer\";\r\nimport {AppRootStateType} from \"../../../n1-main/m2-bll/store/redux-store\";\r\nimport {CommonForm} from \"../../../n1-main/m1-ui/u3-common/CommonForm/CommonForm\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nexport const Register = () => {\r\n\r\n    const isRegister = useSelector<AppRootStateType, boolean>(state => state.register.isRegister)\r\n    const dispatch = useDispatch();\r\n\r\n    const registerCallBackHandler = (values: any) => {\r\n        dispatch(registerUser(values.email, values.password))\r\n    }\r\n\r\n    if (isRegister) {\r\n        return <Redirect to={'/login'}/>\r\n    }\r\n\r\n    return <CommonForm type={'Register'} callBack={registerCallBackHandler}/>\r\n}\r\n","import {ChangeEvent, MouseEvent, useState} from \"react\";\r\nimport s from \"../ModalWindow.module.css\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport SuperInputText from \"../../Super-Components/c1-SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../../Super-Components/c2-SuperButton/SuperButton\";\r\nimport {updatePacks} from \"../../../u2-components/Packs/packs-reducer\";\r\n\r\ntype UpdatePacksType = {\r\n    activeModalUpdate: boolean\r\n    setActive: (active: boolean) => void\r\n    id: string\r\n}\r\n\r\nexport const UpdatePacksModalWindow = (props: UpdatePacksType) => {\r\n\r\n    const [title, setTitle] = useState('')\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const updatePackHandler = () => {\r\n        dispatch(updatePacks(props.id, title))\r\n        if (title !== '') {\r\n            setTitle('')\r\n        }\r\n        props.setActive(false)\r\n    }\r\n\r\n    const updateTitleHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setTitle(e.currentTarget.value)\r\n    }\r\n\r\n    const activeModalHandler = () => props.setActive(false)\r\n    const stopActiveModal = (e: MouseEvent<HTMLDivElement>) => e.stopPropagation()\r\n\r\n    return (\r\n        <div className={s.modalContainer} onClick={activeModalHandler}>\r\n            <div className={s.modalContent} onClick={stopActiveModal}>\r\n                <div className={s.title}>Please, update name of pack</div>\r\n                <SuperInputText type=\"text\"\r\n                                value={title}\r\n                                onChange={updateTitleHandler}\r\n                                autoFocus/>\r\n                <SuperButton type={\"submit\"} onClick={updatePackHandler}>OK</SuperButton>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import {CardPacksDataType} from \"../../../../../n3-dall/api/api_cards\";\r\nimport {useState} from \"react\";\r\nimport SuperButton from \"../../../u3-common/Super-Components/c2-SuperButton/SuperButton\";\r\nimport {UpdatePacksModalWindow} from \"../../../u3-common/ModalWindow/UpdatePacks/UpdatePacksModalWindow\";\r\n\r\ntype PackPropsType = {\r\n    pack: CardPacksDataType\r\n    deletePacks: (id: string) => void\r\n}\r\n\r\nexport const Pack = (props: PackPropsType) => {\r\n\r\n    const [activeModal, setActiveModal] = useState(false)\r\n\r\n    const time = props.pack.created.slice(11, -8)\r\n    const deletePacksHandler = () => {\r\n        props.deletePacks(props.pack._id)\r\n    }\r\n\r\n    const openModalWindow = () => {\r\n        setActiveModal(true)\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <td>{props.pack.user_name}</td>\r\n            <td>{props.pack.name}</td>\r\n            <td>{props.pack.cardsCount}</td>\r\n            <td>{time}</td>\r\n            <td><SuperButton>View</SuperButton></td>\r\n            <td><SuperButton>Train</SuperButton></td>\r\n            <td>\r\n                <SuperButton onClick={openModalWindow}\r\n                             disabled={props.pack.entityStatus === \"loading\"}>\r\n                    Update\r\n                </SuperButton>\r\n            </td>\r\n            <td>\r\n                <SuperButton onClick={deletePacksHandler}\r\n                             disabled={props.pack.entityStatus === \"loading\"}>Delete\r\n                </SuperButton>\r\n            </td>\r\n            {activeModal && <UpdatePacksModalWindow activeModalUpdate={activeModal}\r\n                                                    id={props.pack._id}\r\n                                                    setActive={setActiveModal}\r\n            />}\r\n        </>\r\n\r\n    )\r\n}","import {ChangeEvent, MouseEvent, useState} from \"react\";\r\nimport s from \"../ModalWindow.module.css\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport SuperInputText from \"../../Super-Components/c1-SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../../Super-Components/c2-SuperButton/SuperButton\";\r\nimport {createPacks} from \"../../../u2-components/Packs/packs-reducer\";\r\n\r\ntype CreatePacksType = {\r\n    activeModalAdd: boolean\r\n    setActive: (active: boolean) => void\r\n}\r\n\r\nexport const CreatePackModalWindow = (props: CreatePacksType) => {\r\n\r\n    const [title, setTitle] = useState('')\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const createCardsHandler = () => {\r\n        dispatch(createPacks(title))\r\n        if (title !== '') {\r\n            setTitle('')\r\n        }\r\n        props.setActive(false)\r\n    }\r\n\r\n    const changeTitleHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setTitle(e.currentTarget.value)\r\n    }\r\n\r\n    const activeModalHandler = () => props.setActive(false)\r\n    const stopActiveModal = (e: MouseEvent<HTMLDivElement>) => e.stopPropagation()\r\n\r\n    return (\r\n        <div className={s.modalContainer} onClick={activeModalHandler}>\r\n            <div className={s.modalContent} onClick={stopActiveModal}>\r\n                <div className={s.title}>Please, enter the name of the pack</div>\r\n                <SuperInputText type=\"text\"\r\n                                value={title}\r\n                                onChange={changeTitleHandler}\r\n                                autoFocus/>\r\n                <SuperButton type={\"submit\"} onClick={createCardsHandler}>OK</SuperButton>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport ReactPaginate from 'react-paginate'\r\nimport p from './Pagination.module.css'\r\n\r\ntype PaginationComponentPropsType = {\r\n    totalPages: number;\r\n    handlePageChange: (selectedItem: { selected: number }) => void;\r\n}\r\n\r\nexport const PaginationComponent: React.FC<PaginationComponentPropsType> = (\r\n    {\r\n        totalPages,\r\n        handlePageChange,\r\n    }\r\n) => {\r\n    return (\r\n        <div className={p.paginationBox}>\r\n            <ReactPaginate pageCount={totalPages}\r\n                           marginPagesDisplayed={3}\r\n                           pageRangeDisplayed={5}\r\n                           previousLabel={'Previous'}\r\n                           nextLabel={'Next'}\r\n                           containerClassName={p.pagination}\r\n                           activeClassName={p.active}\r\n                           onPageChange={handlePageChange}\r\n                           pageLinkClassName={p.pageLinkClassName}\r\n                           pageClassName={p.pageClassName}\r\n                           nextClassName={p.nextClassName}\r\n                           previousClassName={p.previousClassName}\r\n                           breakClassName={p.breakClassName}\r\n                           previousLinkClassName={p.previousLinkClassName}\r\n                           nextLinkClassName={p.nextLinkClassName}\r\n                           breakLinkClassName={p.breakLinkClassName}\r\n                           disabledClassName={p.disabledClassName}\r\n            />\r\n        </div>\r\n    );\r\n};","import s from \"./Packs.module.css\"\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../m2-bll/store/redux-store\";\r\nimport {CardPacksDataType} from \"../../../../n3-dall/api/api_cards\";\r\nimport {useEffect, useState} from \"react\";\r\nimport SuperButton from \"../../u3-common/Super-Components/c2-SuperButton/SuperButton\";\r\nimport {deletePacks, setCurrentPageAC, setPacks} from \"./packs-reducer\";\r\nimport {StatusType} from \"../../u1-app/app-reducer\";\r\nimport {Preloader} from \"../../u3-common/Super-Components/c7-Preloader/Preloader\";\r\nimport {Pack} from \"./Pack/Pack\";\r\nimport {Toaster} from \"react-hot-toast\";\r\nimport {CreatePackModalWindow} from \"../../u3-common/ModalWindow/CreatePacks/CreatePackModalWindow\";\r\nimport {PaginationComponent} from \"../../u3-common/Pagination/Pagination\";\r\n\r\nexport const Packs = () => {\r\n\r\n    const [activeModalAdd, setActiveModalAdd] = useState(false)\r\n\r\n    const dispatch = useDispatch();\r\n    const packs = useSelector<AppRootStateType, Array<CardPacksDataType>>(state => state.packs.cardPacks)\r\n    const status = useSelector<AppRootStateType, StatusType>(state => state.app.status)\r\n    const packsPerPage = useSelector<AppRootStateType, number>(state => state.packs.pageCount)\r\n    const cardPacksTotalCount = useSelector<AppRootStateType, number>(state => state.packs.cardPacksTotalCount)\r\n    const totalPages = Math.ceil(cardPacksTotalCount / packsPerPage)\r\n\r\n    useEffect(() => {\r\n        dispatch(setPacks())\r\n    }, [dispatch])\r\n\r\n    const openModalWindow = () => {\r\n        setActiveModalAdd(true)\r\n    }\r\n\r\n    const deletePack = (id: string) => {\r\n        dispatch(deletePacks(id))\r\n    }\r\n\r\n    const copyPacks = packs.map(c => {\r\n        return (\r\n            <tr key={c._id}>\r\n                <Pack deletePacks={deletePack}\r\n                      pack={c}/>\r\n            </tr>\r\n        )\r\n    })\r\n\r\n    const handlePageChange = (e: { selected: number }) => {\r\n        const selectedPage = e.selected + 1;\r\n        dispatch(setCurrentPageAC(selectedPage))\r\n        dispatch(setPacks())\r\n    };\r\n\r\n    return (\r\n        <div className={s.packsContainer}>\r\n            <div><Toaster/></div>\r\n            {status === \"loading\" && <Preloader/>}\r\n            {activeModalAdd && <CreatePackModalWindow activeModalAdd={activeModalAdd} setActive={setActiveModalAdd}/>}\r\n\r\n            <SuperButton onClick={openModalWindow} disabled={status === \"loading\"}>Add Cards</SuperButton>\r\n\r\n            <table>\r\n                <thead className={s.packsHeader}>\r\n                <tr>\r\n                    <th>username</th>\r\n                    <th>name</th>\r\n                    <th>count</th>\r\n                    <th>time</th>\r\n                    <th>cards</th>\r\n                    <th>train</th>\r\n                    <th/>\r\n                    <th/>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {copyPacks}\r\n                </tbody>\r\n            </table>\r\n\r\n            <PaginationComponent\r\n                handlePageChange={handlePageChange}\r\n                totalPages={totalPages}/>\r\n        </div>\r\n    )\r\n}","import {Redirect, Route, Switch} from \"react-router-dom\";\r\nimport {Login} from \"../../../n2-features/f1-auth/a1-login/Login\";\r\nimport {RecoveryPassword} from \"../../../n2-features/f1-auth/a3-recoveryPassword/RecoveryPassword\";\r\nimport {NewPassword} from \"../../../n2-features/f1-auth/a4-new-password/NewPassword\";\r\nimport {Test} from \"../../../n2-features/f0-test/Test\";\r\nimport {Error404} from \"../../../n2-features/f3-error/Error404\";\r\nimport {Profile} from \"../u2-components/Profile/Profile\";\r\nimport {Register} from \"../../../n2-features/f1-auth/a2-register/Register\";\r\nimport {Packs} from \"../u2-components/Packs/Packs\";\r\n\r\nexport const PATH = {\r\n    LOGIN: '/login',\r\n    REGISTRATION: '/register',\r\n    PROFILE: '/profile',\r\n    RECOVERY_PASSWORD: '/recovery',\r\n    NEW_PASSWORD: '/new-password',\r\n    PACKS_LIST: '/packList',\r\n    TEST: '/test',\r\n    ERROR_404: '/404',\r\n    UNKNOWN_PAGE: '*',\r\n}\r\n\r\nexport const Routes = () => {\r\n    \r\n    return (\r\n        <div>\r\n            <Switch>\r\n                <Route exact path={'/'} render={() => <Redirect to={PATH.LOGIN}/>}/>\r\n                <Route path={PATH.LOGIN} render={() => <Login/>}/>\r\n                <Route path={PATH.REGISTRATION} render={() => <Register/>}/>\r\n                <Route path={PATH.PROFILE} render={() => <Profile/>}/>\r\n                <Route path={PATH.RECOVERY_PASSWORD} render={() => <RecoveryPassword/>}/>\r\n                <Route path={`${PATH.NEW_PASSWORD}/:token`} render={() => <NewPassword/>}/>\r\n                <Route path={PATH.PACKS_LIST} render={() => <Packs/>}/>\r\n                <Route path={PATH.TEST} render={() => <Test/>}/>\r\n                <Route path={PATH.ERROR_404} render={() => <Error404/>}/>\r\n                <Redirect from={PATH.UNKNOWN_PAGE} to={PATH.ERROR_404}/>\r\n            </Switch>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport { logOutTC } from \"../../../../n2-features/f1-auth/a1-login/login-reducer\";\r\nimport { AppRootStateType } from \"../../../m2-bll/store/redux-store\";\r\nimport { StatusType } from \"../../u1-app/app-reducer\";\r\nimport SuperButton from \"../../u3-common/Super-Components/c2-SuperButton/SuperButton\";\r\nimport h from './Header.module.css'\r\n\r\nexport const Header = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const islogedIn = useSelector<AppRootStateType, boolean>(state => state.login.isLoggedIn)\r\n    const status = useSelector<AppRootStateType, StatusType>(state => state.app.status)\r\n\r\n    const logOutHandler = () => {\r\n        dispatch(logOutTC())\r\n    }\r\n\r\n    return (\r\n        <div className={h.header}>\r\n                    \r\n            <div>\r\n                <NavLink\r\n                    className={h.link}\r\n                    activeClassName={h.activeLink}\r\n                    to={'/register'}>Sign up\r\n                </NavLink>\r\n                \r\n            \r\n                    <NavLink\r\n                        className={!islogedIn ? h.link : h.linkDisabled}\r\n                        activeClassName={h.activeLink}\r\n                        to={'/login'}>Sign in\r\n                    </NavLink>\r\n            \r\n                    <NavLink\r\n                        className={islogedIn ? h.link : h.linkDisabled}\r\n                        activeClassName={h.activeLink}\r\n                        to={'/profile'}>Profile\r\n                    </NavLink>\r\n            \r\n\r\n                <NavLink\r\n                    className={islogedIn ? h.link : h.linkDisabled}\r\n                    activeClassName={h.activeLink}\r\n                    to={'/packList'}>Packs List\r\n                </NavLink>\r\n            </div>\r\n\r\n            {/* Sign Out Button Shows only while Signed In */}\r\n            <div>\r\n                {islogedIn &&\r\n                \r\n                <NavLink to={'/login'}>\r\n                    <SuperButton\r\n                        red\r\n                        disabled={status === \"loading\"}\r\n                        onClick={logOutHandler}>SIGN OUT\r\n                    </SuperButton>\r\n                </NavLink>\r\n                }\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}","import { Routes } from \"../../u4-routes/Routes\";\r\nimport {Header} from \"../Header/Header\";\r\nimport m from './Main.module.css'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {useEffect} from \"react\";\r\nimport { isInitializedTC } from \"../../u1-app/app-reducer\";\r\nimport { AppRootStateType } from \"../../../m2-bll/store/redux-store\";\r\nimport { Preloader } from \"../../u3-common/Super-Components/c7-Preloader/Preloader\";\r\n\r\n\r\nexport const Main = () => {\r\n\r\n    const isInitialized = useSelector<AppRootStateType, boolean>(state => state.app.isInitialized)\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n         dispatch(isInitializedTC())\r\n    }, [dispatch])\r\n\r\n    if(!isInitialized){\r\n        return <Preloader />\r\n    }\r\n\r\n    return (\r\n        <div className={m.main}>\r\n            <div className={m.container}>\r\n                <Header/>\r\n                <Routes/>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport {Provider} from 'react-redux';\r\nimport {HashRouter} from 'react-router-dom';\r\nimport {store} from '../../m2-bll/store/redux-store';\r\nimport {Main} from '../u2-components/Main/Main';\r\nimport a from './App.module.css'\r\n\r\nconst App = () => {\r\n    return (\r\n        <div className={a.app}>\r\n            <HashRouter>\r\n                <Provider store={store}>\r\n                    <Main/>\r\n                </Provider>\r\n            </HashRouter>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './n1-main/m1-ui/u1-app/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"commonForm\":\"CommonForm_commonForm__3qF3n\",\"wrapper\":\"CommonForm_wrapper__2nfvC\",\"formTitle\":\"CommonForm_formTitle__cxBfE\",\"formDescription\":\"CommonForm_formDescription__iEjJr\",\"inputFormCommon\":\"CommonForm_inputFormCommon__37EZe\",\"checkBoxFormCommon\":\"CommonForm_checkBoxFormCommon__NFPvy\",\"errorMessage\":\"CommonForm_errorMessage__3yU_n\",\"showHideMenu\":\"CommonForm_showHideMenu__1IINR\",\"commonFormButton\":\"CommonForm_commonFormButton__kccne\",\"loginAdditionalField\":\"CommonForm_loginAdditionalField__2Fz3Z\"};"],"sourceRoot":""}